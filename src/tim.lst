ARM GAS  /tmp/ccD5vHri.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"tim.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.2.1 20151202 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./src -I ./cmsis_boot -I ./cmsis_core
  18              	@ -imultilib armv6-m
  19              	@ -iprefix /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/
  20              	@ -isysroot /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../arm-none-eabi
  21              	@ -D__USES_INITFINI__ -D STM32F030 src/tim.c -mcpu=cortex-m0 -mthumb
  22              	@ -auxbase-strip src/tim.o -g -gdwarf-2 -O0 -Wall -fomit-frame-pointer
  23              	@ -fdata-sections -ffunction-sections -fverbose-asm
  24              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  25              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  26              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  27              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  28              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  29              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  30              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  31              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  32              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  33              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  34              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  35              	@ -fmerge-debug-strings -fomit-frame-pointer -fpeephole
  36              	@ -fprefetch-loop-arrays -freg-struct-return
  37              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  38              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  39              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  40              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  41              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstdarg-opt
  42              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
  43              	@ -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  44              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  45              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  46              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  47              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  48              	@ -mvectorize-with-neon-quad
  49              	
  50              		.text
  51              	.Ltext0:
  52              		.cfi_sections	.debug_frame
  53              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  54              		.align	2
  55              		.code	16
  56              		.thumb_func
  57              		.type	NVIC_EnableIRQ, %function
ARM GAS  /tmp/ccD5vHri.s 			page 2


  58              	NVIC_EnableIRQ:
  59              	.LFB11:
  60              		.file 1 "./cmsis_core/core_cm0.h"
   1:./cmsis_core/core_cm0.h **** /**************************************************************************//**
   2:./cmsis_core/core_cm0.h ****  * @file     core_cm0.h
   3:./cmsis_core/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:./cmsis_core/core_cm0.h ****  * @version  V1.30
   5:./cmsis_core/core_cm0.h ****  * @date     30. October 2009
   6:./cmsis_core/core_cm0.h ****  *
   7:./cmsis_core/core_cm0.h ****  * @note
   8:./cmsis_core/core_cm0.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./cmsis_core/core_cm0.h ****  *
  10:./cmsis_core/core_cm0.h ****  * @par
  11:./cmsis_core/core_cm0.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./cmsis_core/core_cm0.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./cmsis_core/core_cm0.h ****  * within development tools that are supporting such ARM based processors. 
  14:./cmsis_core/core_cm0.h ****  *
  15:./cmsis_core/core_cm0.h ****  * @par
  16:./cmsis_core/core_cm0.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./cmsis_core/core_cm0.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./cmsis_core/core_cm0.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./cmsis_core/core_cm0.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./cmsis_core/core_cm0.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./cmsis_core/core_cm0.h ****  *
  22:./cmsis_core/core_cm0.h ****  ******************************************************************************/
  23:./cmsis_core/core_cm0.h **** 
  24:./cmsis_core/core_cm0.h **** #ifndef __CM0_CORE_H__
  25:./cmsis_core/core_cm0.h **** #define __CM0_CORE_H__
  26:./cmsis_core/core_cm0.h **** 
  27:./cmsis_core/core_cm0.h **** /** @addtogroup CMSIS_CM0_core_LintCinfiguration CMSIS CM0 Core Lint Configuration
  28:./cmsis_core/core_cm0.h ****  *
  29:./cmsis_core/core_cm0.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./cmsis_core/core_cm0.h ****  *   - not yet checked
  31:./cmsis_core/core_cm0.h ****  * .
  32:./cmsis_core/core_cm0.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  33:./cmsis_core/core_cm0.h ****  *
  34:./cmsis_core/core_cm0.h ****  */
  35:./cmsis_core/core_cm0.h **** 
  36:./cmsis_core/core_cm0.h **** 
  37:./cmsis_core/core_cm0.h **** /** @addtogroup CMSIS_CM0_core_definitions CM0 Core Definitions
  38:./cmsis_core/core_cm0.h ****   This file defines all structures and symbols for CMSIS core:
  39:./cmsis_core/core_cm0.h ****     - CMSIS version number
  40:./cmsis_core/core_cm0.h ****     - Cortex-M core registers and bitfields
  41:./cmsis_core/core_cm0.h ****     - Cortex-M core peripheral base address
  42:./cmsis_core/core_cm0.h ****   @{
  43:./cmsis_core/core_cm0.h ****  */
  44:./cmsis_core/core_cm0.h **** 
  45:./cmsis_core/core_cm0.h **** #ifdef __cplusplus
  46:./cmsis_core/core_cm0.h ****  extern "C" {
  47:./cmsis_core/core_cm0.h **** #endif 
  48:./cmsis_core/core_cm0.h **** 
  49:./cmsis_core/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  50:./cmsis_core/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  51:./cmsis_core/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16) | __CM0_CMSIS_VERSION_SUB) /*!<
  52:./cmsis_core/core_cm0.h **** 
  53:./cmsis_core/core_cm0.h **** #define __CORTEX_M                (0x00)                                                       /*!<
  54:./cmsis_core/core_cm0.h **** 
ARM GAS  /tmp/ccD5vHri.s 			page 3


  55:./cmsis_core/core_cm0.h **** #include <stdint.h>                           /* Include standard types */
  56:./cmsis_core/core_cm0.h **** 
  57:./cmsis_core/core_cm0.h **** #if defined (__ICCARM__)
  58:./cmsis_core/core_cm0.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  59:./cmsis_core/core_cm0.h **** #endif
  60:./cmsis_core/core_cm0.h **** 
  61:./cmsis_core/core_cm0.h **** 
  62:./cmsis_core/core_cm0.h **** #ifndef __NVIC_PRIO_BITS
  63:./cmsis_core/core_cm0.h ****   #define __NVIC_PRIO_BITS    2               /*!< standard definition for NVIC Priority Bits */
  64:./cmsis_core/core_cm0.h **** #endif
  65:./cmsis_core/core_cm0.h **** 
  66:./cmsis_core/core_cm0.h **** 
  67:./cmsis_core/core_cm0.h **** 
  68:./cmsis_core/core_cm0.h **** 
  69:./cmsis_core/core_cm0.h **** /**
  70:./cmsis_core/core_cm0.h ****  * IO definitions
  71:./cmsis_core/core_cm0.h ****  *
  72:./cmsis_core/core_cm0.h ****  * define access restrictions to peripheral registers
  73:./cmsis_core/core_cm0.h ****  */
  74:./cmsis_core/core_cm0.h **** 
  75:./cmsis_core/core_cm0.h **** #ifdef __cplusplus
  76:./cmsis_core/core_cm0.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
  77:./cmsis_core/core_cm0.h **** #else
  78:./cmsis_core/core_cm0.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
  79:./cmsis_core/core_cm0.h **** #endif
  80:./cmsis_core/core_cm0.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
  81:./cmsis_core/core_cm0.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
  82:./cmsis_core/core_cm0.h **** 
  83:./cmsis_core/core_cm0.h **** 
  84:./cmsis_core/core_cm0.h **** 
  85:./cmsis_core/core_cm0.h **** /*******************************************************************************
  86:./cmsis_core/core_cm0.h ****  *                 Register Abstraction
  87:./cmsis_core/core_cm0.h ****  ******************************************************************************/
  88:./cmsis_core/core_cm0.h **** /** @addtogroup CMSIS_CM0_core_register CMSIS CM0 Core Register
  89:./cmsis_core/core_cm0.h ****  @{
  90:./cmsis_core/core_cm0.h **** */
  91:./cmsis_core/core_cm0.h **** 
  92:./cmsis_core/core_cm0.h **** 
  93:./cmsis_core/core_cm0.h **** /** @addtogroup CMSIS_CM0_NVIC CMSIS CM0 NVIC
  94:./cmsis_core/core_cm0.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
  95:./cmsis_core/core_cm0.h ****   @{
  96:./cmsis_core/core_cm0.h ****  */
  97:./cmsis_core/core_cm0.h ****  /*
  98:./cmsis_core/core_cm0.h **** typedef struct
  99:./cmsis_core/core_cm0.h **** {
 100:./cmsis_core/core_cm0.h ****   __IO uint32_t ISER[1];                      //!< (Offset: 0x000) Interrupt Set Enable Register
 101:./cmsis_core/core_cm0.h ****        uint32_t RESERVED0[31];
 102:./cmsis_core/core_cm0.h ****   __IO uint32_t ICER[1];                      //!< (Offset: 0x080) Interrupt Clear Enable Register
 103:./cmsis_core/core_cm0.h ****        uint32_t RSERVED1[31];
 104:./cmsis_core/core_cm0.h ****   __IO uint32_t ISPR[1];                      //!< (Offset: 0x100) Interrupt Set Pending Register
 105:./cmsis_core/core_cm0.h ****        uint32_t RESERVED2[31];
 106:./cmsis_core/core_cm0.h ****   __IO uint32_t ICPR[1];                      //!< (Offset: 0x180) Interrupt Clear Pending Register
 107:./cmsis_core/core_cm0.h ****        uint32_t RESERVED3[31];
 108:./cmsis_core/core_cm0.h ****        uint32_t RESERVED4[64];
 109:./cmsis_core/core_cm0.h ****   __IO uint32_t IPR[8];                       //!< (Offset: 0x3EC) Interrupt Priority Register
 110:./cmsis_core/core_cm0.h **** }  NVIC_Type;
 111:./cmsis_core/core_cm0.h **** */
ARM GAS  /tmp/ccD5vHri.s 			page 4


 112:./cmsis_core/core_cm0.h **** 
 113:./cmsis_core/core_cm0.h ****  typedef struct
 114:./cmsis_core/core_cm0.h ****  {
 115:./cmsis_core/core_cm0.h ****    __IO uint32_t ISER[1];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register  
 116:./cmsis_core/core_cm0.h ****         uint32_t RESERVED0[31];
 117:./cmsis_core/core_cm0.h ****    __IO uint32_t ICER[1];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register
 118:./cmsis_core/core_cm0.h ****         uint32_t RSERVED1[31];
 119:./cmsis_core/core_cm0.h ****    __IO uint32_t ISPR[1];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register 
 120:./cmsis_core/core_cm0.h ****         uint32_t RESERVED2[31];
 121:./cmsis_core/core_cm0.h ****    __IO uint32_t ICPR[1];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Registe
 122:./cmsis_core/core_cm0.h ****         uint32_t RESERVED3[31];
 123:./cmsis_core/core_cm0.h ****         uint32_t RESERVED4[64];
 124:./cmsis_core/core_cm0.h ****    __IO uint32_t IP[8];                   /*!< Offset: 0x300 (R/W)  Interrupt Priority Register    
 125:./cmsis_core/core_cm0.h ****  }  NVIC_Type;
 126:./cmsis_core/core_cm0.h **** 
 127:./cmsis_core/core_cm0.h **** /*@}*/ /* end of group CMSIS_CM0_NVIC */
 128:./cmsis_core/core_cm0.h **** 
 129:./cmsis_core/core_cm0.h **** 
 130:./cmsis_core/core_cm0.h **** /** @addtogroup CMSIS_CM0_SCB CMSIS CM0 SCB
 131:./cmsis_core/core_cm0.h ****   memory mapped structure for System Control Block (SCB)
 132:./cmsis_core/core_cm0.h ****   @{
 133:./cmsis_core/core_cm0.h ****  */
 134:./cmsis_core/core_cm0.h **** typedef struct
 135:./cmsis_core/core_cm0.h **** {
 136:./cmsis_core/core_cm0.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 137:./cmsis_core/core_cm0.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 138:./cmsis_core/core_cm0.h ****        uint32_t RESERVED0;                                      
 139:./cmsis_core/core_cm0.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 140:./cmsis_core/core_cm0.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 141:./cmsis_core/core_cm0.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 142:./cmsis_core/core_cm0.h ****        uint32_t RESERVED1;                                      
 143:./cmsis_core/core_cm0.h ****   __IO uint32_t SHP[2];                       /*!< Offset: 0x1C  System Handlers Priority Registers
 144:./cmsis_core/core_cm0.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 145:./cmsis_core/core_cm0.h ****        uint32_t RESERVED2[2];                                   
 146:./cmsis_core/core_cm0.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 147:./cmsis_core/core_cm0.h **** } SCB_Type;                                                
 148:./cmsis_core/core_cm0.h **** 
 149:./cmsis_core/core_cm0.h **** /* SCB CPUID Register Definitions */
 150:./cmsis_core/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 151:./cmsis_core/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 152:./cmsis_core/core_cm0.h **** 
 153:./cmsis_core/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 154:./cmsis_core/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 155:./cmsis_core/core_cm0.h **** 
 156:./cmsis_core/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 157:./cmsis_core/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFul << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 158:./cmsis_core/core_cm0.h **** 
 159:./cmsis_core/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 160:./cmsis_core/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 161:./cmsis_core/core_cm0.h **** 
 162:./cmsis_core/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 163:./cmsis_core/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 164:./cmsis_core/core_cm0.h **** 
 165:./cmsis_core/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 166:./cmsis_core/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 167:./cmsis_core/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 168:./cmsis_core/core_cm0.h **** 
ARM GAS  /tmp/ccD5vHri.s 			page 5


 169:./cmsis_core/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 170:./cmsis_core/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 171:./cmsis_core/core_cm0.h **** 
 172:./cmsis_core/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 173:./cmsis_core/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 174:./cmsis_core/core_cm0.h **** 
 175:./cmsis_core/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 176:./cmsis_core/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 177:./cmsis_core/core_cm0.h **** 
 178:./cmsis_core/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 179:./cmsis_core/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 180:./cmsis_core/core_cm0.h **** 
 181:./cmsis_core/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 182:./cmsis_core/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 183:./cmsis_core/core_cm0.h **** 
 184:./cmsis_core/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 185:./cmsis_core/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 186:./cmsis_core/core_cm0.h **** 
 187:./cmsis_core/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 188:./cmsis_core/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 189:./cmsis_core/core_cm0.h **** 
 190:./cmsis_core/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 191:./cmsis_core/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 192:./cmsis_core/core_cm0.h **** 
 193:./cmsis_core/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 194:./cmsis_core/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 195:./cmsis_core/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 196:./cmsis_core/core_cm0.h **** 
 197:./cmsis_core/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 198:./cmsis_core/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 199:./cmsis_core/core_cm0.h **** 
 200:./cmsis_core/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 201:./cmsis_core/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 202:./cmsis_core/core_cm0.h **** 
 203:./cmsis_core/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 204:./cmsis_core/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 205:./cmsis_core/core_cm0.h **** 
 206:./cmsis_core/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 207:./cmsis_core/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 208:./cmsis_core/core_cm0.h **** 
 209:./cmsis_core/core_cm0.h **** /* SCB System Control Register Definitions */
 210:./cmsis_core/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 211:./cmsis_core/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 212:./cmsis_core/core_cm0.h **** 
 213:./cmsis_core/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 214:./cmsis_core/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 215:./cmsis_core/core_cm0.h **** 
 216:./cmsis_core/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 217:./cmsis_core/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 218:./cmsis_core/core_cm0.h **** 
 219:./cmsis_core/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 220:./cmsis_core/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 221:./cmsis_core/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 222:./cmsis_core/core_cm0.h **** 
 223:./cmsis_core/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 224:./cmsis_core/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 225:./cmsis_core/core_cm0.h **** 
ARM GAS  /tmp/ccD5vHri.s 			page 6


 226:./cmsis_core/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 227:./cmsis_core/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 228:./cmsis_core/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 229:./cmsis_core/core_cm0.h **** 
 230:./cmsis_core/core_cm0.h **** /* SCB Debug Fault Status Register Definitions */
 231:./cmsis_core/core_cm0.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 232:./cmsis_core/core_cm0.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 233:./cmsis_core/core_cm0.h **** 
 234:./cmsis_core/core_cm0.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 235:./cmsis_core/core_cm0.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 236:./cmsis_core/core_cm0.h **** 
 237:./cmsis_core/core_cm0.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 238:./cmsis_core/core_cm0.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 239:./cmsis_core/core_cm0.h **** 
 240:./cmsis_core/core_cm0.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 241:./cmsis_core/core_cm0.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 242:./cmsis_core/core_cm0.h **** 
 243:./cmsis_core/core_cm0.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 244:./cmsis_core/core_cm0.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 245:./cmsis_core/core_cm0.h **** /*@}*/ /* end of group CMSIS_CM0_SCB */
 246:./cmsis_core/core_cm0.h **** 
 247:./cmsis_core/core_cm0.h **** 
 248:./cmsis_core/core_cm0.h **** /** @addtogroup CMSIS_CM0_SysTick CMSIS CM0 SysTick
 249:./cmsis_core/core_cm0.h ****   memory mapped structure for SysTick
 250:./cmsis_core/core_cm0.h ****   @{
 251:./cmsis_core/core_cm0.h ****  */
 252:./cmsis_core/core_cm0.h **** typedef struct
 253:./cmsis_core/core_cm0.h **** {
 254:./cmsis_core/core_cm0.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 255:./cmsis_core/core_cm0.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 256:./cmsis_core/core_cm0.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 257:./cmsis_core/core_cm0.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 258:./cmsis_core/core_cm0.h **** } SysTick_Type;
 259:./cmsis_core/core_cm0.h **** 
 260:./cmsis_core/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 261:./cmsis_core/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 262:./cmsis_core/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 263:./cmsis_core/core_cm0.h **** 
 264:./cmsis_core/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 265:./cmsis_core/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 266:./cmsis_core/core_cm0.h **** 
 267:./cmsis_core/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 268:./cmsis_core/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 269:./cmsis_core/core_cm0.h **** 
 270:./cmsis_core/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 271:./cmsis_core/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 272:./cmsis_core/core_cm0.h **** 
 273:./cmsis_core/core_cm0.h **** /* SysTick Reload Register Definitions */
 274:./cmsis_core/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 275:./cmsis_core/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 276:./cmsis_core/core_cm0.h **** 
 277:./cmsis_core/core_cm0.h **** /* SysTick Current Register Definitions */
 278:./cmsis_core/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 279:./cmsis_core/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 280:./cmsis_core/core_cm0.h **** 
 281:./cmsis_core/core_cm0.h **** /* SysTick Calibration Register Definitions */
 282:./cmsis_core/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
ARM GAS  /tmp/ccD5vHri.s 			page 7


 283:./cmsis_core/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 284:./cmsis_core/core_cm0.h **** 
 285:./cmsis_core/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 286:./cmsis_core/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 287:./cmsis_core/core_cm0.h **** 
 288:./cmsis_core/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 289:./cmsis_core/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 290:./cmsis_core/core_cm0.h **** /*@}*/ /* end of group CMSIS_CM0_SysTick */
 291:./cmsis_core/core_cm0.h **** 
 292:./cmsis_core/core_cm0.h **** 
 293:./cmsis_core/core_cm0.h **** /** @addtogroup CMSIS_CM0_CoreDebug CMSIS CM0 Core Debug
 294:./cmsis_core/core_cm0.h ****   memory mapped structure for Core Debug Register
 295:./cmsis_core/core_cm0.h ****   @{
 296:./cmsis_core/core_cm0.h ****  */
 297:./cmsis_core/core_cm0.h **** typedef struct
 298:./cmsis_core/core_cm0.h **** {
 299:./cmsis_core/core_cm0.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 300:./cmsis_core/core_cm0.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 301:./cmsis_core/core_cm0.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 302:./cmsis_core/core_cm0.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 303:./cmsis_core/core_cm0.h **** } CoreDebug_Type;
 304:./cmsis_core/core_cm0.h **** 
 305:./cmsis_core/core_cm0.h **** /* Debug Halting Control and Status Register */
 306:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 307:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 308:./cmsis_core/core_cm0.h **** 
 309:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 310:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 311:./cmsis_core/core_cm0.h **** 
 312:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 313:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 314:./cmsis_core/core_cm0.h **** 
 315:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 316:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 317:./cmsis_core/core_cm0.h **** 
 318:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 319:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 320:./cmsis_core/core_cm0.h **** 
 321:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 322:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 323:./cmsis_core/core_cm0.h **** 
 324:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 325:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 326:./cmsis_core/core_cm0.h **** 
 327:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 328:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 329:./cmsis_core/core_cm0.h **** 
 330:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 331:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 332:./cmsis_core/core_cm0.h **** 
 333:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 334:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 335:./cmsis_core/core_cm0.h **** 
 336:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 337:./cmsis_core/core_cm0.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 338:./cmsis_core/core_cm0.h **** 
 339:./cmsis_core/core_cm0.h **** /* Debug Core Register Selector Register */
ARM GAS  /tmp/ccD5vHri.s 			page 8


 340:./cmsis_core/core_cm0.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 341:./cmsis_core/core_cm0.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 342:./cmsis_core/core_cm0.h **** 
 343:./cmsis_core/core_cm0.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 344:./cmsis_core/core_cm0.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 345:./cmsis_core/core_cm0.h **** 
 346:./cmsis_core/core_cm0.h **** /* Debug Exception and Monitor Control Register */
 347:./cmsis_core/core_cm0.h **** #define CoreDebug_DEMCR_DWTENA_Pos         24                                             /*!< Core
 348:./cmsis_core/core_cm0.h **** #define CoreDebug_DEMCR_DWTENA_Msk         (1ul << CoreDebug_DEMCR_DWTENA_Pos)            /*!< Core
 349:./cmsis_core/core_cm0.h **** 
 350:./cmsis_core/core_cm0.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 351:./cmsis_core/core_cm0.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 352:./cmsis_core/core_cm0.h **** 
 353:./cmsis_core/core_cm0.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 354:./cmsis_core/core_cm0.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 355:./cmsis_core/core_cm0.h **** /*@}*/ /* end of group CMSIS_CM0_CoreDebug */
 356:./cmsis_core/core_cm0.h **** 
 357:./cmsis_core/core_cm0.h **** 
 358:./cmsis_core/core_cm0.h **** /* Memory mapping of Cortex-M0 Hardware */
 359:./cmsis_core/core_cm0.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 360:./cmsis_core/core_cm0.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 361:./cmsis_core/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 362:./cmsis_core/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 363:./cmsis_core/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 364:./cmsis_core/core_cm0.h **** 
 365:./cmsis_core/core_cm0.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 366:./cmsis_core/core_cm0.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 367:./cmsis_core/core_cm0.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 368:./cmsis_core/core_cm0.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 369:./cmsis_core/core_cm0.h **** 
 370:./cmsis_core/core_cm0.h **** /*@}*/ /* end of group CMSIS_CM0_core_register */
 371:./cmsis_core/core_cm0.h **** 
 372:./cmsis_core/core_cm0.h **** 
 373:./cmsis_core/core_cm0.h **** /*******************************************************************************
 374:./cmsis_core/core_cm0.h ****  *                Hardware Abstraction Layer
 375:./cmsis_core/core_cm0.h ****  ******************************************************************************/
 376:./cmsis_core/core_cm0.h **** 
 377:./cmsis_core/core_cm0.h **** #if defined ( __CC_ARM   )
 378:./cmsis_core/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 379:./cmsis_core/core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 380:./cmsis_core/core_cm0.h **** 
 381:./cmsis_core/core_cm0.h **** #elif defined ( __ICCARM__ )
 382:./cmsis_core/core_cm0.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 383:./cmsis_core/core_cm0.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 384:./cmsis_core/core_cm0.h **** 
 385:./cmsis_core/core_cm0.h **** #elif defined   (  __GNUC__  )
 386:./cmsis_core/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 387:./cmsis_core/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 388:./cmsis_core/core_cm0.h **** 
 389:./cmsis_core/core_cm0.h **** #elif defined   (  __TASKING__  )
 390:./cmsis_core/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 391:./cmsis_core/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 392:./cmsis_core/core_cm0.h **** 
 393:./cmsis_core/core_cm0.h **** #endif
 394:./cmsis_core/core_cm0.h **** 
 395:./cmsis_core/core_cm0.h **** 
 396:./cmsis_core/core_cm0.h **** /* ###################  Compiler specific Intrinsics  ########################### */
ARM GAS  /tmp/ccD5vHri.s 			page 9


 397:./cmsis_core/core_cm0.h **** 
 398:./cmsis_core/core_cm0.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 399:./cmsis_core/core_cm0.h **** /* ARM armcc specific functions */
 400:./cmsis_core/core_cm0.h **** 
 401:./cmsis_core/core_cm0.h **** #define __enable_fault_irq                __enable_fiq
 402:./cmsis_core/core_cm0.h **** #define __disable_fault_irq               __disable_fiq
 403:./cmsis_core/core_cm0.h **** 
 404:./cmsis_core/core_cm0.h **** #define __NOP                             __nop
 405:./cmsis_core/core_cm0.h **** #define __WFI                             __wfi
 406:./cmsis_core/core_cm0.h **** #define __WFE                             __wfe
 407:./cmsis_core/core_cm0.h **** #define __SEV                             __sev
 408:./cmsis_core/core_cm0.h **** #define __ISB()                           __isb(0)
 409:./cmsis_core/core_cm0.h **** #define __DSB()                           __dsb(0)
 410:./cmsis_core/core_cm0.h **** #define __DMB()                           __dmb(0)
 411:./cmsis_core/core_cm0.h **** #define __REV                             __rev
 412:./cmsis_core/core_cm0.h **** 
 413:./cmsis_core/core_cm0.h **** 
 414:./cmsis_core/core_cm0.h **** /* intrinsic void __enable_irq();     */
 415:./cmsis_core/core_cm0.h **** /* intrinsic void __disable_irq();    */
 416:./cmsis_core/core_cm0.h **** 
 417:./cmsis_core/core_cm0.h **** 
 418:./cmsis_core/core_cm0.h **** /**
 419:./cmsis_core/core_cm0.h ****  * @brief  Return the Process Stack Pointer
 420:./cmsis_core/core_cm0.h ****  *
 421:./cmsis_core/core_cm0.h ****  * @return ProcessStackPointer
 422:./cmsis_core/core_cm0.h ****  *
 423:./cmsis_core/core_cm0.h ****  * Return the actual process stack pointer
 424:./cmsis_core/core_cm0.h ****  */
 425:./cmsis_core/core_cm0.h **** extern uint32_t __get_PSP(void);
 426:./cmsis_core/core_cm0.h **** 
 427:./cmsis_core/core_cm0.h **** /**
 428:./cmsis_core/core_cm0.h ****  * @brief  Set the Process Stack Pointer
 429:./cmsis_core/core_cm0.h ****  *
 430:./cmsis_core/core_cm0.h ****  * @param  topOfProcStack  Process Stack Pointer
 431:./cmsis_core/core_cm0.h ****  *
 432:./cmsis_core/core_cm0.h ****  * Assign the value ProcessStackPointer to the MSP 
 433:./cmsis_core/core_cm0.h ****  * (process stack pointer) Cortex processor register
 434:./cmsis_core/core_cm0.h ****  */
 435:./cmsis_core/core_cm0.h **** extern void __set_PSP(uint32_t topOfProcStack);
 436:./cmsis_core/core_cm0.h **** 
 437:./cmsis_core/core_cm0.h **** /**
 438:./cmsis_core/core_cm0.h ****  * @brief  Return the Main Stack Pointer
 439:./cmsis_core/core_cm0.h ****  *
 440:./cmsis_core/core_cm0.h ****  * @return Main Stack Pointer
 441:./cmsis_core/core_cm0.h ****  *
 442:./cmsis_core/core_cm0.h ****  * Return the current value of the MSP (main stack pointer)
 443:./cmsis_core/core_cm0.h ****  * Cortex processor register
 444:./cmsis_core/core_cm0.h ****  */
 445:./cmsis_core/core_cm0.h **** extern uint32_t __get_MSP(void);
 446:./cmsis_core/core_cm0.h **** 
 447:./cmsis_core/core_cm0.h **** /**
 448:./cmsis_core/core_cm0.h ****  * @brief  Set the Main Stack Pointer
 449:./cmsis_core/core_cm0.h ****  *
 450:./cmsis_core/core_cm0.h ****  * @param  topOfMainStack  Main Stack Pointer
 451:./cmsis_core/core_cm0.h ****  *
 452:./cmsis_core/core_cm0.h ****  * Assign the value mainStackPointer to the MSP 
 453:./cmsis_core/core_cm0.h ****  * (main stack pointer) Cortex processor register
ARM GAS  /tmp/ccD5vHri.s 			page 10


 454:./cmsis_core/core_cm0.h ****  */
 455:./cmsis_core/core_cm0.h **** extern void __set_MSP(uint32_t topOfMainStack);
 456:./cmsis_core/core_cm0.h **** 
 457:./cmsis_core/core_cm0.h **** /**
 458:./cmsis_core/core_cm0.h ****  * @brief  Reverse byte order in unsigned short value
 459:./cmsis_core/core_cm0.h ****  *
 460:./cmsis_core/core_cm0.h ****  * @param   value  value to reverse
 461:./cmsis_core/core_cm0.h ****  * @return         reversed value
 462:./cmsis_core/core_cm0.h ****  *
 463:./cmsis_core/core_cm0.h ****  * Reverse byte order in unsigned short value
 464:./cmsis_core/core_cm0.h ****  */
 465:./cmsis_core/core_cm0.h **** extern uint32_t __REV16(uint16_t value);
 466:./cmsis_core/core_cm0.h **** 
 467:./cmsis_core/core_cm0.h **** /**
 468:./cmsis_core/core_cm0.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 469:./cmsis_core/core_cm0.h ****  *
 470:./cmsis_core/core_cm0.h ****  * @param   value  value to reverse
 471:./cmsis_core/core_cm0.h ****  * @return         reversed value
 472:./cmsis_core/core_cm0.h ****  *
 473:./cmsis_core/core_cm0.h ****  * Reverse byte order in signed short value with sign extension to integer
 474:./cmsis_core/core_cm0.h ****  */
 475:./cmsis_core/core_cm0.h **** extern int32_t __REVSH(int16_t value);
 476:./cmsis_core/core_cm0.h **** 
 477:./cmsis_core/core_cm0.h **** 
 478:./cmsis_core/core_cm0.h **** #if (__ARMCC_VERSION < 400000)
 479:./cmsis_core/core_cm0.h **** 
 480:./cmsis_core/core_cm0.h **** /**
 481:./cmsis_core/core_cm0.h ****  * @brief  Return the Priority Mask value
 482:./cmsis_core/core_cm0.h ****  *
 483:./cmsis_core/core_cm0.h ****  * @return PriMask
 484:./cmsis_core/core_cm0.h ****  *
 485:./cmsis_core/core_cm0.h ****  * Return state of the priority mask bit from the priority mask register
 486:./cmsis_core/core_cm0.h ****  */
 487:./cmsis_core/core_cm0.h **** extern uint32_t __get_PRIMASK(void);
 488:./cmsis_core/core_cm0.h **** 
 489:./cmsis_core/core_cm0.h **** /**
 490:./cmsis_core/core_cm0.h ****  * @brief  Set the Priority Mask value
 491:./cmsis_core/core_cm0.h ****  *
 492:./cmsis_core/core_cm0.h ****  * @param   priMask  PriMask
 493:./cmsis_core/core_cm0.h ****  *
 494:./cmsis_core/core_cm0.h ****  * Set the priority mask bit in the priority mask register
 495:./cmsis_core/core_cm0.h ****  */
 496:./cmsis_core/core_cm0.h **** extern void __set_PRIMASK(uint32_t priMask);
 497:./cmsis_core/core_cm0.h **** 
 498:./cmsis_core/core_cm0.h **** /**
 499:./cmsis_core/core_cm0.h ****  * @brief  Return the Control Register value
 500:./cmsis_core/core_cm0.h ****  * 
 501:./cmsis_core/core_cm0.h ****  * @return Control value
 502:./cmsis_core/core_cm0.h ****  *
 503:./cmsis_core/core_cm0.h ****  * Return the content of the control register
 504:./cmsis_core/core_cm0.h ****  */
 505:./cmsis_core/core_cm0.h **** extern uint32_t __get_CONTROL(void);
 506:./cmsis_core/core_cm0.h **** 
 507:./cmsis_core/core_cm0.h **** /**
 508:./cmsis_core/core_cm0.h ****  * @brief  Set the Control Register value
 509:./cmsis_core/core_cm0.h ****  *
 510:./cmsis_core/core_cm0.h ****  * @param  control  Control value
ARM GAS  /tmp/ccD5vHri.s 			page 11


 511:./cmsis_core/core_cm0.h ****  *
 512:./cmsis_core/core_cm0.h ****  * Set the control register
 513:./cmsis_core/core_cm0.h ****  */
 514:./cmsis_core/core_cm0.h **** extern void __set_CONTROL(uint32_t control);
 515:./cmsis_core/core_cm0.h **** 
 516:./cmsis_core/core_cm0.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 517:./cmsis_core/core_cm0.h **** 
 518:./cmsis_core/core_cm0.h **** 
 519:./cmsis_core/core_cm0.h **** /**
 520:./cmsis_core/core_cm0.h ****  * @brief  Return the Priority Mask value
 521:./cmsis_core/core_cm0.h ****  *
 522:./cmsis_core/core_cm0.h ****  * @return PriMask
 523:./cmsis_core/core_cm0.h ****  *
 524:./cmsis_core/core_cm0.h ****  * Return state of the priority mask bit from the priority mask register
 525:./cmsis_core/core_cm0.h ****  */
 526:./cmsis_core/core_cm0.h **** static __INLINE uint32_t __get_PRIMASK(void)
 527:./cmsis_core/core_cm0.h **** {
 528:./cmsis_core/core_cm0.h ****   register uint32_t __regPriMask         __ASM("primask");
 529:./cmsis_core/core_cm0.h ****   return(__regPriMask);
 530:./cmsis_core/core_cm0.h **** }
 531:./cmsis_core/core_cm0.h **** 
 532:./cmsis_core/core_cm0.h **** /**
 533:./cmsis_core/core_cm0.h ****  * @brief  Set the Priority Mask value
 534:./cmsis_core/core_cm0.h ****  *
 535:./cmsis_core/core_cm0.h ****  * @param  priMask  PriMask
 536:./cmsis_core/core_cm0.h ****  *
 537:./cmsis_core/core_cm0.h ****  * Set the priority mask bit in the priority mask register
 538:./cmsis_core/core_cm0.h ****  */
 539:./cmsis_core/core_cm0.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 540:./cmsis_core/core_cm0.h **** {
 541:./cmsis_core/core_cm0.h ****   register uint32_t __regPriMask         __ASM("primask");
 542:./cmsis_core/core_cm0.h ****   __regPriMask = (priMask);
 543:./cmsis_core/core_cm0.h **** }
 544:./cmsis_core/core_cm0.h **** 
 545:./cmsis_core/core_cm0.h **** /**
 546:./cmsis_core/core_cm0.h ****  * @brief  Return the Control Register value
 547:./cmsis_core/core_cm0.h ****  * 
 548:./cmsis_core/core_cm0.h ****  * @return Control value
 549:./cmsis_core/core_cm0.h ****  *
 550:./cmsis_core/core_cm0.h ****  * Return the content of the control register
 551:./cmsis_core/core_cm0.h ****  */
 552:./cmsis_core/core_cm0.h **** static __INLINE uint32_t __get_CONTROL(void)
 553:./cmsis_core/core_cm0.h **** {
 554:./cmsis_core/core_cm0.h ****   register uint32_t __regControl         __ASM("control");
 555:./cmsis_core/core_cm0.h ****   return(__regControl);
 556:./cmsis_core/core_cm0.h **** }
 557:./cmsis_core/core_cm0.h **** 
 558:./cmsis_core/core_cm0.h **** /**
 559:./cmsis_core/core_cm0.h ****  * @brief  Set the Control Register value
 560:./cmsis_core/core_cm0.h ****  *
 561:./cmsis_core/core_cm0.h ****  * @param  control  Control value
 562:./cmsis_core/core_cm0.h ****  *
 563:./cmsis_core/core_cm0.h ****  * Set the control register
 564:./cmsis_core/core_cm0.h ****  */
 565:./cmsis_core/core_cm0.h **** static __INLINE void __set_CONTROL(uint32_t control)
 566:./cmsis_core/core_cm0.h **** {
 567:./cmsis_core/core_cm0.h ****   register uint32_t __regControl         __ASM("control");
ARM GAS  /tmp/ccD5vHri.s 			page 12


 568:./cmsis_core/core_cm0.h ****   __regControl = control;
 569:./cmsis_core/core_cm0.h **** }
 570:./cmsis_core/core_cm0.h **** 
 571:./cmsis_core/core_cm0.h **** #endif /* __ARMCC_VERSION  */ 
 572:./cmsis_core/core_cm0.h **** 
 573:./cmsis_core/core_cm0.h **** 
 574:./cmsis_core/core_cm0.h **** 
 575:./cmsis_core/core_cm0.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
 576:./cmsis_core/core_cm0.h **** /* IAR iccarm specific functions */
 577:./cmsis_core/core_cm0.h **** 
 578:./cmsis_core/core_cm0.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
 579:./cmsis_core/core_cm0.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
 580:./cmsis_core/core_cm0.h **** 
 581:./cmsis_core/core_cm0.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
 582:./cmsis_core/core_cm0.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
 583:./cmsis_core/core_cm0.h **** 
 584:./cmsis_core/core_cm0.h **** #define __NOP                                     __no_operation            /*!< no operation intri
 585:./cmsis_core/core_cm0.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
 586:./cmsis_core/core_cm0.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
 587:./cmsis_core/core_cm0.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
 588:./cmsis_core/core_cm0.h **** 
 589:./cmsis_core/core_cm0.h **** /* intrinsic void __ISB(void)                                     */
 590:./cmsis_core/core_cm0.h **** /* intrinsic void __DSB(void)                                     */
 591:./cmsis_core/core_cm0.h **** /* intrinsic void __DMB(void)                                     */
 592:./cmsis_core/core_cm0.h **** /* intrinsic void __set_PRIMASK();                                */
 593:./cmsis_core/core_cm0.h **** /* intrinsic void __get_PRIMASK();                                */
 594:./cmsis_core/core_cm0.h **** 
 595:./cmsis_core/core_cm0.h **** 
 596:./cmsis_core/core_cm0.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
 597:./cmsis_core/core_cm0.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
 598:./cmsis_core/core_cm0.h **** 
 599:./cmsis_core/core_cm0.h **** 
 600:./cmsis_core/core_cm0.h **** /**
 601:./cmsis_core/core_cm0.h ****  * @brief  Return the Process Stack Pointer
 602:./cmsis_core/core_cm0.h ****  *
 603:./cmsis_core/core_cm0.h ****  * @return ProcessStackPointer
 604:./cmsis_core/core_cm0.h ****  *
 605:./cmsis_core/core_cm0.h ****  * Return the actual process stack pointer
 606:./cmsis_core/core_cm0.h ****  */
 607:./cmsis_core/core_cm0.h **** extern uint32_t __get_PSP(void);
 608:./cmsis_core/core_cm0.h **** 
 609:./cmsis_core/core_cm0.h **** /**
 610:./cmsis_core/core_cm0.h ****  * @brief  Set the Process Stack Pointer
 611:./cmsis_core/core_cm0.h ****  *
 612:./cmsis_core/core_cm0.h ****  * @param  topOfProcStack  Process Stack Pointer
 613:./cmsis_core/core_cm0.h ****  *
 614:./cmsis_core/core_cm0.h ****  * Assign the value ProcessStackPointer to the MSP 
 615:./cmsis_core/core_cm0.h ****  * (process stack pointer) Cortex processor register
 616:./cmsis_core/core_cm0.h ****  */
 617:./cmsis_core/core_cm0.h **** extern void __set_PSP(uint32_t topOfProcStack);
 618:./cmsis_core/core_cm0.h **** 
 619:./cmsis_core/core_cm0.h **** /**
 620:./cmsis_core/core_cm0.h ****  * @brief  Return the Main Stack Pointer
 621:./cmsis_core/core_cm0.h ****  *
 622:./cmsis_core/core_cm0.h ****  * @return Main Stack Pointer
 623:./cmsis_core/core_cm0.h ****  *
 624:./cmsis_core/core_cm0.h ****  * Return the current value of the MSP (main stack pointer)
ARM GAS  /tmp/ccD5vHri.s 			page 13


 625:./cmsis_core/core_cm0.h ****  * Cortex processor register
 626:./cmsis_core/core_cm0.h ****  */
 627:./cmsis_core/core_cm0.h **** extern uint32_t __get_MSP(void);
 628:./cmsis_core/core_cm0.h **** 
 629:./cmsis_core/core_cm0.h **** /**
 630:./cmsis_core/core_cm0.h ****  * @brief  Set the Main Stack Pointer
 631:./cmsis_core/core_cm0.h ****  *
 632:./cmsis_core/core_cm0.h ****  * @param  topOfMainStack  Main Stack Pointer
 633:./cmsis_core/core_cm0.h ****  *
 634:./cmsis_core/core_cm0.h ****  * Assign the value mainStackPointer to the MSP 
 635:./cmsis_core/core_cm0.h ****  * (main stack pointer) Cortex processor register
 636:./cmsis_core/core_cm0.h ****  */
 637:./cmsis_core/core_cm0.h **** extern void __set_MSP(uint32_t topOfMainStack);
 638:./cmsis_core/core_cm0.h **** 
 639:./cmsis_core/core_cm0.h **** /**
 640:./cmsis_core/core_cm0.h ****  * @brief  Reverse byte order in unsigned short value
 641:./cmsis_core/core_cm0.h ****  *
 642:./cmsis_core/core_cm0.h ****  * @param  value  value to reverse
 643:./cmsis_core/core_cm0.h ****  * @return        reversed value
 644:./cmsis_core/core_cm0.h ****  *
 645:./cmsis_core/core_cm0.h ****  * Reverse byte order in unsigned short value
 646:./cmsis_core/core_cm0.h ****  */
 647:./cmsis_core/core_cm0.h **** extern uint32_t __REV16(uint16_t value);
 648:./cmsis_core/core_cm0.h **** 
 649:./cmsis_core/core_cm0.h **** 
 650:./cmsis_core/core_cm0.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
 651:./cmsis_core/core_cm0.h **** /* GNU gcc specific functions */
 652:./cmsis_core/core_cm0.h **** 
 653:./cmsis_core/core_cm0.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 654:./cmsis_core/core_cm0.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 655:./cmsis_core/core_cm0.h **** 
 656:./cmsis_core/core_cm0.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
 657:./cmsis_core/core_cm0.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
 658:./cmsis_core/core_cm0.h **** 
 659:./cmsis_core/core_cm0.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
 660:./cmsis_core/core_cm0.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
 661:./cmsis_core/core_cm0.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
 662:./cmsis_core/core_cm0.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
 663:./cmsis_core/core_cm0.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
 664:./cmsis_core/core_cm0.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
 665:./cmsis_core/core_cm0.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
 666:./cmsis_core/core_cm0.h **** 
 667:./cmsis_core/core_cm0.h **** 
 668:./cmsis_core/core_cm0.h **** /**
 669:./cmsis_core/core_cm0.h ****  * @brief  Return the Process Stack Pointer
 670:./cmsis_core/core_cm0.h ****  *
 671:./cmsis_core/core_cm0.h ****  * @return ProcessStackPointer
 672:./cmsis_core/core_cm0.h ****  *
 673:./cmsis_core/core_cm0.h ****  * Return the actual process stack pointer
 674:./cmsis_core/core_cm0.h ****  */
 675:./cmsis_core/core_cm0.h **** extern uint32_t __get_PSP(void);
 676:./cmsis_core/core_cm0.h **** 
 677:./cmsis_core/core_cm0.h **** /**
 678:./cmsis_core/core_cm0.h ****  * @brief  Set the Process Stack Pointer
 679:./cmsis_core/core_cm0.h ****  *
 680:./cmsis_core/core_cm0.h ****  * @param  topOfProcStack  Process Stack Pointer
 681:./cmsis_core/core_cm0.h ****  *
ARM GAS  /tmp/ccD5vHri.s 			page 14


 682:./cmsis_core/core_cm0.h ****  * Assign the value ProcessStackPointer to the MSP 
 683:./cmsis_core/core_cm0.h ****  * (process stack pointer) Cortex processor register
 684:./cmsis_core/core_cm0.h ****  */
 685:./cmsis_core/core_cm0.h **** extern void __set_PSP(uint32_t topOfProcStack);
 686:./cmsis_core/core_cm0.h **** 
 687:./cmsis_core/core_cm0.h **** /**
 688:./cmsis_core/core_cm0.h ****  * @brief  Return the Main Stack Pointer
 689:./cmsis_core/core_cm0.h ****  *
 690:./cmsis_core/core_cm0.h ****  * @return Main Stack Pointer
 691:./cmsis_core/core_cm0.h ****  *
 692:./cmsis_core/core_cm0.h ****  * Return the current value of the MSP (main stack pointer)
 693:./cmsis_core/core_cm0.h ****  * Cortex processor register
 694:./cmsis_core/core_cm0.h ****  */
 695:./cmsis_core/core_cm0.h **** extern uint32_t __get_MSP(void);
 696:./cmsis_core/core_cm0.h **** 
 697:./cmsis_core/core_cm0.h **** /**
 698:./cmsis_core/core_cm0.h ****  * @brief  Set the Main Stack Pointer
 699:./cmsis_core/core_cm0.h ****  *
 700:./cmsis_core/core_cm0.h ****  * @param  topOfMainStack  Main Stack Pointer
 701:./cmsis_core/core_cm0.h ****  *
 702:./cmsis_core/core_cm0.h ****  * Assign the value mainStackPointer to the MSP 
 703:./cmsis_core/core_cm0.h ****  * (main stack pointer) Cortex processor register
 704:./cmsis_core/core_cm0.h ****  */
 705:./cmsis_core/core_cm0.h **** extern void __set_MSP(uint32_t topOfMainStack);
 706:./cmsis_core/core_cm0.h **** 
 707:./cmsis_core/core_cm0.h **** /**
 708:./cmsis_core/core_cm0.h ****  * @brief  Return the Priority Mask value
 709:./cmsis_core/core_cm0.h ****  *
 710:./cmsis_core/core_cm0.h ****  * @return PriMask
 711:./cmsis_core/core_cm0.h ****  *
 712:./cmsis_core/core_cm0.h ****  * Return state of the priority mask bit from the priority mask register
 713:./cmsis_core/core_cm0.h ****  */
 714:./cmsis_core/core_cm0.h **** extern uint32_t  __get_PRIMASK(void);
 715:./cmsis_core/core_cm0.h **** 
 716:./cmsis_core/core_cm0.h **** /**
 717:./cmsis_core/core_cm0.h ****  * @brief  Set the Priority Mask value
 718:./cmsis_core/core_cm0.h ****  *
 719:./cmsis_core/core_cm0.h ****  * @param  priMask  PriMask
 720:./cmsis_core/core_cm0.h ****  *
 721:./cmsis_core/core_cm0.h ****  * Set the priority mask bit in the priority mask register
 722:./cmsis_core/core_cm0.h ****  */
 723:./cmsis_core/core_cm0.h **** extern void __set_PRIMASK(uint32_t priMask);
 724:./cmsis_core/core_cm0.h **** 
 725:./cmsis_core/core_cm0.h **** /**
 726:./cmsis_core/core_cm0.h ****  * @brief  Return the Control Register value
 727:./cmsis_core/core_cm0.h **** * 
 728:./cmsis_core/core_cm0.h **** *  @return Control value
 729:./cmsis_core/core_cm0.h ****  *
 730:./cmsis_core/core_cm0.h ****  * Return the content of the control register
 731:./cmsis_core/core_cm0.h ****  */
 732:./cmsis_core/core_cm0.h **** extern uint32_t __get_CONTROL(void);
 733:./cmsis_core/core_cm0.h **** 
 734:./cmsis_core/core_cm0.h **** /**
 735:./cmsis_core/core_cm0.h ****  * @brief  Set the Control Register value
 736:./cmsis_core/core_cm0.h ****  *
 737:./cmsis_core/core_cm0.h ****  * @param  control  Control value
 738:./cmsis_core/core_cm0.h ****  *
ARM GAS  /tmp/ccD5vHri.s 			page 15


 739:./cmsis_core/core_cm0.h ****  * Set the control register
 740:./cmsis_core/core_cm0.h ****  */
 741:./cmsis_core/core_cm0.h **** extern void __set_CONTROL(uint32_t control);
 742:./cmsis_core/core_cm0.h **** 
 743:./cmsis_core/core_cm0.h **** /**
 744:./cmsis_core/core_cm0.h ****  * @brief  Reverse byte order in integer value
 745:./cmsis_core/core_cm0.h ****  *
 746:./cmsis_core/core_cm0.h ****  * @param  value  value to reverse
 747:./cmsis_core/core_cm0.h ****  * @return        reversed value
 748:./cmsis_core/core_cm0.h ****  *
 749:./cmsis_core/core_cm0.h ****  * Reverse byte order in integer value
 750:./cmsis_core/core_cm0.h ****  */
 751:./cmsis_core/core_cm0.h **** extern uint32_t __REV(uint32_t value);
 752:./cmsis_core/core_cm0.h **** 
 753:./cmsis_core/core_cm0.h **** /**
 754:./cmsis_core/core_cm0.h ****  * @brief  Reverse byte order in unsigned short value
 755:./cmsis_core/core_cm0.h ****  *
 756:./cmsis_core/core_cm0.h ****  * @param  value  value to reverse
 757:./cmsis_core/core_cm0.h ****  * @return        reversed value
 758:./cmsis_core/core_cm0.h ****  *
 759:./cmsis_core/core_cm0.h ****  * Reverse byte order in unsigned short value
 760:./cmsis_core/core_cm0.h ****  */
 761:./cmsis_core/core_cm0.h **** extern uint32_t __REV16(uint16_t value);
 762:./cmsis_core/core_cm0.h **** 
 763:./cmsis_core/core_cm0.h **** /**
 764:./cmsis_core/core_cm0.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 765:./cmsis_core/core_cm0.h ****  *
 766:./cmsis_core/core_cm0.h ****  * @param  value  value to reverse
 767:./cmsis_core/core_cm0.h ****  * @return        reversed value
 768:./cmsis_core/core_cm0.h ****  *
 769:./cmsis_core/core_cm0.h ****  * Reverse byte order in signed short value with sign extension to integer
 770:./cmsis_core/core_cm0.h ****  */
 771:./cmsis_core/core_cm0.h **** extern int32_t __REVSH(int16_t value);
 772:./cmsis_core/core_cm0.h **** 
 773:./cmsis_core/core_cm0.h **** 
 774:./cmsis_core/core_cm0.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
 775:./cmsis_core/core_cm0.h **** /* TASKING carm specific functions */
 776:./cmsis_core/core_cm0.h **** 
 777:./cmsis_core/core_cm0.h **** /*
 778:./cmsis_core/core_cm0.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
 779:./cmsis_core/core_cm0.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
 780:./cmsis_core/core_cm0.h ****  * Including the CMSIS ones.
 781:./cmsis_core/core_cm0.h ****  */
 782:./cmsis_core/core_cm0.h **** 
 783:./cmsis_core/core_cm0.h **** #endif
 784:./cmsis_core/core_cm0.h **** 
 785:./cmsis_core/core_cm0.h **** 
 786:./cmsis_core/core_cm0.h **** /** @addtogroup CMSIS_CM0_Core_FunctionInterface CMSIS CM0 Core Function Interface
 787:./cmsis_core/core_cm0.h ****   Core  Function Interface containing:
 788:./cmsis_core/core_cm0.h ****   - Core NVIC Functions
 789:./cmsis_core/core_cm0.h ****   - Core SysTick Functions
 790:./cmsis_core/core_cm0.h ****   - Core Reset Functions
 791:./cmsis_core/core_cm0.h **** */
 792:./cmsis_core/core_cm0.h **** /*@{*/
 793:./cmsis_core/core_cm0.h **** 
 794:./cmsis_core/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 795:./cmsis_core/core_cm0.h **** 
ARM GAS  /tmp/ccD5vHri.s 			page 16


 796:./cmsis_core/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 797:./cmsis_core/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 798:./cmsis_core/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  (((uint32_t)(IRQn)       )    &  0x03) * 8 )
 799:./cmsis_core/core_cm0.h **** #define _SHP_IDX(IRQn)           ( ((((uint32_t)(IRQn) & 0x0F)-8) >>    2)     )
 800:./cmsis_core/core_cm0.h **** #define _IP_IDX(IRQn)            (   ((uint32_t)(IRQn)            >>    2)     )
 801:./cmsis_core/core_cm0.h **** 
 802:./cmsis_core/core_cm0.h **** 
 803:./cmsis_core/core_cm0.h **** /**
 804:./cmsis_core/core_cm0.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
 805:./cmsis_core/core_cm0.h ****  *
 806:./cmsis_core/core_cm0.h ****  * @param  IRQn   The positive number of the external interrupt to enable
 807:./cmsis_core/core_cm0.h ****  *
 808:./cmsis_core/core_cm0.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
 809:./cmsis_core/core_cm0.h ****  * The interrupt number cannot be a negative value.
 810:./cmsis_core/core_cm0.h ****  */
 811:./cmsis_core/core_cm0.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 812:./cmsis_core/core_cm0.h **** {
  61              		.loc 1 812 0
  62              		.cfi_startproc
  63 0000 82B0     		sub	sp, sp, #8	@,,
  64              	.LCFI0:
  65              		.cfi_def_cfa_offset 8
  66 0002 0200     		movs	r2, r0	@ tmp116, IRQn
  67 0004 6B46     		mov	r3, sp	@ tmp122,
  68 0006 0733     		adds	r3, r3, #7	@ tmp117,
  69 0008 1A70     		strb	r2, [r3]	@ tmp118, IRQn
 813:./cmsis_core/core_cm0.h ****   NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  70              		.loc 1 813 0
  71 000a 074B     		ldr	r3, .L2	@ D.5222,
  72 000c 6A46     		mov	r2, sp	@ tmp123,
  73 000e 0732     		adds	r2, r2, #7	@ tmp119,
  74 0010 1278     		ldrb	r2, [r2]	@ D.5223, IRQn
  75 0012 1100     		movs	r1, r2	@ D.5224, D.5223
  76 0014 1F22     		movs	r2, #31	@ tmp120,
  77 0016 0A40     		ands	r2, r1	@ D.5224, D.5224
  78 0018 0121     		movs	r1, #1	@ tmp121,
  79 001a 9140     		lsls	r1, r1, r2	@ D.5225, D.5225, D.5224
  80 001c 0A00     		movs	r2, r1	@ D.5225, D.5225
  81 001e 1A60     		str	r2, [r3]	@ D.5224, _1->ISER
 814:./cmsis_core/core_cm0.h **** }
  82              		.loc 1 814 0
  83 0020 C046     		nop
  84 0022 02B0     		add	sp, sp, #8	@,,
  85              		@ sp needed	@
  86 0024 7047     		bx	lr
  87              	.L3:
  88 0026 C046     		.align	2
  89              	.L2:
  90 0028 00E100E0 		.word	-536813312
  91              		.cfi_endproc
  92              	.LFE11:
  93              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  94              		.section	.text.NVIC_SetPriority,"ax",%progbits
  95              		.align	2
  96              		.code	16
  97              		.thumb_func
  98              		.type	NVIC_SetPriority, %function
ARM GAS  /tmp/ccD5vHri.s 			page 17


  99              	NVIC_SetPriority:
 100              	.LFB16:
 815:./cmsis_core/core_cm0.h **** 
 816:./cmsis_core/core_cm0.h **** /**
 817:./cmsis_core/core_cm0.h ****  * @brief  Disable the interrupt line for external interrupt specified
 818:./cmsis_core/core_cm0.h ****  * 
 819:./cmsis_core/core_cm0.h ****  * @param  IRQn   The positive number of the external interrupt to disable
 820:./cmsis_core/core_cm0.h ****  * 
 821:./cmsis_core/core_cm0.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
 822:./cmsis_core/core_cm0.h ****  * The interrupt number cannot be a negative value.
 823:./cmsis_core/core_cm0.h ****  */
 824:./cmsis_core/core_cm0.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 825:./cmsis_core/core_cm0.h **** {
 826:./cmsis_core/core_cm0.h ****   NVIC->ICER[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 827:./cmsis_core/core_cm0.h **** }
 828:./cmsis_core/core_cm0.h **** 
 829:./cmsis_core/core_cm0.h **** /**
 830:./cmsis_core/core_cm0.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
 831:./cmsis_core/core_cm0.h ****  * 
 832:./cmsis_core/core_cm0.h ****  * @param  IRQn    The number of the device specifc interrupt
 833:./cmsis_core/core_cm0.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
 834:./cmsis_core/core_cm0.h ****  *
 835:./cmsis_core/core_cm0.h ****  * Read the pending register in NVIC and return 1 if its status is pending, 
 836:./cmsis_core/core_cm0.h ****  * otherwise it returns 0
 837:./cmsis_core/core_cm0.h ****  */
 838:./cmsis_core/core_cm0.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 839:./cmsis_core/core_cm0.h **** {
 840:./cmsis_core/core_cm0.h ****   return((uint32_t) ((NVIC->ISPR[0] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /* Return 1 if pendi
 841:./cmsis_core/core_cm0.h **** }
 842:./cmsis_core/core_cm0.h **** 
 843:./cmsis_core/core_cm0.h **** /**
 844:./cmsis_core/core_cm0.h ****  * @brief  Set the pending bit for an external interrupt
 845:./cmsis_core/core_cm0.h ****  * 
 846:./cmsis_core/core_cm0.h ****  * @param  IRQn    The number of the interrupt for set pending
 847:./cmsis_core/core_cm0.h ****  *
 848:./cmsis_core/core_cm0.h ****  * Set the pending bit for the specified interrupt.
 849:./cmsis_core/core_cm0.h ****  * The interrupt number cannot be a negative value.
 850:./cmsis_core/core_cm0.h ****  */
 851:./cmsis_core/core_cm0.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 852:./cmsis_core/core_cm0.h **** {
 853:./cmsis_core/core_cm0.h ****   NVIC->ISPR[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending */
 854:./cmsis_core/core_cm0.h **** }
 855:./cmsis_core/core_cm0.h **** 
 856:./cmsis_core/core_cm0.h **** /**
 857:./cmsis_core/core_cm0.h ****  * @brief  Clear the pending bit for an external interrupt
 858:./cmsis_core/core_cm0.h ****  *
 859:./cmsis_core/core_cm0.h ****  * @param  IRQn    The number of the interrupt for clear pending
 860:./cmsis_core/core_cm0.h ****  *
 861:./cmsis_core/core_cm0.h ****  * Clear the pending bit for the specified interrupt. 
 862:./cmsis_core/core_cm0.h ****  * The interrupt number cannot be a negative value.
 863:./cmsis_core/core_cm0.h ****  */
 864:./cmsis_core/core_cm0.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 865:./cmsis_core/core_cm0.h **** {
 866:./cmsis_core/core_cm0.h ****   NVIC->ICPR[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
 867:./cmsis_core/core_cm0.h **** }
 868:./cmsis_core/core_cm0.h **** 
 869:./cmsis_core/core_cm0.h **** /**
ARM GAS  /tmp/ccD5vHri.s 			page 18


 870:./cmsis_core/core_cm0.h ****  * @brief  Set the priority for an interrupt
 871:./cmsis_core/core_cm0.h ****  *
 872:./cmsis_core/core_cm0.h ****  * @param  IRQn      The number of the interrupt for set priority
 873:./cmsis_core/core_cm0.h ****  * @param  priority  The priority to set
 874:./cmsis_core/core_cm0.h ****  *
 875:./cmsis_core/core_cm0.h ****  * Set the priority for the specified interrupt. The interrupt 
 876:./cmsis_core/core_cm0.h ****  * number can be positive to specify an external (device specific) 
 877:./cmsis_core/core_cm0.h ****  * interrupt, or negative to specify an internal (core) interrupt.
 878:./cmsis_core/core_cm0.h ****  *
 879:./cmsis_core/core_cm0.h ****  * Note: The priority cannot be set for every core interrupt.
 880:./cmsis_core/core_cm0.h ****  */
 881:./cmsis_core/core_cm0.h **** /*
 882:./cmsis_core/core_cm0.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 883:./cmsis_core/core_cm0.h **** {
 884:./cmsis_core/core_cm0.h ****   if(IRQn < 0) {
 885:./cmsis_core/core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) | 
 886:./cmsis_core/core_cm0.h ****         (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
 887:./cmsis_core/core_cm0.h ****   else {
 888:./cmsis_core/core_cm0.h ****     NVIC->IPR[_IP_IDX(IRQn)] = (NVIC->IPR[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 889:./cmsis_core/core_cm0.h ****         (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
 890:./cmsis_core/core_cm0.h **** }
 891:./cmsis_core/core_cm0.h **** */
 892:./cmsis_core/core_cm0.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 893:./cmsis_core/core_cm0.h **** {
 101              		.loc 1 893 0
 102              		.cfi_startproc
 103 0000 30B5     		push	{r4, r5, lr}	@
 104              	.LCFI1:
 105              		.cfi_def_cfa_offset 12
 106              		.cfi_offset 4, -12
 107              		.cfi_offset 5, -8
 108              		.cfi_offset 14, -4
 109 0002 83B0     		sub	sp, sp, #12	@,,
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 24
 112 0004 0200     		movs	r2, r0	@ tmp162, IRQn
 113 0006 0091     		str	r1, [sp]	@ priority, priority
 114 0008 6B46     		mov	r3, sp	@ tmp199,
 115 000a 0733     		adds	r3, r3, #7	@ tmp163,
 116 000c 1A70     		strb	r2, [r3]	@ tmp164, IRQn
 894:./cmsis_core/core_cm0.h ****   if(IRQn < 0) {
 117              		.loc 1 894 0
 118 000e 6B46     		mov	r3, sp	@ tmp200,
 119 0010 0733     		adds	r3, r3, #7	@ tmp165,
 120 0012 1B78     		ldrb	r3, [r3]	@ tmp166, IRQn
 121 0014 7F2B     		cmp	r3, #127	@ tmp166,
 122 0016 36D9     		bls	.L5	@,
 895:./cmsis_core/core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 123              		.loc 1 895 0
 124 0018 324C     		ldr	r4, .L8	@ D.5226,
 125 001a 6B46     		mov	r3, sp	@ tmp201,
 126 001c 0733     		adds	r3, r3, #7	@ tmp167,
 127 001e 1B78     		ldrb	r3, [r3]	@ D.5227, IRQn
 128 0020 1A00     		movs	r2, r3	@ D.5228, D.5227
 129 0022 0F23     		movs	r3, #15	@ tmp168,
 130 0024 1340     		ands	r3, r2	@ D.5228, D.5228
 131 0026 083B     		subs	r3, r3, #8	@ D.5228,
ARM GAS  /tmp/ccD5vHri.s 			page 19


 132 0028 9908     		lsrs	r1, r3, #2	@ D.5228, D.5228,
 133 002a 2E4A     		ldr	r2, .L8	@ D.5226,
 134 002c 6B46     		mov	r3, sp	@ tmp202,
 135 002e 0733     		adds	r3, r3, #7	@ tmp169,
 136 0030 1B78     		ldrb	r3, [r3]	@ D.5227, IRQn
 137 0032 1800     		movs	r0, r3	@ D.5228, D.5227
 138 0034 0F23     		movs	r3, #15	@ tmp170,
 139 0036 0340     		ands	r3, r0	@ D.5228, D.5228
 140 0038 083B     		subs	r3, r3, #8	@ D.5228,
 141 003a 9B08     		lsrs	r3, r3, #2	@ D.5228, D.5228,
 142 003c 0633     		adds	r3, r3, #6	@ tmp171,
 143 003e 9B00     		lsls	r3, r3, #2	@ tmp172, tmp171,
 144 0040 D318     		adds	r3, r2, r3	@ tmp173, D.5226, tmp172
 145 0042 0433     		adds	r3, r3, #4	@ tmp174,
 146 0044 1B68     		ldr	r3, [r3]	@ D.5228, _9->SHP
 147 0046 6A46     		mov	r2, sp	@ tmp203,
 148 0048 0732     		adds	r2, r2, #7	@ tmp175,
 149 004a 1278     		ldrb	r2, [r2]	@ D.5227, IRQn
 150 004c 1000     		movs	r0, r2	@ D.5228, D.5227
 151 004e 0322     		movs	r2, #3	@ tmp176,
 152 0050 0240     		ands	r2, r0	@ D.5228, D.5228
 153 0052 D200     		lsls	r2, r2, #3	@ D.5228, D.5228,
 154 0054 FF20     		movs	r0, #255	@ tmp177,
 155 0056 9040     		lsls	r0, r0, r2	@ D.5229, D.5229, D.5228
 156 0058 0200     		movs	r2, r0	@ D.5229, D.5229
 157 005a D243     		mvns	r2, r2	@ D.5229, D.5229
 158 005c 1A40     		ands	r2, r3	@ D.5228, D.5228
 896:./cmsis_core/core_cm0.h ****         (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
 159              		.loc 1 896 0
 160 005e 009B     		ldr	r3, [sp]	@ tmp178, priority
 161 0060 9B01     		lsls	r3, r3, #6	@ D.5228, tmp178,
 162 0062 FF20     		movs	r0, #255	@ tmp179,
 163 0064 1840     		ands	r0, r3	@ D.5228, D.5228
 164 0066 6B46     		mov	r3, sp	@ tmp205,
 165 0068 0733     		adds	r3, r3, #7	@ tmp180,
 166 006a 1B78     		ldrb	r3, [r3]	@ D.5227, IRQn
 167 006c 1D00     		movs	r5, r3	@ D.5228, D.5227
 168 006e 0323     		movs	r3, #3	@ tmp181,
 169 0070 2B40     		ands	r3, r5	@ D.5228, D.5228
 170 0072 DB00     		lsls	r3, r3, #3	@ D.5228, D.5228,
 171 0074 9840     		lsls	r0, r0, r3	@ D.5228, D.5228, D.5228
 172 0076 0300     		movs	r3, r0	@ D.5228, D.5228
 895:./cmsis_core/core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 173              		.loc 1 895 0
 174 0078 1A43     		orrs	r2, r3	@ D.5228, D.5228
 175 007a 8B1D     		adds	r3, r1, #6	@ tmp182, D.5228,
 176 007c 9B00     		lsls	r3, r3, #2	@ tmp183, tmp182,
 177 007e E318     		adds	r3, r4, r3	@ tmp184, D.5226, tmp183
 178 0080 0433     		adds	r3, r3, #4	@ tmp185,
 179 0082 1A60     		str	r2, [r3]	@ D.5228, _3->SHP
 897:./cmsis_core/core_cm0.h ****   else {
 898:./cmsis_core/core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 899:./cmsis_core/core_cm0.h ****         (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
 900:./cmsis_core/core_cm0.h **** }
 180              		.loc 1 900 0
 181 0084 2BE0     		b	.L7	@
 182              	.L5:
ARM GAS  /tmp/ccD5vHri.s 			page 20


 898:./cmsis_core/core_cm0.h ****         (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
 183              		.loc 1 898 0
 184 0086 184C     		ldr	r4, .L8+4	@ D.5230,
 185 0088 6B46     		mov	r3, sp	@ tmp207,
 186 008a 0733     		adds	r3, r3, #7	@ tmp186,
 187 008c 1B78     		ldrb	r3, [r3]	@ D.5228, IRQn
 188 008e 5BB2     		sxtb	r3, r3	@ D.5228, D.5228
 189 0090 9B08     		lsrs	r3, r3, #2	@ D.5228, D.5228,
 190 0092 1549     		ldr	r1, .L8+4	@ D.5230,
 191 0094 6A46     		mov	r2, sp	@ tmp208,
 192 0096 0732     		adds	r2, r2, #7	@ tmp187,
 193 0098 1278     		ldrb	r2, [r2]	@ D.5228, IRQn
 194 009a 52B2     		sxtb	r2, r2	@ D.5228, D.5228
 195 009c 9208     		lsrs	r2, r2, #2	@ D.5228, D.5228,
 196 009e C032     		adds	r2, r2, #192	@ tmp188,
 197 00a0 9200     		lsls	r2, r2, #2	@ tmp189, tmp188,
 198 00a2 5258     		ldr	r2, [r2, r1]	@ D.5228, _38->IP
 199 00a4 6946     		mov	r1, sp	@ tmp209,
 200 00a6 0731     		adds	r1, r1, #7	@ tmp190,
 201 00a8 0978     		ldrb	r1, [r1]	@ D.5227, IRQn
 202 00aa 0800     		movs	r0, r1	@ D.5228, D.5227
 203 00ac 0321     		movs	r1, #3	@ tmp191,
 204 00ae 0140     		ands	r1, r0	@ D.5228, D.5228
 205 00b0 C900     		lsls	r1, r1, #3	@ D.5228, D.5228,
 206 00b2 FF20     		movs	r0, #255	@ tmp192,
 207 00b4 8840     		lsls	r0, r0, r1	@ D.5229, D.5229, D.5228
 208 00b6 0100     		movs	r1, r0	@ D.5229, D.5229
 209 00b8 C943     		mvns	r1, r1	@ D.5229, D.5229
 210 00ba 1140     		ands	r1, r2	@ D.5228, D.5228
 899:./cmsis_core/core_cm0.h **** }
 211              		.loc 1 899 0
 212 00bc 009A     		ldr	r2, [sp]	@ tmp193, priority
 213 00be 9201     		lsls	r2, r2, #6	@ D.5228, tmp193,
 214 00c0 FF20     		movs	r0, #255	@ tmp194,
 215 00c2 1040     		ands	r0, r2	@ D.5228, D.5228
 216 00c4 6A46     		mov	r2, sp	@ tmp211,
 217 00c6 0732     		adds	r2, r2, #7	@ tmp195,
 218 00c8 1278     		ldrb	r2, [r2]	@ D.5227, IRQn
 219 00ca 1500     		movs	r5, r2	@ D.5228, D.5227
 220 00cc 0322     		movs	r2, #3	@ tmp196,
 221 00ce 2A40     		ands	r2, r5	@ D.5228, D.5228
 222 00d0 D200     		lsls	r2, r2, #3	@ D.5228, D.5228,
 223 00d2 9040     		lsls	r0, r0, r2	@ D.5228, D.5228, D.5228
 224 00d4 0200     		movs	r2, r0	@ D.5228, D.5228
 898:./cmsis_core/core_cm0.h ****         (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
 225              		.loc 1 898 0
 226 00d6 0A43     		orrs	r2, r1	@ D.5228, D.5228
 227 00d8 C033     		adds	r3, r3, #192	@ tmp197,
 228 00da 9B00     		lsls	r3, r3, #2	@ tmp198, tmp197,
 229 00dc 1A51     		str	r2, [r3, r4]	@ D.5228, _35->IP
 230              	.L7:
 231              		.loc 1 900 0
 232 00de C046     		nop
 233 00e0 03B0     		add	sp, sp, #12	@,,
 234              		@ sp needed	@
 235 00e2 30BD     		pop	{r4, r5, pc}
 236              	.L9:
ARM GAS  /tmp/ccD5vHri.s 			page 21


 237              		.align	2
 238              	.L8:
 239 00e4 00ED00E0 		.word	-536810240
 240 00e8 00E100E0 		.word	-536813312
 241              		.cfi_endproc
 242              	.LFE16:
 243              		.size	NVIC_SetPriority, .-NVIC_SetPriority
 244              		.global	timer_1000
 245              		.section	.bss.timer_1000,"aw",%nobits
 246              		.align	1
 247              		.type	timer_1000, %object
 248              		.size	timer_1000, 2
 249              	timer_1000:
 250 0000 0000     		.space	2
 251              		.section	.text.Update_TIM1_CH3,"ax",%progbits
 252              		.align	2
 253              		.global	Update_TIM1_CH3
 254              		.code	16
 255              		.thumb_func
 256              		.type	Update_TIM1_CH3, %function
 257              	Update_TIM1_CH3:
 258              	.LFB20:
 259              		.file 2 "src/tim.c"
   1:src/tim.c     **** //---------------------------------------------
   2:src/tim.c     **** // ##
   3:src/tim.c     **** // ## @Author: Med
   4:src/tim.c     **** // ## @Editor: Emacs - ggtags
   5:src/tim.c     **** // ## @TAGS:   Global
   6:src/tim.c     **** // ## @CPU:    STM32F030
   7:src/tim.c     **** // ##
   8:src/tim.c     **** // #### TIM.C ################################
   9:src/tim.c     **** //---------------------------------------------
  10:src/tim.c     **** 
  11:src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  12:src/tim.c     **** #include "tim.h"
  13:src/tim.c     **** #include "stm32f0xx.h"
  14:src/tim.c     **** #include "hard.h"
  15:src/tim.c     **** #include "sync.h"
  16:src/tim.c     **** 
  17:src/tim.c     **** //--- VARIABLES EXTERNAS ---//
  18:src/tim.c     **** extern volatile unsigned char timer_1seg;
  19:src/tim.c     **** extern volatile unsigned short timer_led_comm;
  20:src/tim.c     **** extern volatile unsigned short wait_ms_var;
  21:src/tim.c     **** extern volatile unsigned short delta_t2;
  22:src/tim.c     **** 
  23:src/tim.c     **** #ifdef INVERTER_MODE
  24:src/tim.c     **** extern volatile unsigned char ac_sync_int_flag;
  25:src/tim.c     **** #endif
  26:src/tim.c     **** 
  27:src/tim.c     **** //--- VARIABLES GLOBALES ---//
  28:src/tim.c     **** 
  29:src/tim.c     **** volatile unsigned short timer_1000 = 0;
  30:src/tim.c     **** 
  31:src/tim.c     **** 
  32:src/tim.c     **** 
  33:src/tim.c     **** //--- FUNCIONES DEL MODULO ---//
  34:src/tim.c     **** // inline void UpdateTIMSync (unsigned short a)
ARM GAS  /tmp/ccD5vHri.s 			page 22


  35:src/tim.c     **** // {
  36:src/tim.c     **** //     //primero cargo TIM1
  37:src/tim.c     **** //     TIM1->CCR1 = a;
  38:src/tim.c     **** //     TIM3->ARR = DUTY_50_PERCENT + a;    //TIM3->CCR1 es el delay entre timers
  39:src/tim.c     **** //                                         //lo cargo en el timer init
  40:src/tim.c     **** // }
  41:src/tim.c     **** 
  42:src/tim.c     **** // inline void UpdateTIM_MosfetA (unsigned short a)
  43:src/tim.c     **** // {
  44:src/tim.c     **** //     TIM3->ARR = DUTY_50_PERCENT + a;    
  45:src/tim.c     **** // }
  46:src/tim.c     **** 
  47:src/tim.c     **** // inline void UpdateTIM_MosfetB (unsigned short a)
  48:src/tim.c     **** // {
  49:src/tim.c     **** //     TIM1->CCR1 = a;
  50:src/tim.c     **** // }
  51:src/tim.c     **** 
  52:src/tim.c     **** // inline void EnablePreload_MosfetA (void)
  53:src/tim.c     **** // {
  54:src/tim.c     **** //     // TIM3->CCMR1 |= TIM_CCMR1_OC1PE;
  55:src/tim.c     **** //     TIM3->CR1 |= TIM_CR1_ARPE;
  56:src/tim.c     **** // }
  57:src/tim.c     **** 
  58:src/tim.c     **** // inline void DisablePreload_MosfetA (void)
  59:src/tim.c     **** // {
  60:src/tim.c     **** //     // TIM3->CCMR1 &= ~TIM_CCMR1_OC1PE;
  61:src/tim.c     **** //     TIM3->CR1 &= ~TIM_CR1_ARPE;    
  62:src/tim.c     **** // }
  63:src/tim.c     **** 
  64:src/tim.c     **** // inline void EnablePreload_MosfetB (void)
  65:src/tim.c     **** // {
  66:src/tim.c     **** //     TIM1->CCMR1 |= TIM_CCMR1_OC1PE;
  67:src/tim.c     **** // }
  68:src/tim.c     **** 
  69:src/tim.c     **** // inline void DisablePreload_MosfetB (void)
  70:src/tim.c     **** // {
  71:src/tim.c     **** //     TIM1->CCMR1 &= ~TIM_CCMR1_OC1PE;
  72:src/tim.c     **** // }
  73:src/tim.c     **** 
  74:src/tim.c     **** void Update_TIM1_CH3 (unsigned short a)
  75:src/tim.c     **** {
 260              		.loc 2 75 0
 261              		.cfi_startproc
 262 0000 82B0     		sub	sp, sp, #8	@,,
 263              	.LCFI3:
 264              		.cfi_def_cfa_offset 8
 265 0002 0200     		movs	r2, r0	@ tmp112, a
 266 0004 6B46     		mov	r3, sp	@ tmp116,
 267 0006 0633     		adds	r3, r3, #6	@ tmp113,
 268 0008 1A80     		strh	r2, [r3]	@ tmp114, a
  76:src/tim.c     ****     TIM1->CCR3 = a;
 269              		.loc 2 76 0
 270 000a 044B     		ldr	r3, .L11	@ D.5231,
 271 000c 6A46     		mov	r2, sp	@ tmp117,
 272 000e 0632     		adds	r2, r2, #6	@ tmp115,
 273 0010 1288     		ldrh	r2, [r2]	@ D.5232, a
 274 0012 DA63     		str	r2, [r3, #60]	@ D.5232, _1->CCR3
ARM GAS  /tmp/ccD5vHri.s 			page 23


  77:src/tim.c     **** }
 275              		.loc 2 77 0
 276 0014 C046     		nop
 277 0016 02B0     		add	sp, sp, #8	@,,
 278              		@ sp needed	@
 279 0018 7047     		bx	lr
 280              	.L12:
 281 001a C046     		.align	2
 282              	.L11:
 283 001c 002C0140 		.word	1073818624
 284              		.cfi_endproc
 285              	.LFE20:
 286              		.size	Update_TIM1_CH3, .-Update_TIM1_CH3
 287              		.section	.text.Update_TIM3_CH1,"ax",%progbits
 288              		.align	2
 289              		.global	Update_TIM3_CH1
 290              		.code	16
 291              		.thumb_func
 292              		.type	Update_TIM3_CH1, %function
 293              	Update_TIM3_CH1:
 294              	.LFB21:
  78:src/tim.c     **** 
  79:src/tim.c     **** void Update_TIM3_CH1 (unsigned short a)
  80:src/tim.c     **** {
 295              		.loc 2 80 0
 296              		.cfi_startproc
 297 0000 82B0     		sub	sp, sp, #8	@,,
 298              	.LCFI4:
 299              		.cfi_def_cfa_offset 8
 300 0002 0200     		movs	r2, r0	@ tmp112, a
 301 0004 6B46     		mov	r3, sp	@ tmp116,
 302 0006 0633     		adds	r3, r3, #6	@ tmp113,
 303 0008 1A80     		strh	r2, [r3]	@ tmp114, a
  81:src/tim.c     ****     TIM3->CCR1 = a;
 304              		.loc 2 81 0
 305 000a 044B     		ldr	r3, .L14	@ D.5233,
 306 000c 6A46     		mov	r2, sp	@ tmp117,
 307 000e 0632     		adds	r2, r2, #6	@ tmp115,
 308 0010 1288     		ldrh	r2, [r2]	@ D.5234, a
 309 0012 5A63     		str	r2, [r3, #52]	@ D.5234, _1->CCR1
  82:src/tim.c     **** }
 310              		.loc 2 82 0
 311 0014 C046     		nop
 312 0016 02B0     		add	sp, sp, #8	@,,
 313              		@ sp needed	@
 314 0018 7047     		bx	lr
 315              	.L15:
 316 001a C046     		.align	2
 317              	.L14:
 318 001c 00040040 		.word	1073742848
 319              		.cfi_endproc
 320              	.LFE21:
 321              		.size	Update_TIM3_CH1, .-Update_TIM3_CH1
 322              		.section	.text.Update_TIM3_CH2,"ax",%progbits
 323              		.align	2
 324              		.global	Update_TIM3_CH2
 325              		.code	16
ARM GAS  /tmp/ccD5vHri.s 			page 24


 326              		.thumb_func
 327              		.type	Update_TIM3_CH2, %function
 328              	Update_TIM3_CH2:
 329              	.LFB22:
  83:src/tim.c     **** 
  84:src/tim.c     **** void Update_TIM3_CH2 (unsigned short a)
  85:src/tim.c     **** {
 330              		.loc 2 85 0
 331              		.cfi_startproc
 332 0000 82B0     		sub	sp, sp, #8	@,,
 333              	.LCFI5:
 334              		.cfi_def_cfa_offset 8
 335 0002 0200     		movs	r2, r0	@ tmp112, a
 336 0004 6B46     		mov	r3, sp	@ tmp116,
 337 0006 0633     		adds	r3, r3, #6	@ tmp113,
 338 0008 1A80     		strh	r2, [r3]	@ tmp114, a
  86:src/tim.c     ****     TIM3->CCR2 = a;
 339              		.loc 2 86 0
 340 000a 044B     		ldr	r3, .L17	@ D.5235,
 341 000c 6A46     		mov	r2, sp	@ tmp117,
 342 000e 0632     		adds	r2, r2, #6	@ tmp115,
 343 0010 1288     		ldrh	r2, [r2]	@ D.5236, a
 344 0012 9A63     		str	r2, [r3, #56]	@ D.5236, _1->CCR2
  87:src/tim.c     **** }
 345              		.loc 2 87 0
 346 0014 C046     		nop
 347 0016 02B0     		add	sp, sp, #8	@,,
 348              		@ sp needed	@
 349 0018 7047     		bx	lr
 350              	.L18:
 351 001a C046     		.align	2
 352              	.L17:
 353 001c 00040040 		.word	1073742848
 354              		.cfi_endproc
 355              	.LFE22:
 356              		.size	Update_TIM3_CH2, .-Update_TIM3_CH2
 357              		.section	.text.Update_TIM3_CH3,"ax",%progbits
 358              		.align	2
 359              		.global	Update_TIM3_CH3
 360              		.code	16
 361              		.thumb_func
 362              		.type	Update_TIM3_CH3, %function
 363              	Update_TIM3_CH3:
 364              	.LFB23:
  88:src/tim.c     **** 
  89:src/tim.c     **** void Update_TIM3_CH3 (unsigned short a)
  90:src/tim.c     **** {
 365              		.loc 2 90 0
 366              		.cfi_startproc
 367 0000 82B0     		sub	sp, sp, #8	@,,
 368              	.LCFI6:
 369              		.cfi_def_cfa_offset 8
 370 0002 0200     		movs	r2, r0	@ tmp112, a
 371 0004 6B46     		mov	r3, sp	@ tmp116,
 372 0006 0633     		adds	r3, r3, #6	@ tmp113,
 373 0008 1A80     		strh	r2, [r3]	@ tmp114, a
  91:src/tim.c     ****     TIM3->CCR3 = a;
ARM GAS  /tmp/ccD5vHri.s 			page 25


 374              		.loc 2 91 0
 375 000a 044B     		ldr	r3, .L20	@ D.5237,
 376 000c 6A46     		mov	r2, sp	@ tmp117,
 377 000e 0632     		adds	r2, r2, #6	@ tmp115,
 378 0010 1288     		ldrh	r2, [r2]	@ D.5238, a
 379 0012 DA63     		str	r2, [r3, #60]	@ D.5238, _1->CCR3
  92:src/tim.c     **** }
 380              		.loc 2 92 0
 381 0014 C046     		nop
 382 0016 02B0     		add	sp, sp, #8	@,,
 383              		@ sp needed	@
 384 0018 7047     		bx	lr
 385              	.L21:
 386 001a C046     		.align	2
 387              	.L20:
 388 001c 00040040 		.word	1073742848
 389              		.cfi_endproc
 390              	.LFE23:
 391              		.size	Update_TIM3_CH3, .-Update_TIM3_CH3
 392              		.section	.text.Update_TIM3_CH4,"ax",%progbits
 393              		.align	2
 394              		.global	Update_TIM3_CH4
 395              		.code	16
 396              		.thumb_func
 397              		.type	Update_TIM3_CH4, %function
 398              	Update_TIM3_CH4:
 399              	.LFB24:
  93:src/tim.c     **** 
  94:src/tim.c     **** void Update_TIM3_CH4 (unsigned short a)
  95:src/tim.c     **** {
 400              		.loc 2 95 0
 401              		.cfi_startproc
 402 0000 82B0     		sub	sp, sp, #8	@,,
 403              	.LCFI7:
 404              		.cfi_def_cfa_offset 8
 405 0002 0200     		movs	r2, r0	@ tmp112, a
 406 0004 6B46     		mov	r3, sp	@ tmp116,
 407 0006 0633     		adds	r3, r3, #6	@ tmp113,
 408 0008 1A80     		strh	r2, [r3]	@ tmp114, a
  96:src/tim.c     ****     TIM3->CCR4 = a;
 409              		.loc 2 96 0
 410 000a 044B     		ldr	r3, .L23	@ D.5239,
 411 000c 6A46     		mov	r2, sp	@ tmp117,
 412 000e 0632     		adds	r2, r2, #6	@ tmp115,
 413 0010 1288     		ldrh	r2, [r2]	@ D.5240, a
 414 0012 1A64     		str	r2, [r3, #64]	@ D.5240, _1->CCR4
  97:src/tim.c     **** }
 415              		.loc 2 97 0
 416 0014 C046     		nop
 417 0016 02B0     		add	sp, sp, #8	@,,
 418              		@ sp needed	@
 419 0018 7047     		bx	lr
 420              	.L24:
 421 001a C046     		.align	2
 422              	.L23:
 423 001c 00040040 		.word	1073742848
 424              		.cfi_endproc
ARM GAS  /tmp/ccD5vHri.s 			page 26


 425              	.LFE24:
 426              		.size	Update_TIM3_CH4, .-Update_TIM3_CH4
 427              		.section	.text.Update_TIM14_CH1,"ax",%progbits
 428              		.align	2
 429              		.global	Update_TIM14_CH1
 430              		.code	16
 431              		.thumb_func
 432              		.type	Update_TIM14_CH1, %function
 433              	Update_TIM14_CH1:
 434              	.LFB25:
  98:src/tim.c     **** 
  99:src/tim.c     **** void Update_TIM14_CH1 (unsigned short a)
 100:src/tim.c     **** {
 435              		.loc 2 100 0
 436              		.cfi_startproc
 437 0000 82B0     		sub	sp, sp, #8	@,,
 438              	.LCFI8:
 439              		.cfi_def_cfa_offset 8
 440 0002 0200     		movs	r2, r0	@ tmp112, a
 441 0004 6B46     		mov	r3, sp	@ tmp116,
 442 0006 0633     		adds	r3, r3, #6	@ tmp113,
 443 0008 1A80     		strh	r2, [r3]	@ tmp114, a
 101:src/tim.c     ****     TIM14->CCR1 = a;
 444              		.loc 2 101 0
 445 000a 044B     		ldr	r3, .L26	@ D.5241,
 446 000c 6A46     		mov	r2, sp	@ tmp117,
 447 000e 0632     		adds	r2, r2, #6	@ tmp115,
 448 0010 1288     		ldrh	r2, [r2]	@ D.5242, a
 449 0012 5A63     		str	r2, [r3, #52]	@ D.5242, _1->CCR1
 102:src/tim.c     **** }
 450              		.loc 2 102 0
 451 0014 C046     		nop
 452 0016 02B0     		add	sp, sp, #8	@,,
 453              		@ sp needed	@
 454 0018 7047     		bx	lr
 455              	.L27:
 456 001a C046     		.align	2
 457              	.L26:
 458 001c 00200040 		.word	1073750016
 459              		.cfi_endproc
 460              	.LFE25:
 461              		.size	Update_TIM14_CH1, .-Update_TIM14_CH1
 462              		.section	.text.Wait_ms,"ax",%progbits
 463              		.align	2
 464              		.global	Wait_ms
 465              		.code	16
 466              		.thumb_func
 467              		.type	Wait_ms, %function
 468              	Wait_ms:
 469              	.LFB26:
 103:src/tim.c     **** 
 104:src/tim.c     **** void Wait_ms (unsigned short wait)
 105:src/tim.c     **** {
 470              		.loc 2 105 0
 471              		.cfi_startproc
 472 0000 82B0     		sub	sp, sp, #8	@,,
 473              	.LCFI9:
ARM GAS  /tmp/ccD5vHri.s 			page 27


 474              		.cfi_def_cfa_offset 8
 475 0002 0200     		movs	r2, r0	@ tmp111, wait
 476 0004 6B46     		mov	r3, sp	@ tmp119,
 477 0006 0633     		adds	r3, r3, #6	@ tmp112,
 478 0008 1A80     		strh	r2, [r3]	@ tmp113, wait
 106:src/tim.c     ****     wait_ms_var = wait;
 479              		.loc 2 106 0
 480 000a 074B     		ldr	r3, .L30	@ tmp114,
 481 000c 6A46     		mov	r2, sp	@ tmp120,
 482 000e 0632     		adds	r2, r2, #6	@ tmp115,
 483 0010 1288     		ldrh	r2, [r2]	@ tmp116, wait
 484 0012 1A80     		strh	r2, [r3]	@ tmp116, wait_ms_var
 107:src/tim.c     **** 
 108:src/tim.c     ****     while (wait_ms_var);
 485              		.loc 2 108 0
 486 0014 C046     		nop
 487              	.L29:
 488              		.loc 2 108 0 is_stmt 0 discriminator 1
 489 0016 044B     		ldr	r3, .L30	@ tmp117,
 490 0018 1B88     		ldrh	r3, [r3]	@ tmp118, wait_ms_var
 491 001a 9BB2     		uxth	r3, r3	@ D.5243, tmp118
 492 001c 002B     		cmp	r3, #0	@ D.5243,
 493 001e FAD1     		bne	.L29	@,
 109:src/tim.c     **** }
 494              		.loc 2 109 0 is_stmt 1
 495 0020 C046     		nop
 496 0022 02B0     		add	sp, sp, #8	@,,
 497              		@ sp needed	@
 498 0024 7047     		bx	lr
 499              	.L31:
 500 0026 C046     		.align	2
 501              	.L30:
 502 0028 00000000 		.word	wait_ms_var
 503              		.cfi_endproc
 504              	.LFE26:
 505              		.size	Wait_ms, .-Wait_ms
 506              		.section	.text.TIM_1_Init,"ax",%progbits
 507              		.align	2
 508              		.global	TIM_1_Init
 509              		.code	16
 510              		.thumb_func
 511              		.type	TIM_1_Init, %function
 512              	TIM_1_Init:
 513              	.LFB27:
 110:src/tim.c     **** 
 111:src/tim.c     **** //-------------------------------------------//
 112:src/tim.c     **** // @brief  TIM configure.
 113:src/tim.c     **** // @param  None
 114:src/tim.c     **** // @retval None
 115:src/tim.c     **** //------------------------------------------//
 116:src/tim.c     **** void TIM_1_Init (void)
 117:src/tim.c     **** {
 514              		.loc 2 117 0
 515              		.cfi_startproc
 516 0000 82B0     		sub	sp, sp, #8	@,,
 517              	.LCFI10:
 518              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccD5vHri.s 			page 28


 118:src/tim.c     ****     unsigned int temp = 0;
 519              		.loc 2 118 0
 520 0002 0023     		movs	r3, #0	@ tmp142,
 521 0004 0193     		str	r3, [sp, #4]	@ tmp142, temp
 119:src/tim.c     **** 
 120:src/tim.c     ****     if (!RCC_TIM1_CLK)
 522              		.loc 2 120 0
 523 0006 2D4B     		ldr	r3, .L34	@ D.5244,
 524 0008 9A69     		ldr	r2, [r3, #24]	@ D.5245, _3->APB2ENR
 525 000a 8023     		movs	r3, #128	@ tmp192,
 526 000c 1B01     		lsls	r3, r3, #4	@ tmp143, tmp192,
 527 000e 1340     		ands	r3, r2	@ D.5245, D.5245
 528 0010 06D1     		bne	.L33	@,
 121:src/tim.c     ****         RCC_TIM1_CLK_ON;
 529              		.loc 2 121 0
 530 0012 2A4B     		ldr	r3, .L34	@ D.5244,
 531 0014 294A     		ldr	r2, .L34	@ D.5244,
 532 0016 9269     		ldr	r2, [r2, #24]	@ D.5245, _8->APB2ENR
 533 0018 8021     		movs	r1, #128	@ tmp191,
 534 001a 0901     		lsls	r1, r1, #4	@ tmp144, tmp191,
 535 001c 0A43     		orrs	r2, r1	@ D.5245, tmp144
 536 001e 9A61     		str	r2, [r3, #24]	@ D.5245, _7->APB2ENR
 537              	.L33:
 122:src/tim.c     **** 
 123:src/tim.c     ****     //Configuracion del timer.
 124:src/tim.c     ****     //TIM1->CR1 |= TIM_CR1_OPM;        //clk int / 1; upcounting; one pulse
 125:src/tim.c     ****     TIM1->CR1 = 0x00;        //clk int / 1;
 538              		.loc 2 125 0
 539 0020 274B     		ldr	r3, .L34+4	@ D.5246,
 540 0022 0022     		movs	r2, #0	@ tmp145,
 541 0024 1A80     		strh	r2, [r3]	@ tmp146, _12->CR1
 126:src/tim.c     ****     // TIM1->CR2 |= TIM_CR2_MMS_1;        //UEV -> TRG0
 127:src/tim.c     ****     TIM1->CR2 = 0x00;
 542              		.loc 2 127 0
 543 0026 264B     		ldr	r3, .L34+4	@ D.5246,
 544 0028 0022     		movs	r2, #0	@ tmp147,
 545 002a 9A80     		strh	r2, [r3, #4]	@ tmp148, _14->CR2
 128:src/tim.c     ****     // TIM1->SMCR |= TIM_SMCR_MSM | TIM_SMCR_SMS_2 |
 129:src/tim.c     ****     //     TIM_SMCR_SMS_1 | TIM_SMCR_TS_1;    //link timer3; resync <- TRG2
 130:src/tim.c     ****     // TIM1->SMCR |= TIM_SMCR_MSM | TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1;    //link timer3; resync <- TR
 131:src/tim.c     ****     TIM1->SMCR |= TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1;    //link timer3 <- TRG0    
 546              		.loc 2 131 0
 547 002c 244A     		ldr	r2, .L34+4	@ D.5246,
 548 002e 244B     		ldr	r3, .L34+4	@ D.5246,
 549 0030 1B89     		ldrh	r3, [r3, #8]	@ tmp150,
 550 0032 9BB2     		uxth	r3, r3	@ D.5247, tmp150
 551 0034 0621     		movs	r1, #6	@ tmp152,
 552 0036 0B43     		orrs	r3, r1	@ tmp151, tmp152
 553 0038 9BB2     		uxth	r3, r3	@ D.5247, tmp151
 554 003a 1381     		strh	r3, [r2, #8]	@ tmp153, _16->SMCR
 132:src/tim.c     ****     // TIM1->SMCR = 0x0000;
 133:src/tim.c     **** 
 134:src/tim.c     ****     TIM1->CCMR1 = 0x0000;            
 555              		.loc 2 134 0
 556 003c 204B     		ldr	r3, .L34+4	@ D.5246,
 557 003e 0022     		movs	r2, #0	@ tmp154,
 558 0040 1A83     		strh	r2, [r3, #24]	@ tmp155, _21->CCMR1
ARM GAS  /tmp/ccD5vHri.s 			page 29


 135:src/tim.c     ****     TIM1->CCMR2 = 0x0060;            //CH3 output PWM mode 1 (channel active TIM1->CNT < TIM1->CCR1
 559              		.loc 2 135 0
 560 0042 1F4B     		ldr	r3, .L34+4	@ D.5246,
 561 0044 6022     		movs	r2, #96	@ tmp156,
 562 0046 9A83     		strh	r2, [r3, #28]	@ tmp157, _23->CCMR2
 136:src/tim.c     ****     TIM1->CCER |= TIM_CCER_CC3E;
 563              		.loc 2 136 0
 564 0048 1D49     		ldr	r1, .L34+4	@ D.5246,
 565 004a 1D4B     		ldr	r3, .L34+4	@ D.5246,
 566 004c 1B8C     		ldrh	r3, [r3, #32]	@ tmp159,
 567 004e 9BB2     		uxth	r3, r3	@ D.5247, tmp159
 568 0050 8022     		movs	r2, #128	@ tmp186,
 569 0052 5200     		lsls	r2, r2, #1	@ tmp161, tmp186,
 570 0054 1343     		orrs	r3, r2	@ tmp160, tmp161
 571 0056 9BB2     		uxth	r3, r3	@ D.5247, tmp160
 572 0058 0B84     		strh	r3, [r1, #32]	@ tmp162, _25->CCER
 137:src/tim.c     ****     // TIM1->CCER |= TIM_CCER_CC1E | TIM_CCER_CC3NE | TIM_CCER_CC3NP;    //el pin es TIM1_CH3N    
 138:src/tim.c     ****     
 139:src/tim.c     ****     TIM1->BDTR |= TIM_BDTR_MOE;
 573              		.loc 2 139 0
 574 005a 194A     		ldr	r2, .L34+4	@ D.5246,
 575 005c 1849     		ldr	r1, .L34+4	@ D.5246,
 576 005e 4423     		movs	r3, #68	@ tmp163,
 577 0060 CB5A     		ldrh	r3, [r1, r3]	@ tmp165,
 578 0062 9BB2     		uxth	r3, r3	@ D.5247, tmp165
 579 0064 1749     		ldr	r1, .L34+8	@ tmp167,
 580 0066 0B43     		orrs	r3, r1	@ tmp166, tmp167
 581 0068 99B2     		uxth	r1, r3	@ D.5247, tmp166
 582 006a 4423     		movs	r3, #68	@ tmp168,
 583 006c D152     		strh	r1, [r2, r3]	@ tmp169, _30->BDTR
 140:src/tim.c     ****     // TIM1->ARR = 1023;                //cada tick 20.83ns
 141:src/tim.c     ****     TIM1->ARR = DUTY_100_PERCENT;   
 584              		.loc 2 141 0
 585 006e 144B     		ldr	r3, .L34+4	@ D.5246,
 586 0070 FA22     		movs	r2, #250	@ tmp187,
 587 0072 9200     		lsls	r2, r2, #2	@ tmp170, tmp187,
 588 0074 DA62     		str	r2, [r3, #44]	@ tmp170, _35->ARR
 142:src/tim.c     **** 
 143:src/tim.c     ****     TIM1->CNT = 0;
 589              		.loc 2 143 0
 590 0076 124B     		ldr	r3, .L34+4	@ D.5246,
 591 0078 0022     		movs	r2, #0	@ tmp171,
 592 007a 5A62     		str	r2, [r3, #36]	@ tmp171, _37->CNT
 144:src/tim.c     ****     TIM1->PSC = 0;
 593              		.loc 2 144 0
 594 007c 104B     		ldr	r3, .L34+4	@ D.5246,
 595 007e 0022     		movs	r2, #0	@ tmp172,
 596 0080 1A85     		strh	r2, [r3, #40]	@ tmp173, _39->PSC
 145:src/tim.c     **** 
 146:src/tim.c     ****     temp = GPIOA->AFR[1];
 597              		.loc 2 146 0
 598 0082 9023     		movs	r3, #144	@ tmp188,
 599 0084 DB05     		lsls	r3, r3, #23	@ D.5248, tmp188,
 600 0086 5B6A     		ldr	r3, [r3, #36]	@ tmp174, _41->AFR
 601 0088 0193     		str	r3, [sp, #4]	@ tmp174, temp
 147:src/tim.c     ****     temp &= 0xFFFFF0FF;
 602              		.loc 2 147 0
ARM GAS  /tmp/ccD5vHri.s 			page 30


 603 008a 019B     		ldr	r3, [sp, #4]	@ tmp176, temp
 604 008c 0E4A     		ldr	r2, .L34+12	@ tmp177,
 605 008e 1340     		ands	r3, r2	@ tmp175, tmp177
 606 0090 0193     		str	r3, [sp, #4]	@ tmp175, temp
 148:src/tim.c     ****     temp |= 0x00000200;    //PA10 -> AF2
 607              		.loc 2 148 0
 608 0092 019B     		ldr	r3, [sp, #4]	@ tmp179, temp
 609 0094 8022     		movs	r2, #128	@ tmp189,
 610 0096 9200     		lsls	r2, r2, #2	@ tmp180, tmp189,
 611 0098 1343     		orrs	r3, r2	@ tmp178, tmp180
 612 009a 0193     		str	r3, [sp, #4]	@ tmp178, temp
 149:src/tim.c     ****     GPIOA->AFR[1] = temp;
 613              		.loc 2 149 0
 614 009c 9023     		movs	r3, #144	@ tmp190,
 615 009e DB05     		lsls	r3, r3, #23	@ D.5248, tmp190,
 616 00a0 019A     		ldr	r2, [sp, #4]	@ tmp181, temp
 617 00a2 5A62     		str	r2, [r3, #36]	@ tmp181, _45->AFR
 150:src/tim.c     ****     
 151:src/tim.c     ****     // Enable timer ver UDIS
 152:src/tim.c     ****     //TIM1->DIER |= TIM_DIER_UIE;
 153:src/tim.c     ****     TIM1->CR1 |= TIM_CR1_CEN;
 618              		.loc 2 153 0
 619 00a4 064A     		ldr	r2, .L34+4	@ D.5246,
 620 00a6 064B     		ldr	r3, .L34+4	@ D.5246,
 621 00a8 1B88     		ldrh	r3, [r3]	@ tmp182, *_48
 622 00aa 9BB2     		uxth	r3, r3	@ D.5247, tmp182
 623 00ac 0121     		movs	r1, #1	@ tmp184,
 624 00ae 0B43     		orrs	r3, r1	@ tmp183, tmp184
 625 00b0 9BB2     		uxth	r3, r3	@ D.5247, tmp183
 626 00b2 1380     		strh	r3, [r2]	@ tmp185, _47->CR1
 154:src/tim.c     **** }
 627              		.loc 2 154 0
 628 00b4 C046     		nop
 629 00b6 02B0     		add	sp, sp, #8	@,,
 630              		@ sp needed	@
 631 00b8 7047     		bx	lr
 632              	.L35:
 633 00ba C046     		.align	2
 634              	.L34:
 635 00bc 00100240 		.word	1073876992
 636 00c0 002C0140 		.word	1073818624
 637 00c4 0080FFFF 		.word	-32768
 638 00c8 FFF0FFFF 		.word	-3841
 639              		.cfi_endproc
 640              	.LFE27:
 641              		.size	TIM_1_Init, .-TIM_1_Init
 642              		.section	.text.TIM_3_Init,"ax",%progbits
 643              		.align	2
 644              		.global	TIM_3_Init
 645              		.code	16
 646              		.thumb_func
 647              		.type	TIM_3_Init, %function
 648              	TIM_3_Init:
 649              	.LFB28:
 155:src/tim.c     **** 
 156:src/tim.c     **** 
 157:src/tim.c     **** void TIM_3_Init (void)
ARM GAS  /tmp/ccD5vHri.s 			page 31


 158:src/tim.c     **** {
 650              		.loc 2 158 0
 651              		.cfi_startproc
 652 0000 82B0     		sub	sp, sp, #8	@,,
 653              	.LCFI11:
 654              		.cfi_def_cfa_offset 8
 159:src/tim.c     ****     unsigned int temp = 0;
 655              		.loc 2 159 0
 656 0002 0023     		movs	r3, #0	@ tmp138,
 657 0004 0193     		str	r3, [sp, #4]	@ tmp138, temp
 160:src/tim.c     **** 
 161:src/tim.c     ****     if (!RCC_TIM3_CLK)
 658              		.loc 2 161 0
 659 0006 264B     		ldr	r3, .L38	@ D.5249,
 660 0008 DB69     		ldr	r3, [r3, #28]	@ D.5250, _3->APB1ENR
 661 000a 0222     		movs	r2, #2	@ tmp139,
 662 000c 1340     		ands	r3, r2	@ D.5250, tmp139
 663 000e 05D1     		bne	.L37	@,
 162:src/tim.c     ****         RCC_TIM3_CLK_ON;
 664              		.loc 2 162 0
 665 0010 234B     		ldr	r3, .L38	@ D.5249,
 666 0012 234A     		ldr	r2, .L38	@ D.5249,
 667 0014 D269     		ldr	r2, [r2, #28]	@ D.5250, _8->APB1ENR
 668 0016 0221     		movs	r1, #2	@ tmp140,
 669 0018 0A43     		orrs	r2, r1	@ D.5250, tmp140
 670 001a DA61     		str	r2, [r3, #28]	@ D.5250, _7->APB1ENR
 671              	.L37:
 163:src/tim.c     **** 
 164:src/tim.c     ****     //Configuracion del timer.
 165:src/tim.c     ****     //TIM3->CR1 = 0x0000;        //clk int / 1; upcounting;
 166:src/tim.c     ****     TIM3->CR2 |= TIM_CR2_MMS_1;        //UEV -> TRG0 (for the ADC sync)
 672              		.loc 2 166 0
 673 001c 214A     		ldr	r2, .L38+4	@ D.5251,
 674 001e 214B     		ldr	r3, .L38+4	@ D.5251,
 675 0020 9B88     		ldrh	r3, [r3, #4]	@ tmp142,
 676 0022 9BB2     		uxth	r3, r3	@ D.5252, tmp142
 677 0024 2021     		movs	r1, #32	@ tmp144,
 678 0026 0B43     		orrs	r3, r1	@ tmp143, tmp144
 679 0028 9BB2     		uxth	r3, r3	@ D.5252, tmp143
 680 002a 9380     		strh	r3, [r2, #4]	@ tmp145, _12->CR2
 167:src/tim.c     ****     // TIM3->CR2 = 0x0000;
 168:src/tim.c     ****     //TIM3->SMCR |= TIM_SMCR_SMS_2 |TIM_SMCR_SMS_1 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0;    //reset mode
 169:src/tim.c     ****     //TIM3->SMCR |= TIM_SMCR_SMS_2;    //reset mode link timer1    OJO no anda
 170:src/tim.c     ****     // TIM3->SMCR |= TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1;    //trigger mode link timer1
 171:src/tim.c     ****     TIM3->SMCR = 0x0000;    //
 681              		.loc 2 171 0
 682 002c 1D4B     		ldr	r3, .L38+4	@ D.5251,
 683 002e 0022     		movs	r2, #0	@ tmp146,
 684 0030 1A81     		strh	r2, [r3, #8]	@ tmp147, _17->SMCR
 172:src/tim.c     ****     TIM3->CCMR1 = 0x0060;            //CH1 output PWM mode 1 (channel active TIM3->CNT < TIM3->CCR1
 685              		.loc 2 172 0
 686 0032 1C4B     		ldr	r3, .L38+4	@ D.5251,
 687 0034 6022     		movs	r2, #96	@ tmp148,
 688 0036 1A83     		strh	r2, [r3, #24]	@ tmp149, _19->CCMR1
 173:src/tim.c     ****     TIM3->CCMR2 = 0x0000;
 689              		.loc 2 173 0
 690 0038 1A4B     		ldr	r3, .L38+4	@ D.5251,
ARM GAS  /tmp/ccD5vHri.s 			page 32


 691 003a 0022     		movs	r2, #0	@ tmp150,
 692 003c 9A83     		strh	r2, [r3, #28]	@ tmp151, _21->CCMR2
 174:src/tim.c     ****     TIM3->CCER |= TIM_CCER_CC1E;    //CH1 enable on pin active high
 693              		.loc 2 174 0
 694 003e 194A     		ldr	r2, .L38+4	@ D.5251,
 695 0040 184B     		ldr	r3, .L38+4	@ D.5251,
 696 0042 1B8C     		ldrh	r3, [r3, #32]	@ tmp153,
 697 0044 9BB2     		uxth	r3, r3	@ D.5252, tmp153
 698 0046 0121     		movs	r1, #1	@ tmp155,
 699 0048 0B43     		orrs	r3, r1	@ tmp154, tmp155
 700 004a 9BB2     		uxth	r3, r3	@ D.5252, tmp154
 701 004c 1384     		strh	r3, [r2, #32]	@ tmp156, _23->CCER
 175:src/tim.c     **** 
 176:src/tim.c     ****     TIM3->ARR = DUTY_100_PERCENT;
 702              		.loc 2 176 0
 703 004e 154B     		ldr	r3, .L38+4	@ D.5251,
 704 0050 FA22     		movs	r2, #250	@ tmp174,
 705 0052 9200     		lsls	r2, r2, #2	@ tmp157, tmp174,
 706 0054 DA62     		str	r2, [r3, #44]	@ tmp157, _28->ARR
 177:src/tim.c     ****     TIM3->CNT = 0;
 707              		.loc 2 177 0
 708 0056 134B     		ldr	r3, .L38+4	@ D.5251,
 709 0058 0022     		movs	r2, #0	@ tmp158,
 710 005a 5A62     		str	r2, [r3, #36]	@ tmp158, _30->CNT
 178:src/tim.c     ****     TIM3->PSC = 0;
 711              		.loc 2 178 0
 712 005c 114B     		ldr	r3, .L38+4	@ D.5251,
 713 005e 0022     		movs	r2, #0	@ tmp159,
 714 0060 1A85     		strh	r2, [r3, #40]	@ tmp160, _32->PSC
 179:src/tim.c     ****     
 180:src/tim.c     ****     //Alternative Function Pins
 181:src/tim.c     ****     temp = GPIOA->AFR[0];
 715              		.loc 2 181 0
 716 0062 9023     		movs	r3, #144	@ tmp175,
 717 0064 DB05     		lsls	r3, r3, #23	@ D.5253, tmp175,
 718 0066 1B6A     		ldr	r3, [r3, #32]	@ tmp161, _34->AFR
 719 0068 0193     		str	r3, [sp, #4]	@ tmp161, temp
 182:src/tim.c     ****     temp &= 0xF0FFFFFF;
 720              		.loc 2 182 0
 721 006a 019B     		ldr	r3, [sp, #4]	@ tmp163, temp
 722 006c 0E4A     		ldr	r2, .L38+8	@ tmp164,
 723 006e 1340     		ands	r3, r2	@ tmp162, tmp164
 724 0070 0193     		str	r3, [sp, #4]	@ tmp162, temp
 183:src/tim.c     ****     temp |= 0x01000000;    //PA6 -> AF1;
 725              		.loc 2 183 0
 726 0072 019B     		ldr	r3, [sp, #4]	@ tmp166, temp
 727 0074 8022     		movs	r2, #128	@ tmp176,
 728 0076 5204     		lsls	r2, r2, #17	@ tmp167, tmp176,
 729 0078 1343     		orrs	r3, r2	@ tmp165, tmp167
 730 007a 0193     		str	r3, [sp, #4]	@ tmp165, temp
 184:src/tim.c     ****     GPIOA->AFR[0] = temp;
 731              		.loc 2 184 0
 732 007c 9023     		movs	r3, #144	@ tmp177,
 733 007e DB05     		lsls	r3, r3, #23	@ D.5253, tmp177,
 734 0080 019A     		ldr	r2, [sp, #4]	@ tmp168, temp
 735 0082 1A62     		str	r2, [r3, #32]	@ tmp168, _38->AFR
 185:src/tim.c     **** 
ARM GAS  /tmp/ccD5vHri.s 			page 33


 186:src/tim.c     ****     // temp = GPIOB->AFR[0];
 187:src/tim.c     ****     // temp &= 0xFFFFFF00;
 188:src/tim.c     ****     // temp |= 0x00000011;    //PB1 & PB0 -> AF1;
 189:src/tim.c     ****     // GPIOB->AFR[0] = temp;
 190:src/tim.c     **** 
 191:src/tim.c     ****     // Enable timer ver UDIS
 192:src/tim.c     ****     //TIM3->DIER |= TIM_DIER_UIE;
 193:src/tim.c     ****     TIM3->CR1 |= TIM_CR1_CEN;
 736              		.loc 2 193 0
 737 0084 074A     		ldr	r2, .L38+4	@ D.5251,
 738 0086 074B     		ldr	r3, .L38+4	@ D.5251,
 739 0088 1B88     		ldrh	r3, [r3]	@ tmp169, *_41
 740 008a 9BB2     		uxth	r3, r3	@ D.5252, tmp169
 741 008c 0121     		movs	r1, #1	@ tmp171,
 742 008e 0B43     		orrs	r3, r1	@ tmp170, tmp171
 743 0090 9BB2     		uxth	r3, r3	@ D.5252, tmp170
 744 0092 1380     		strh	r3, [r2]	@ tmp172, _40->CR1
 194:src/tim.c     **** 
 195:src/tim.c     ****     TIM3->CCR1 = 0;        
 745              		.loc 2 195 0
 746 0094 034B     		ldr	r3, .L38+4	@ D.5251,
 747 0096 0022     		movs	r2, #0	@ tmp173,
 748 0098 5A63     		str	r2, [r3, #52]	@ tmp173, _45->CCR1
 196:src/tim.c     **** }
 749              		.loc 2 196 0
 750 009a C046     		nop
 751 009c 02B0     		add	sp, sp, #8	@,,
 752              		@ sp needed	@
 753 009e 7047     		bx	lr
 754              	.L39:
 755              		.align	2
 756              	.L38:
 757 00a0 00100240 		.word	1073876992
 758 00a4 00040040 		.word	1073742848
 759 00a8 FFFFFFF0 		.word	-251658241
 760              		.cfi_endproc
 761              	.LFE28:
 762              		.size	TIM_3_Init, .-TIM_3_Init
 763              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 764              		.align	2
 765              		.global	TIM3_IRQHandler
 766              		.code	16
 767              		.thumb_func
 768              		.type	TIM3_IRQHandler, %function
 769              	TIM3_IRQHandler:
 770              	.LFB29:
 197:src/tim.c     **** 
 198:src/tim.c     **** 
 199:src/tim.c     **** void TIM3_IRQHandler (void)	
 200:src/tim.c     **** {
 771              		.loc 2 200 0
 772              		.cfi_startproc
 201:src/tim.c     ****     //bajar flag
 202:src/tim.c     ****     if (TIM3->SR & 0x01)	//bajo el flag
 773              		.loc 2 202 0
 774 0000 054B     		ldr	r3, .L43	@ D.5254,
 775 0002 1B8A     		ldrh	r3, [r3, #16]	@ tmp116,
ARM GAS  /tmp/ccD5vHri.s 			page 34


 776 0004 9BB2     		uxth	r3, r3	@ D.5255, tmp116
 777 0006 1A00     		movs	r2, r3	@ D.5256, D.5255
 778 0008 0123     		movs	r3, #1	@ tmp117,
 779 000a 1340     		ands	r3, r2	@ D.5256, D.5256
 780 000c 02D0     		beq	.L42	@,
 203:src/tim.c     ****         TIM3->SR = 0x00;
 781              		.loc 2 203 0
 782 000e 024B     		ldr	r3, .L43	@ D.5254,
 783 0010 0022     		movs	r2, #0	@ tmp118,
 784 0012 1A82     		strh	r2, [r3, #16]	@ tmp119, _7->SR
 785              	.L42:
 204:src/tim.c     **** }
 786              		.loc 2 204 0
 787 0014 C046     		nop
 788              		@ sp needed	@
 789 0016 7047     		bx	lr
 790              	.L44:
 791              		.align	2
 792              	.L43:
 793 0018 00040040 		.word	1073742848
 794              		.cfi_endproc
 795              	.LFE29:
 796              		.size	TIM3_IRQHandler, .-TIM3_IRQHandler
 797              		.section	.text.TIM_6_Init,"ax",%progbits
 798              		.align	2
 799              		.global	TIM_6_Init
 800              		.code	16
 801              		.thumb_func
 802              		.type	TIM_6_Init, %function
 803              	TIM_6_Init:
 804              	.LFB30:
 205:src/tim.c     **** 
 206:src/tim.c     **** 
 207:src/tim.c     **** void TIM_6_Init (void)
 208:src/tim.c     **** {
 805              		.loc 2 208 0
 806              		.cfi_startproc
 209:src/tim.c     ****     if (!RCC_TIM6_CLK)
 807              		.loc 2 209 0
 808 0000 0A4B     		ldr	r3, .L47	@ D.5257,
 809 0002 DB69     		ldr	r3, [r3, #28]	@ D.5258, _2->APB1ENR
 810 0004 1022     		movs	r2, #16	@ tmp120,
 811 0006 1340     		ands	r3, r2	@ D.5258, tmp120
 812 0008 05D1     		bne	.L46	@,
 210:src/tim.c     ****         RCC_TIM6_CLK_ON;
 813              		.loc 2 210 0
 814 000a 084B     		ldr	r3, .L47	@ D.5257,
 815 000c 074A     		ldr	r2, .L47	@ D.5257,
 816 000e D269     		ldr	r2, [r2, #28]	@ D.5258, _7->APB1ENR
 817 0010 1021     		movs	r1, #16	@ tmp121,
 818 0012 0A43     		orrs	r2, r1	@ D.5258, tmp121
 819 0014 DA61     		str	r2, [r3, #28]	@ D.5258, _6->APB1ENR
 820              	.L46:
 211:src/tim.c     **** 
 212:src/tim.c     ****     //Configuracion del timer.
 213:src/tim.c     ****     TIM6->CR1 = 0x00;		//clk int / 1; upcounting
 821              		.loc 2 213 0
ARM GAS  /tmp/ccD5vHri.s 			page 35


 822 0016 064B     		ldr	r3, .L47+4	@ D.5259,
 823 0018 0022     		movs	r2, #0	@ tmp122,
 824 001a 1A80     		strh	r2, [r3]	@ tmp123, _11->CR1
 214:src/tim.c     ****     TIM6->PSC = 47;			//tick cada 1us
 825              		.loc 2 214 0
 826 001c 044B     		ldr	r3, .L47+4	@ D.5259,
 827 001e 2F22     		movs	r2, #47	@ tmp124,
 828 0020 1A85     		strh	r2, [r3, #40]	@ tmp125, _13->PSC
 215:src/tim.c     ****     TIM6->ARR = 0xFFFF;			//para que arranque
 829              		.loc 2 215 0
 830 0022 034B     		ldr	r3, .L47+4	@ D.5259,
 831 0024 034A     		ldr	r2, .L47+8	@ tmp126,
 832 0026 DA62     		str	r2, [r3, #44]	@ tmp126, _15->ARR
 216:src/tim.c     ****     //TIM6->CR1 |= TIM_CR1_CEN;
 217:src/tim.c     **** }
 833              		.loc 2 217 0
 834 0028 C046     		nop
 835              		@ sp needed	@
 836 002a 7047     		bx	lr
 837              	.L48:
 838              		.align	2
 839              	.L47:
 840 002c 00100240 		.word	1073876992
 841 0030 00100040 		.word	1073745920
 842 0034 FFFF0000 		.word	65535
 843              		.cfi_endproc
 844              	.LFE30:
 845              		.size	TIM_6_Init, .-TIM_6_Init
 846              		.section	.text.TIM6Enable,"ax",%progbits
 847              		.align	2
 848              		.global	TIM6Enable
 849              		.code	16
 850              		.thumb_func
 851              		.type	TIM6Enable, %function
 852              	TIM6Enable:
 853              	.LFB31:
 218:src/tim.c     **** 
 219:src/tim.c     **** void TIM6Enable (void)
 220:src/tim.c     **** {
 854              		.loc 2 220 0
 855              		.cfi_startproc
 221:src/tim.c     ****     TIM6->CR1 |= TIM_CR1_CEN;
 856              		.loc 2 221 0
 857 0000 044A     		ldr	r2, .L50	@ D.5260,
 858 0002 044B     		ldr	r3, .L50	@ D.5260,
 859 0004 1B88     		ldrh	r3, [r3]	@ tmp114, *_2
 860 0006 9BB2     		uxth	r3, r3	@ D.5261, tmp114
 861 0008 0121     		movs	r1, #1	@ tmp116,
 862 000a 0B43     		orrs	r3, r1	@ tmp115, tmp116
 863 000c 9BB2     		uxth	r3, r3	@ D.5261, tmp115
 864 000e 1380     		strh	r3, [r2]	@ tmp117, _1->CR1
 222:src/tim.c     **** }
 865              		.loc 2 222 0
 866 0010 C046     		nop
 867              		@ sp needed	@
 868 0012 7047     		bx	lr
 869              	.L51:
ARM GAS  /tmp/ccD5vHri.s 			page 36


 870              		.align	2
 871              	.L50:
 872 0014 00100040 		.word	1073745920
 873              		.cfi_endproc
 874              	.LFE31:
 875              		.size	TIM6Enable, .-TIM6Enable
 876              		.section	.text.TIM6Disable,"ax",%progbits
 877              		.align	2
 878              		.global	TIM6Disable
 879              		.code	16
 880              		.thumb_func
 881              		.type	TIM6Disable, %function
 882              	TIM6Disable:
 883              	.LFB32:
 223:src/tim.c     **** 
 224:src/tim.c     **** void TIM6Disable (void)
 225:src/tim.c     **** {
 884              		.loc 2 225 0
 885              		.cfi_startproc
 226:src/tim.c     ****     TIM6->CR1 &= ~TIM_CR1_CEN;
 886              		.loc 2 226 0
 887 0000 044A     		ldr	r2, .L53	@ D.5262,
 888 0002 044B     		ldr	r3, .L53	@ D.5262,
 889 0004 1B88     		ldrh	r3, [r3]	@ tmp114, *_2
 890 0006 9BB2     		uxth	r3, r3	@ D.5263, tmp114
 891 0008 0121     		movs	r1, #1	@ tmp116,
 892 000a 8B43     		bics	r3, r1	@ tmp115, tmp116
 893 000c 9BB2     		uxth	r3, r3	@ D.5263, tmp115
 894 000e 1380     		strh	r3, [r2]	@ tmp117, _1->CR1
 227:src/tim.c     **** }
 895              		.loc 2 227 0
 896 0010 C046     		nop
 897              		@ sp needed	@
 898 0012 7047     		bx	lr
 899              	.L54:
 900              		.align	2
 901              	.L53:
 902 0014 00100040 		.word	1073745920
 903              		.cfi_endproc
 904              	.LFE32:
 905              		.size	TIM6Disable, .-TIM6Disable
 906              		.section	.text.TIM14_IRQHandler,"ax",%progbits
 907              		.align	2
 908              		.global	TIM14_IRQHandler
 909              		.code	16
 910              		.thumb_func
 911              		.type	TIM14_IRQHandler, %function
 912              	TIM14_IRQHandler:
 913              	.LFB33:
 228:src/tim.c     **** 
 229:src/tim.c     **** void TIM14_IRQHandler (void)	//100uS
 230:src/tim.c     **** {
 914              		.loc 2 230 0
 915              		.cfi_startproc
 231:src/tim.c     **** 
 232:src/tim.c     ****     if (TIM14->SR & 0x01)
 916              		.loc 2 232 0
ARM GAS  /tmp/ccD5vHri.s 			page 37


 917 0000 054B     		ldr	r3, .L58	@ D.5264,
 918 0002 1B8A     		ldrh	r3, [r3, #16]	@ tmp116,
 919 0004 9BB2     		uxth	r3, r3	@ D.5265, tmp116
 920 0006 1A00     		movs	r2, r3	@ D.5266, D.5265
 921 0008 0123     		movs	r3, #1	@ tmp117,
 922 000a 1340     		ands	r3, r2	@ D.5266, D.5266
 923 000c 02D0     		beq	.L57	@,
 233:src/tim.c     ****         //bajar flag
 234:src/tim.c     ****         TIM14->SR = 0x00;
 924              		.loc 2 234 0
 925 000e 024B     		ldr	r3, .L58	@ D.5264,
 926 0010 0022     		movs	r2, #0	@ tmp118,
 927 0012 1A82     		strh	r2, [r3, #16]	@ tmp119, _7->SR
 928              	.L57:
 235:src/tim.c     **** }
 929              		.loc 2 235 0
 930 0014 C046     		nop
 931              		@ sp needed	@
 932 0016 7047     		bx	lr
 933              	.L59:
 934              		.align	2
 935              	.L58:
 936 0018 00200040 		.word	1073750016
 937              		.cfi_endproc
 938              	.LFE33:
 939              		.size	TIM14_IRQHandler, .-TIM14_IRQHandler
 940              		.section	.text.TIM_14_Init,"ax",%progbits
 941              		.align	2
 942              		.global	TIM_14_Init
 943              		.code	16
 944              		.thumb_func
 945              		.type	TIM_14_Init, %function
 946              	TIM_14_Init:
 947              	.LFB34:
 236:src/tim.c     **** 
 237:src/tim.c     **** void TIM_14_Init (void)
 238:src/tim.c     **** {
 948              		.loc 2 238 0
 949              		.cfi_startproc
 950 0000 82B0     		sub	sp, sp, #8	@,,
 951              	.LCFI12:
 952              		.cfi_def_cfa_offset 8
 239:src/tim.c     ****     unsigned int temp;
 240:src/tim.c     **** 
 241:src/tim.c     ****     if (!RCC_TIM14_CLK)
 953              		.loc 2 241 0
 954 0002 1D4B     		ldr	r3, .L62	@ D.5267,
 955 0004 DA69     		ldr	r2, [r3, #28]	@ D.5268, _2->APB1ENR
 956 0006 8023     		movs	r3, #128	@ tmp161,
 957 0008 5B00     		lsls	r3, r3, #1	@ tmp134, tmp161,
 958 000a 1340     		ands	r3, r2	@ D.5268, D.5268
 959 000c 06D1     		bne	.L61	@,
 242:src/tim.c     ****         RCC_TIM14_CLK_ON;
 960              		.loc 2 242 0
 961 000e 1A4B     		ldr	r3, .L62	@ D.5267,
 962 0010 194A     		ldr	r2, .L62	@ D.5267,
 963 0012 D269     		ldr	r2, [r2, #28]	@ D.5268, _7->APB1ENR
ARM GAS  /tmp/ccD5vHri.s 			page 38


 964 0014 8021     		movs	r1, #128	@ tmp160,
 965 0016 4900     		lsls	r1, r1, #1	@ tmp135, tmp160,
 966 0018 0A43     		orrs	r2, r1	@ D.5268, tmp135
 967 001a DA61     		str	r2, [r3, #28]	@ D.5268, _6->APB1ENR
 968              	.L61:
 243:src/tim.c     **** 
 244:src/tim.c     ****     TIM14->CCMR1 = 0x0060;            //CH1 output PWM mode 1
 969              		.loc 2 244 0
 970 001c 174B     		ldr	r3, .L62+4	@ D.5269,
 971 001e 6022     		movs	r2, #96	@ tmp136,
 972 0020 1A83     		strh	r2, [r3, #24]	@ tmp137, _11->CCMR1
 245:src/tim.c     ****     TIM14->CCER |= TIM_CCER_CC1E;    //CH1 enable on pin active high
 973              		.loc 2 245 0
 974 0022 164A     		ldr	r2, .L62+4	@ D.5269,
 975 0024 154B     		ldr	r3, .L62+4	@ D.5269,
 976 0026 1B8C     		ldrh	r3, [r3, #32]	@ tmp139,
 977 0028 9BB2     		uxth	r3, r3	@ D.5270, tmp139
 978 002a 0121     		movs	r1, #1	@ tmp141,
 979 002c 0B43     		orrs	r3, r1	@ tmp140, tmp141
 980 002e 9BB2     		uxth	r3, r3	@ D.5270, tmp140
 981 0030 1384     		strh	r3, [r2, #32]	@ tmp142, _13->CCER
 246:src/tim.c     ****     //TIM3->CCER |= TIM_CCER_CC2E | TIM_CCER_CC2P;    //CH2 enable on pin active high
 247:src/tim.c     ****     TIM14->PSC = 3;			//tick cada 83.33n
 982              		.loc 2 247 0
 983 0032 124B     		ldr	r3, .L62+4	@ D.5269,
 984 0034 0322     		movs	r2, #3	@ tmp143,
 985 0036 1A85     		strh	r2, [r3, #40]	@ tmp144, _18->PSC
 248:src/tim.c     ****     TIM14->ARR = 1023;    //freq 11.73KHz
 986              		.loc 2 248 0
 987 0038 104B     		ldr	r3, .L62+4	@ D.5269,
 988 003a 114A     		ldr	r2, .L62+8	@ tmp145,
 989 003c DA62     		str	r2, [r3, #44]	@ tmp145, _20->ARR
 249:src/tim.c     **** 
 250:src/tim.c     ****     //Configuracion del timer.
 251:src/tim.c     ****     TIM14->EGR |= 0x0001;
 990              		.loc 2 251 0
 991 003e 0F4A     		ldr	r2, .L62+4	@ D.5269,
 992 0040 0E4B     		ldr	r3, .L62+4	@ D.5269,
 993 0042 9B8A     		ldrh	r3, [r3, #20]	@ tmp147,
 994 0044 9BB2     		uxth	r3, r3	@ D.5270, tmp147
 995 0046 0121     		movs	r1, #1	@ tmp149,
 996 0048 0B43     		orrs	r3, r1	@ tmp148, tmp149
 997 004a 9BB2     		uxth	r3, r3	@ D.5270, tmp148
 998 004c 9382     		strh	r3, [r2, #20]	@ tmp150, _22->EGR
 252:src/tim.c     **** 
 253:src/tim.c     ****     //Configuracion Pin PB1
 254:src/tim.c     ****     temp = GPIOB->AFR[0];
 999              		.loc 2 254 0
 1000 004e 0D4B     		ldr	r3, .L62+12	@ D.5271,
 1001 0050 1B6A     		ldr	r3, [r3, #32]	@ tmp151, _27->AFR
 1002 0052 0193     		str	r3, [sp, #4]	@ tmp151, temp
 255:src/tim.c     ****     temp &= 0xFFFFFF0F;
 1003              		.loc 2 255 0
 1004 0054 019B     		ldr	r3, [sp, #4]	@ tmp153, temp
 1005 0056 F022     		movs	r2, #240	@ tmp154,
 1006 0058 9343     		bics	r3, r2	@ tmp152, tmp154
 1007 005a 0193     		str	r3, [sp, #4]	@ tmp152, temp
ARM GAS  /tmp/ccD5vHri.s 			page 39


 256:src/tim.c     ****     temp |= 0x00000000;	//PB1 -> AF0
 257:src/tim.c     ****     GPIOB->AFR[0] = temp;
 1008              		.loc 2 257 0
 1009 005c 094B     		ldr	r3, .L62+12	@ D.5271,
 1010 005e 019A     		ldr	r2, [sp, #4]	@ tmp155, temp
 1011 0060 1A62     		str	r2, [r3, #32]	@ tmp155, _31->AFR
 258:src/tim.c     **** 
 259:src/tim.c     ****     TIM14->CR1 |= TIM_CR1_CEN;
 1012              		.loc 2 259 0
 1013 0062 064A     		ldr	r2, .L62+4	@ D.5269,
 1014 0064 054B     		ldr	r3, .L62+4	@ D.5269,
 1015 0066 1B88     		ldrh	r3, [r3]	@ tmp156, *_34
 1016 0068 9BB2     		uxth	r3, r3	@ D.5270, tmp156
 1017 006a 0121     		movs	r1, #1	@ tmp158,
 1018 006c 0B43     		orrs	r3, r1	@ tmp157, tmp158
 1019 006e 9BB2     		uxth	r3, r3	@ D.5270, tmp157
 1020 0070 1380     		strh	r3, [r2]	@ tmp159, _33->CR1
 260:src/tim.c     **** 
 261:src/tim.c     **** }
 1021              		.loc 2 261 0
 1022 0072 C046     		nop
 1023 0074 02B0     		add	sp, sp, #8	@,,
 1024              		@ sp needed	@
 1025 0076 7047     		bx	lr
 1026              	.L63:
 1027              		.align	2
 1028              	.L62:
 1029 0078 00100240 		.word	1073876992
 1030 007c 00200040 		.word	1073750016
 1031 0080 FF030000 		.word	1023
 1032 0084 00040048 		.word	1207960576
 1033              		.cfi_endproc
 1034              	.LFE34:
 1035              		.size	TIM_14_Init, .-TIM_14_Init
 1036              		.section	.text.TIM16_IRQHandler,"ax",%progbits
 1037              		.align	2
 1038              		.global	TIM16_IRQHandler
 1039              		.code	16
 1040              		.thumb_func
 1041              		.type	TIM16_IRQHandler, %function
 1042              	TIM16_IRQHandler:
 1043              	.LFB35:
 262:src/tim.c     **** 
 263:src/tim.c     **** void TIM16_IRQHandler (void)	//es one shoot
 264:src/tim.c     **** {
 1044              		.loc 2 264 0
 1045              		.cfi_startproc
 265:src/tim.c     ****     //SendDMXPacket(PCKT_UPDATE);
 266:src/tim.c     **** 
 267:src/tim.c     ****     if (TIM16->SR & 0x01)
 1046              		.loc 2 267 0
 1047 0000 054B     		ldr	r3, .L67	@ D.5272,
 1048 0002 1B8A     		ldrh	r3, [r3, #16]	@ tmp116,
 1049 0004 9BB2     		uxth	r3, r3	@ D.5273, tmp116
 1050 0006 1A00     		movs	r2, r3	@ D.5274, D.5273
 1051 0008 0123     		movs	r3, #1	@ tmp117,
 1052 000a 1340     		ands	r3, r2	@ D.5274, D.5274
ARM GAS  /tmp/ccD5vHri.s 			page 40


 1053 000c 02D0     		beq	.L66	@,
 268:src/tim.c     ****         //bajar flag
 269:src/tim.c     ****         TIM16->SR = 0x00;
 1054              		.loc 2 269 0
 1055 000e 024B     		ldr	r3, .L67	@ D.5272,
 1056 0010 0022     		movs	r2, #0	@ tmp118,
 1057 0012 1A82     		strh	r2, [r3, #16]	@ tmp119, _7->SR
 1058              	.L66:
 270:src/tim.c     **** }
 1059              		.loc 2 270 0
 1060 0014 C046     		nop
 1061              		@ sp needed	@
 1062 0016 7047     		bx	lr
 1063              	.L68:
 1064              		.align	2
 1065              	.L67:
 1066 0018 00440140 		.word	1073824768
 1067              		.cfi_endproc
 1068              	.LFE35:
 1069              		.size	TIM16_IRQHandler, .-TIM16_IRQHandler
 1070              		.section	.text.TIM_16_Init,"ax",%progbits
 1071              		.align	2
 1072              		.global	TIM_16_Init
 1073              		.code	16
 1074              		.thumb_func
 1075              		.type	TIM_16_Init, %function
 1076              	TIM_16_Init:
 1077              	.LFB36:
 271:src/tim.c     **** 
 272:src/tim.c     **** void TIM_16_Init (void)
 273:src/tim.c     **** {
 1078              		.loc 2 273 0
 1079              		.cfi_startproc
 274:src/tim.c     ****     if (!RCC_TIM16_CLK)
 1080              		.loc 2 274 0
 1081 0000 0E4B     		ldr	r3, .L71	@ D.5275,
 1082 0002 9A69     		ldr	r2, [r3, #24]	@ D.5276, _2->APB2ENR
 1083 0004 8023     		movs	r3, #128	@ tmp133,
 1084 0006 9B02     		lsls	r3, r3, #10	@ tmp122, tmp133,
 1085 0008 1340     		ands	r3, r2	@ D.5276, D.5276
 1086 000a 06D1     		bne	.L70	@,
 275:src/tim.c     ****         RCC_TIM16_CLK_ON;
 1087              		.loc 2 275 0
 1088 000c 0B4B     		ldr	r3, .L71	@ D.5275,
 1089 000e 0B4A     		ldr	r2, .L71	@ D.5275,
 1090 0010 9269     		ldr	r2, [r2, #24]	@ D.5276, _7->APB2ENR
 1091 0012 8021     		movs	r1, #128	@ tmp132,
 1092 0014 8902     		lsls	r1, r1, #10	@ tmp123, tmp132,
 1093 0016 0A43     		orrs	r2, r1	@ D.5276, tmp123
 1094 0018 9A61     		str	r2, [r3, #24]	@ D.5276, _6->APB2ENR
 1095              	.L70:
 276:src/tim.c     **** 
 277:src/tim.c     ****     //Configuracion del timer.
 278:src/tim.c     ****     TIM16->CR1 = 0x00;		//clk int / 1; upcounting; uev
 1096              		.loc 2 278 0
 1097 001a 094B     		ldr	r3, .L71+4	@ D.5277,
 1098 001c 0022     		movs	r2, #0	@ tmp124,
ARM GAS  /tmp/ccD5vHri.s 			page 41


 1099 001e 1A80     		strh	r2, [r3]	@ tmp125, _11->CR1
 279:src/tim.c     ****     TIM16->ARR = 0xFFFF;
 1100              		.loc 2 279 0
 1101 0020 074B     		ldr	r3, .L71+4	@ D.5277,
 1102 0022 084A     		ldr	r2, .L71+8	@ tmp126,
 1103 0024 DA62     		str	r2, [r3, #44]	@ tmp126, _13->ARR
 280:src/tim.c     ****     TIM16->CNT = 0;
 1104              		.loc 2 280 0
 1105 0026 064B     		ldr	r3, .L71+4	@ D.5277,
 1106 0028 0022     		movs	r2, #0	@ tmp127,
 1107 002a 5A62     		str	r2, [r3, #36]	@ tmp127, _15->CNT
 281:src/tim.c     ****     TIM16->PSC = 47;			//tick 1us
 1108              		.loc 2 281 0
 1109 002c 044B     		ldr	r3, .L71+4	@ D.5277,
 1110 002e 2F22     		movs	r2, #47	@ tmp128,
 1111 0030 1A85     		strh	r2, [r3, #40]	@ tmp129, _17->PSC
 282:src/tim.c     ****     TIM16->EGR = TIM_EGR_UG;
 1112              		.loc 2 282 0
 1113 0032 034B     		ldr	r3, .L71+4	@ D.5277,
 1114 0034 0122     		movs	r2, #1	@ tmp130,
 1115 0036 9A82     		strh	r2, [r3, #20]	@ tmp131, _19->EGR
 283:src/tim.c     **** 
 284:src/tim.c     **** }
 1116              		.loc 2 284 0
 1117 0038 C046     		nop
 1118              		@ sp needed	@
 1119 003a 7047     		bx	lr
 1120              	.L72:
 1121              		.align	2
 1122              	.L71:
 1123 003c 00100240 		.word	1073876992
 1124 0040 00440140 		.word	1073824768
 1125 0044 FFFF0000 		.word	65535
 1126              		.cfi_endproc
 1127              	.LFE36:
 1128              		.size	TIM_16_Init, .-TIM_16_Init
 1129              		.section	.text.OneShootTIM16,"ax",%progbits
 1130              		.align	2
 1131              		.global	OneShootTIM16
 1132              		.code	16
 1133              		.thumb_func
 1134              		.type	OneShootTIM16, %function
 1135              	OneShootTIM16:
 1136              	.LFB37:
 285:src/tim.c     **** 
 286:src/tim.c     **** 
 287:src/tim.c     **** void OneShootTIM16 (unsigned short a)
 288:src/tim.c     **** {
 1137              		.loc 2 288 0
 1138              		.cfi_startproc
 1139 0000 82B0     		sub	sp, sp, #8	@,,
 1140              	.LCFI13:
 1141              		.cfi_def_cfa_offset 8
 1142 0002 0200     		movs	r2, r0	@ tmp116, a
 1143 0004 6B46     		mov	r3, sp	@ tmp124,
 1144 0006 0633     		adds	r3, r3, #6	@ tmp117,
 1145 0008 1A80     		strh	r2, [r3]	@ tmp118, a
ARM GAS  /tmp/ccD5vHri.s 			page 42


 289:src/tim.c     ****     TIM16->ARR = a;
 1146              		.loc 2 289 0
 1147 000a 084B     		ldr	r3, .L74	@ D.5278,
 1148 000c 6A46     		mov	r2, sp	@ tmp125,
 1149 000e 0632     		adds	r2, r2, #6	@ tmp119,
 1150 0010 1288     		ldrh	r2, [r2]	@ D.5279, a
 1151 0012 DA62     		str	r2, [r3, #44]	@ D.5279, _1->ARR
 290:src/tim.c     ****     TIM16->CR1 |= TIM_CR1_CEN;
 1152              		.loc 2 290 0
 1153 0014 054A     		ldr	r2, .L74	@ D.5278,
 1154 0016 054B     		ldr	r3, .L74	@ D.5278,
 1155 0018 1B88     		ldrh	r3, [r3]	@ tmp120, *_7
 1156 001a 9BB2     		uxth	r3, r3	@ D.5280, tmp120
 1157 001c 0121     		movs	r1, #1	@ tmp122,
 1158 001e 0B43     		orrs	r3, r1	@ tmp121, tmp122
 1159 0020 9BB2     		uxth	r3, r3	@ D.5280, tmp121
 1160 0022 1380     		strh	r3, [r2]	@ tmp123, _6->CR1
 291:src/tim.c     **** }
 1161              		.loc 2 291 0
 1162 0024 C046     		nop
 1163 0026 02B0     		add	sp, sp, #8	@,,
 1164              		@ sp needed	@
 1165 0028 7047     		bx	lr
 1166              	.L75:
 1167 002a C046     		.align	2
 1168              	.L74:
 1169 002c 00440140 		.word	1073824768
 1170              		.cfi_endproc
 1171              	.LFE37:
 1172              		.size	OneShootTIM16, .-OneShootTIM16
 1173              		.section	.text.TIM16Enable,"ax",%progbits
 1174              		.align	2
 1175              		.global	TIM16Enable
 1176              		.code	16
 1177              		.thumb_func
 1178              		.type	TIM16Enable, %function
 1179              	TIM16Enable:
 1180              	.LFB38:
 292:src/tim.c     **** 
 293:src/tim.c     **** 
 294:src/tim.c     **** void TIM16Enable (void)
 295:src/tim.c     **** {
 1181              		.loc 2 295 0
 1182              		.cfi_startproc
 296:src/tim.c     ****     TIM16->CR1 |= TIM_CR1_CEN;
 1183              		.loc 2 296 0
 1184 0000 044A     		ldr	r2, .L77	@ D.5281,
 1185 0002 044B     		ldr	r3, .L77	@ D.5281,
 1186 0004 1B88     		ldrh	r3, [r3]	@ tmp114, *_2
 1187 0006 9BB2     		uxth	r3, r3	@ D.5282, tmp114
 1188 0008 0121     		movs	r1, #1	@ tmp116,
 1189 000a 0B43     		orrs	r3, r1	@ tmp115, tmp116
 1190 000c 9BB2     		uxth	r3, r3	@ D.5282, tmp115
 1191 000e 1380     		strh	r3, [r2]	@ tmp117, _1->CR1
 297:src/tim.c     **** }
 1192              		.loc 2 297 0
 1193 0010 C046     		nop
ARM GAS  /tmp/ccD5vHri.s 			page 43


 1194              		@ sp needed	@
 1195 0012 7047     		bx	lr
 1196              	.L78:
 1197              		.align	2
 1198              	.L77:
 1199 0014 00440140 		.word	1073824768
 1200              		.cfi_endproc
 1201              	.LFE38:
 1202              		.size	TIM16Enable, .-TIM16Enable
 1203              		.section	.text.TIM16Disable,"ax",%progbits
 1204              		.align	2
 1205              		.global	TIM16Disable
 1206              		.code	16
 1207              		.thumb_func
 1208              		.type	TIM16Disable, %function
 1209              	TIM16Disable:
 1210              	.LFB39:
 298:src/tim.c     **** 
 299:src/tim.c     **** 
 300:src/tim.c     **** void TIM16Disable (void)
 301:src/tim.c     **** {
 1211              		.loc 2 301 0
 1212              		.cfi_startproc
 302:src/tim.c     ****     TIM16->CR1 &= ~TIM_CR1_CEN;
 1213              		.loc 2 302 0
 1214 0000 044A     		ldr	r2, .L80	@ D.5283,
 1215 0002 044B     		ldr	r3, .L80	@ D.5283,
 1216 0004 1B88     		ldrh	r3, [r3]	@ tmp114, *_2
 1217 0006 9BB2     		uxth	r3, r3	@ D.5284, tmp114
 1218 0008 0121     		movs	r1, #1	@ tmp116,
 1219 000a 8B43     		bics	r3, r1	@ tmp115, tmp116
 1220 000c 9BB2     		uxth	r3, r3	@ D.5284, tmp115
 1221 000e 1380     		strh	r3, [r2]	@ tmp117, _1->CR1
 303:src/tim.c     **** }
 1222              		.loc 2 303 0
 1223 0010 C046     		nop
 1224              		@ sp needed	@
 1225 0012 7047     		bx	lr
 1226              	.L81:
 1227              		.align	2
 1228              	.L80:
 1229 0014 00440140 		.word	1073824768
 1230              		.cfi_endproc
 1231              	.LFE39:
 1232              		.size	TIM16Disable, .-TIM16Disable
 1233              		.section	.text.TIM_17_Init,"ax",%progbits
 1234              		.align	2
 1235              		.global	TIM_17_Init
 1236              		.code	16
 1237              		.thumb_func
 1238              		.type	TIM_17_Init, %function
 1239              	TIM_17_Init:
 1240              	.LFB40:
 304:src/tim.c     **** 
 305:src/tim.c     **** 
 306:src/tim.c     **** void TIM_17_Init (void)
 307:src/tim.c     **** {
ARM GAS  /tmp/ccD5vHri.s 			page 44


 1241              		.loc 2 307 0
 1242              		.cfi_startproc
 1243 0000 10B5     		push	{r4, lr}	@
 1244              	.LCFI14:
 1245              		.cfi_def_cfa_offset 8
 1246              		.cfi_offset 4, -8
 1247              		.cfi_offset 14, -4
 308:src/tim.c     ****     if (!RCC_TIM17_CLK)
 1248              		.loc 2 308 0
 1249 0002 174B     		ldr	r3, .L84	@ D.5285,
 1250 0004 9A69     		ldr	r2, [r3, #24]	@ D.5286, _2->APB2ENR
 1251 0006 8023     		movs	r3, #128	@ tmp144,
 1252 0008 DB02     		lsls	r3, r3, #11	@ tmp128, tmp144,
 1253 000a 1340     		ands	r3, r2	@ D.5286, D.5286
 1254 000c 06D1     		bne	.L83	@,
 309:src/tim.c     ****         RCC_TIM17_CLK_ON;
 1255              		.loc 2 309 0
 1256 000e 144B     		ldr	r3, .L84	@ D.5285,
 1257 0010 134A     		ldr	r2, .L84	@ D.5285,
 1258 0012 9269     		ldr	r2, [r2, #24]	@ D.5286, _7->APB2ENR
 1259 0014 8021     		movs	r1, #128	@ tmp143,
 1260 0016 C902     		lsls	r1, r1, #11	@ tmp129, tmp143,
 1261 0018 0A43     		orrs	r2, r1	@ D.5286, tmp129
 1262 001a 9A61     		str	r2, [r3, #24]	@ D.5286, _6->APB2ENR
 1263              	.L83:
 310:src/tim.c     **** 
 311:src/tim.c     ****     //Configuracion del timer.
 312:src/tim.c     ****     TIM17->ARR = 0xFFFF;
 1264              		.loc 2 312 0
 1265 001c 114B     		ldr	r3, .L84+4	@ D.5287,
 1266 001e 124A     		ldr	r2, .L84+8	@ tmp130,
 1267 0020 DA62     		str	r2, [r3, #44]	@ tmp130, _11->ARR
 313:src/tim.c     ****     TIM17->CNT = 0;
 1268              		.loc 2 313 0
 1269 0022 104B     		ldr	r3, .L84+4	@ D.5287,
 1270 0024 0022     		movs	r2, #0	@ tmp131,
 1271 0026 5A62     		str	r2, [r3, #36]	@ tmp131, _13->CNT
 314:src/tim.c     ****     TIM17->PSC = 47;
 1272              		.loc 2 314 0
 1273 0028 0E4B     		ldr	r3, .L84+4	@ D.5287,
 1274 002a 2F22     		movs	r2, #47	@ tmp132,
 1275 002c 1A85     		strh	r2, [r3, #40]	@ tmp133, _15->PSC
 315:src/tim.c     **** 
 316:src/tim.c     ****     // Enable timer interrupt ver UDIS
 317:src/tim.c     ****     TIM17->DIER |= TIM_DIER_UIE;
 1276              		.loc 2 317 0
 1277 002e 0D4A     		ldr	r2, .L84+4	@ D.5287,
 1278 0030 0C4B     		ldr	r3, .L84+4	@ D.5287,
 1279 0032 9B89     		ldrh	r3, [r3, #12]	@ tmp135,
 1280 0034 9BB2     		uxth	r3, r3	@ D.5288, tmp135
 1281 0036 0121     		movs	r1, #1	@ tmp137,
 1282 0038 0B43     		orrs	r3, r1	@ tmp136, tmp137
 1283 003a 9BB2     		uxth	r3, r3	@ D.5288, tmp136
 1284 003c 9381     		strh	r3, [r2, #12]	@ tmp138, _17->DIER
 318:src/tim.c     ****     TIM17->CR1 |= TIM_CR1_URS;	//solo int cuando hay overflow y one shot
 1285              		.loc 2 318 0
 1286 003e 094A     		ldr	r2, .L84+4	@ D.5287,
ARM GAS  /tmp/ccD5vHri.s 			page 45


 1287 0040 084B     		ldr	r3, .L84+4	@ D.5287,
 1288 0042 1B88     		ldrh	r3, [r3]	@ tmp139, *_23
 1289 0044 9BB2     		uxth	r3, r3	@ D.5288, tmp139
 1290 0046 0421     		movs	r1, #4	@ tmp141,
 1291 0048 0B43     		orrs	r3, r1	@ tmp140, tmp141
 1292 004a 9BB2     		uxth	r3, r3	@ D.5288, tmp140
 1293 004c 1380     		strh	r3, [r2]	@ tmp142, _22->CR1
 319:src/tim.c     **** 
 320:src/tim.c     ****     NVIC_EnableIRQ(TIM17_IRQn);
 1294              		.loc 2 320 0
 1295 004e 1620     		movs	r0, #22	@,
 1296 0050 FFF7FEFF 		bl	NVIC_EnableIRQ	@
 321:src/tim.c     ****     NVIC_SetPriority(TIM17_IRQn, 8);
 1297              		.loc 2 321 0
 1298 0054 0821     		movs	r1, #8	@,
 1299 0056 1620     		movs	r0, #22	@,
 1300 0058 FFF7FEFF 		bl	NVIC_SetPriority	@
 322:src/tim.c     **** }
 1301              		.loc 2 322 0
 1302 005c C046     		nop
 1303              		@ sp needed	@
 1304 005e 10BD     		pop	{r4, pc}
 1305              	.L85:
 1306              		.align	2
 1307              	.L84:
 1308 0060 00100240 		.word	1073876992
 1309 0064 00480140 		.word	1073825792
 1310 0068 FFFF0000 		.word	65535
 1311              		.cfi_endproc
 1312              	.LFE40:
 1313              		.size	TIM_17_Init, .-TIM_17_Init
 1314              		.section	.text.TIM17_IRQHandler,"ax",%progbits
 1315              		.align	2
 1316              		.global	TIM17_IRQHandler
 1317              		.code	16
 1318              		.thumb_func
 1319              		.type	TIM17_IRQHandler, %function
 1320              	TIM17_IRQHandler:
 1321              	.LFB41:
 323:src/tim.c     **** 
 324:src/tim.c     **** 
 325:src/tim.c     **** void TIM17_IRQHandler (void)
 326:src/tim.c     **** {
 1322              		.loc 2 326 0
 1323              		.cfi_startproc
 327:src/tim.c     ****     if (TIM17->SR & 0x01)
 1324              		.loc 2 327 0
 1325 0000 054B     		ldr	r3, .L89	@ D.5289,
 1326 0002 1B8A     		ldrh	r3, [r3, #16]	@ tmp116,
 1327 0004 9BB2     		uxth	r3, r3	@ D.5290, tmp116
 1328 0006 1A00     		movs	r2, r3	@ D.5291, D.5290
 1329 0008 0123     		movs	r3, #1	@ tmp117,
 1330 000a 1340     		ands	r3, r2	@ D.5291, D.5291
 1331 000c 02D0     		beq	.L88	@,
 328:src/tim.c     ****     {
 329:src/tim.c     ****         // SYNC_Zero_Crossing_Handler();
 330:src/tim.c     ****         TIM17->SR = 0x00;    //flag down
ARM GAS  /tmp/ccD5vHri.s 			page 46


 1332              		.loc 2 330 0
 1333 000e 024B     		ldr	r3, .L89	@ D.5289,
 1334 0010 0022     		movs	r2, #0	@ tmp118,
 1335 0012 1A82     		strh	r2, [r3, #16]	@ tmp119, _7->SR
 1336              	.L88:
 331:src/tim.c     ****     }    
 332:src/tim.c     **** }
 1337              		.loc 2 332 0
 1338 0014 C046     		nop
 1339              		@ sp needed	@
 1340 0016 7047     		bx	lr
 1341              	.L90:
 1342              		.align	2
 1343              	.L89:
 1344 0018 00480140 		.word	1073825792
 1345              		.cfi_endproc
 1346              	.LFE41:
 1347              		.size	TIM17_IRQHandler, .-TIM17_IRQHandler
 1348              		.section	.text.TIM17Enable,"ax",%progbits
 1349              		.align	2
 1350              		.global	TIM17Enable
 1351              		.code	16
 1352              		.thumb_func
 1353              		.type	TIM17Enable, %function
 1354              	TIM17Enable:
 1355              	.LFB42:
 333:src/tim.c     **** 
 334:src/tim.c     **** 
 335:src/tim.c     **** void TIM17Enable (void)
 336:src/tim.c     **** {
 1356              		.loc 2 336 0
 1357              		.cfi_startproc
 337:src/tim.c     ****     TIM17->CR1 |= TIM_CR1_CEN;
 1358              		.loc 2 337 0
 1359 0000 044A     		ldr	r2, .L92	@ D.5292,
 1360 0002 044B     		ldr	r3, .L92	@ D.5292,
 1361 0004 1B88     		ldrh	r3, [r3]	@ tmp114, *_2
 1362 0006 9BB2     		uxth	r3, r3	@ D.5293, tmp114
 1363 0008 0121     		movs	r1, #1	@ tmp116,
 1364 000a 0B43     		orrs	r3, r1	@ tmp115, tmp116
 1365 000c 9BB2     		uxth	r3, r3	@ D.5293, tmp115
 1366 000e 1380     		strh	r3, [r2]	@ tmp117, _1->CR1
 338:src/tim.c     **** }
 1367              		.loc 2 338 0
 1368 0010 C046     		nop
 1369              		@ sp needed	@
 1370 0012 7047     		bx	lr
 1371              	.L93:
 1372              		.align	2
 1373              	.L92:
 1374 0014 00480140 		.word	1073825792
 1375              		.cfi_endproc
 1376              	.LFE42:
 1377              		.size	TIM17Enable, .-TIM17Enable
 1378              		.section	.text.TIM17Disable,"ax",%progbits
 1379              		.align	2
 1380              		.global	TIM17Disable
ARM GAS  /tmp/ccD5vHri.s 			page 47


 1381              		.code	16
 1382              		.thumb_func
 1383              		.type	TIM17Disable, %function
 1384              	TIM17Disable:
 1385              	.LFB43:
 339:src/tim.c     **** 
 340:src/tim.c     **** 
 341:src/tim.c     **** void TIM17Disable (void)
 342:src/tim.c     **** {
 1386              		.loc 2 342 0
 1387              		.cfi_startproc
 343:src/tim.c     ****     TIM17->CR1 &= ~TIM_CR1_CEN;
 1388              		.loc 2 343 0
 1389 0000 044A     		ldr	r2, .L95	@ D.5294,
 1390 0002 044B     		ldr	r3, .L95	@ D.5294,
 1391 0004 1B88     		ldrh	r3, [r3]	@ tmp114, *_2
 1392 0006 9BB2     		uxth	r3, r3	@ D.5295, tmp114
 1393 0008 0121     		movs	r1, #1	@ tmp116,
 1394 000a 8B43     		bics	r3, r1	@ tmp115, tmp116
 1395 000c 9BB2     		uxth	r3, r3	@ D.5295, tmp115
 1396 000e 1380     		strh	r3, [r2]	@ tmp117, _1->CR1
 344:src/tim.c     **** }
 1397              		.loc 2 344 0
 1398 0010 C046     		nop
 1399              		@ sp needed	@
 1400 0012 7047     		bx	lr
 1401              	.L96:
 1402              		.align	2
 1403              	.L95:
 1404 0014 00480140 		.word	1073825792
 1405              		.cfi_endproc
 1406              	.LFE43:
 1407              		.size	TIM17Disable, .-TIM17Disable
 1408              		.text
 1409              	.Letext0:
 1410              		.file 3 "./cmsis_boot/stm32f0xx.h"
 1411              		.file 4 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types
 1412              		.file 5 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 1413              		.section	.debug_info,"",%progbits
 1414              	.Ldebug_info0:
 1415 0000 AF0A0000 		.4byte	0xaaf
 1416 0004 0200     		.2byte	0x2
 1417 0006 00000000 		.4byte	.Ldebug_abbrev0
 1418 000a 04       		.byte	0x4
 1419 000b 01       		.uleb128 0x1
 1420 000c 9F050000 		.4byte	.LASF135
 1421 0010 0C       		.byte	0xc
 1422 0011 B2020000 		.4byte	.LASF136
 1423 0015 AF030000 		.4byte	.LASF137
 1424 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1425 001d 00000000 		.4byte	0
 1426 0021 00000000 		.4byte	0
 1427 0025 00000000 		.4byte	.Ldebug_line0
 1428 0029 02       		.uleb128 0x2
 1429 002a 01       		.byte	0x1
 1430 002b 08       		.byte	0x8
 1431 002c 05050000 		.4byte	.LASF29
ARM GAS  /tmp/ccD5vHri.s 			page 48


 1432 0030 03       		.uleb128 0x3
 1433 0031 0D030000 		.4byte	.LASF105
 1434 0035 01       		.byte	0x1
 1435 0036 EF000000 		.4byte	0xef
 1436 003a 03       		.byte	0x3
 1437 003b C7       		.byte	0xc7
 1438 003c EF000000 		.4byte	0xef
 1439 0040 04       		.uleb128 0x4
 1440 0041 9B030000 		.4byte	.LASF0
 1441 0045 72       		.sleb128 -14
 1442 0046 04       		.uleb128 0x4
 1443 0047 4A060000 		.4byte	.LASF1
 1444 004b 73       		.sleb128 -13
 1445 004c 04       		.uleb128 0x4
 1446 004d 47000000 		.4byte	.LASF2
 1447 0051 7B       		.sleb128 -5
 1448 0052 04       		.uleb128 0x4
 1449 0053 AC000000 		.4byte	.LASF3
 1450 0057 7E       		.sleb128 -2
 1451 0058 04       		.uleb128 0x4
 1452 0059 63040000 		.4byte	.LASF4
 1453 005d 7F       		.sleb128 -1
 1454 005e 05       		.uleb128 0x5
 1455 005f 61020000 		.4byte	.LASF5
 1456 0063 00       		.byte	0
 1457 0064 05       		.uleb128 0x5
 1458 0065 1E030000 		.4byte	.LASF6
 1459 0069 02       		.byte	0x2
 1460 006a 05       		.uleb128 0x5
 1461 006b 8A000000 		.4byte	.LASF7
 1462 006f 03       		.byte	0x3
 1463 0070 05       		.uleb128 0x5
 1464 0071 B8000000 		.4byte	.LASF8
 1465 0075 04       		.byte	0x4
 1466 0076 05       		.uleb128 0x5
 1467 0077 95000000 		.4byte	.LASF9
 1468 007b 05       		.byte	0x5
 1469 007c 05       		.uleb128 0x5
 1470 007d 2C000000 		.4byte	.LASF10
 1471 0081 06       		.byte	0x6
 1472 0082 05       		.uleb128 0x5
 1473 0083 08000000 		.4byte	.LASF11
 1474 0087 07       		.byte	0x7
 1475 0088 05       		.uleb128 0x5
 1476 0089 05020000 		.4byte	.LASF12
 1477 008d 09       		.byte	0x9
 1478 008e 05       		.uleb128 0x5
 1479 008f F0040000 		.4byte	.LASF13
 1480 0093 0A       		.byte	0xa
 1481 0094 05       		.uleb128 0x5
 1482 0095 17040000 		.4byte	.LASF14
 1483 0099 0B       		.byte	0xb
 1484 009a 05       		.uleb128 0x5
 1485 009b C5010000 		.4byte	.LASF15
 1486 009f 0C       		.byte	0xc
 1487 00a0 05       		.uleb128 0x5
 1488 00a1 7C020000 		.4byte	.LASF16
ARM GAS  /tmp/ccD5vHri.s 			page 49


 1489 00a5 0D       		.byte	0xd
 1490 00a6 05       		.uleb128 0x5
 1491 00a7 E7030000 		.4byte	.LASF17
 1492 00ab 0E       		.byte	0xe
 1493 00ac 05       		.uleb128 0x5
 1494 00ad FB010000 		.4byte	.LASF18
 1495 00b1 10       		.byte	0x10
 1496 00b2 05       		.uleb128 0x5
 1497 00b3 E5040000 		.4byte	.LASF19
 1498 00b7 13       		.byte	0x13
 1499 00b8 05       		.uleb128 0x5
 1500 00b9 2B020000 		.4byte	.LASF20
 1501 00bd 14       		.byte	0x14
 1502 00be 05       		.uleb128 0x5
 1503 00bf 7A000000 		.4byte	.LASF21
 1504 00c3 15       		.byte	0x15
 1505 00c4 05       		.uleb128 0x5
 1506 00c5 0C040000 		.4byte	.LASF22
 1507 00c9 16       		.byte	0x16
 1508 00ca 05       		.uleb128 0x5
 1509 00cb A2000000 		.4byte	.LASF23
 1510 00cf 17       		.byte	0x17
 1511 00d0 05       		.uleb128 0x5
 1512 00d1 7E040000 		.4byte	.LASF24
 1513 00d5 18       		.byte	0x18
 1514 00d6 05       		.uleb128 0x5
 1515 00d7 1A010000 		.4byte	.LASF25
 1516 00db 19       		.byte	0x19
 1517 00dc 05       		.uleb128 0x5
 1518 00dd 5F050000 		.4byte	.LASF26
 1519 00e1 1A       		.byte	0x1a
 1520 00e2 05       		.uleb128 0x5
 1521 00e3 8A030000 		.4byte	.LASF27
 1522 00e7 1B       		.byte	0x1b
 1523 00e8 05       		.uleb128 0x5
 1524 00e9 7A010000 		.4byte	.LASF28
 1525 00ed 1C       		.byte	0x1c
 1526 00ee 00       		.byte	0
 1527 00ef 02       		.uleb128 0x2
 1528 00f0 01       		.byte	0x1
 1529 00f1 06       		.byte	0x6
 1530 00f2 75050000 		.4byte	.LASF30
 1531 00f6 06       		.uleb128 0x6
 1532 00f7 70010000 		.4byte	.LASF31
 1533 00fb 03       		.byte	0x3
 1534 00fc 5F01     		.2byte	0x15f
 1535 00fe 30000000 		.4byte	0x30
 1536 0102 07       		.uleb128 0x7
 1537 0103 2C040000 		.4byte	.LASF32
 1538 0107 04       		.byte	0x4
 1539 0108 1D       		.byte	0x1d
 1540 0109 29000000 		.4byte	0x29
 1541 010d 02       		.uleb128 0x2
 1542 010e 02       		.byte	0x2
 1543 010f 05       		.byte	0x5
 1544 0110 6D030000 		.4byte	.LASF33
 1545 0114 07       		.uleb128 0x7
ARM GAS  /tmp/ccD5vHri.s 			page 50


 1546 0115 5F010000 		.4byte	.LASF34
 1547 0119 04       		.byte	0x4
 1548 011a 2B       		.byte	0x2b
 1549 011b 1F010000 		.4byte	0x11f
 1550 011f 02       		.uleb128 0x2
 1551 0120 02       		.byte	0x2
 1552 0121 07       		.byte	0x7
 1553 0122 81050000 		.4byte	.LASF35
 1554 0126 02       		.uleb128 0x2
 1555 0127 04       		.byte	0x4
 1556 0128 05       		.byte	0x5
 1557 0129 81030000 		.4byte	.LASF36
 1558 012d 07       		.uleb128 0x7
 1559 012e 13050000 		.4byte	.LASF37
 1560 0132 04       		.byte	0x4
 1561 0133 41       		.byte	0x41
 1562 0134 38010000 		.4byte	0x138
 1563 0138 02       		.uleb128 0x2
 1564 0139 04       		.byte	0x4
 1565 013a 07       		.byte	0x7
 1566 013b 88040000 		.4byte	.LASF38
 1567 013f 02       		.uleb128 0x2
 1568 0140 08       		.byte	0x8
 1569 0141 05       		.byte	0x5
 1570 0142 53020000 		.4byte	.LASF39
 1571 0146 02       		.uleb128 0x2
 1572 0147 08       		.byte	0x8
 1573 0148 07       		.byte	0x7
 1574 0149 33010000 		.4byte	.LASF40
 1575 014d 08       		.uleb128 0x8
 1576 014e 04       		.byte	0x4
 1577 014f 05       		.byte	0x5
 1578 0150 696E7400 		.ascii	"int\000"
 1579 0154 02       		.uleb128 0x2
 1580 0155 04       		.byte	0x4
 1581 0156 07       		.byte	0x7
 1582 0157 61000000 		.4byte	.LASF41
 1583 015b 07       		.uleb128 0x7
 1584 015c 36020000 		.4byte	.LASF42
 1585 0160 05       		.byte	0x5
 1586 0161 14       		.byte	0x14
 1587 0162 02010000 		.4byte	0x102
 1588 0166 07       		.uleb128 0x7
 1589 0167 04030000 		.4byte	.LASF43
 1590 016b 05       		.byte	0x5
 1591 016c 1A       		.byte	0x1a
 1592 016d 14010000 		.4byte	0x114
 1593 0171 07       		.uleb128 0x7
 1594 0172 CD000000 		.4byte	.LASF44
 1595 0176 05       		.byte	0x5
 1596 0177 20       		.byte	0x20
 1597 0178 2D010000 		.4byte	0x12d
 1598 017c 09       		.uleb128 0x9
 1599 017d 2003     		.2byte	0x320
 1600 017f 01       		.byte	0x1
 1601 0180 71       		.byte	0x71
 1602 0181 19020000 		.4byte	0x219
ARM GAS  /tmp/ccD5vHri.s 			page 51


 1603 0185 0A       		.uleb128 0xa
 1604 0186 F1000000 		.4byte	.LASF45
 1605 018a 01       		.byte	0x1
 1606 018b 73       		.byte	0x73
 1607 018c 30020000 		.4byte	0x230
 1608 0190 02       		.byte	0x2
 1609 0191 23       		.byte	0x23
 1610 0192 00       		.uleb128 0
 1611 0193 0A       		.uleb128 0xa
 1612 0194 27030000 		.4byte	.LASF46
 1613 0198 01       		.byte	0x1
 1614 0199 74       		.byte	0x74
 1615 019a 35020000 		.4byte	0x235
 1616 019e 02       		.byte	0x2
 1617 019f 23       		.byte	0x23
 1618 01a0 04       		.uleb128 0x4
 1619 01a1 0A       		.uleb128 0xa
 1620 01a2 5A050000 		.4byte	.LASF47
 1621 01a6 01       		.byte	0x1
 1622 01a7 75       		.byte	0x75
 1623 01a8 45020000 		.4byte	0x245
 1624 01ac 03       		.byte	0x3
 1625 01ad 23       		.byte	0x23
 1626 01ae 8001     		.uleb128 0x80
 1627 01b0 0A       		.uleb128 0xa
 1628 01b1 05010000 		.4byte	.LASF48
 1629 01b5 01       		.byte	0x1
 1630 01b6 76       		.byte	0x76
 1631 01b7 35020000 		.4byte	0x235
 1632 01bb 03       		.byte	0x3
 1633 01bc 23       		.byte	0x23
 1634 01bd 8401     		.uleb128 0x84
 1635 01bf 0A       		.uleb128 0xa
 1636 01c0 59060000 		.4byte	.LASF49
 1637 01c4 01       		.byte	0x1
 1638 01c5 77       		.byte	0x77
 1639 01c6 4A020000 		.4byte	0x24a
 1640 01ca 03       		.byte	0x3
 1641 01cb 23       		.byte	0x23
 1642 01cc 8002     		.uleb128 0x100
 1643 01ce 0A       		.uleb128 0xa
 1644 01cf 3B030000 		.4byte	.LASF50
 1645 01d3 01       		.byte	0x1
 1646 01d4 78       		.byte	0x78
 1647 01d5 35020000 		.4byte	0x235
 1648 01d9 03       		.byte	0x3
 1649 01da 23       		.byte	0x23
 1650 01db 8402     		.uleb128 0x104
 1651 01dd 0A       		.uleb128 0xa
 1652 01de C8020000 		.4byte	.LASF51
 1653 01e2 01       		.byte	0x1
 1654 01e3 79       		.byte	0x79
 1655 01e4 4F020000 		.4byte	0x24f
 1656 01e8 03       		.byte	0x3
 1657 01e9 23       		.byte	0x23
 1658 01ea 8003     		.uleb128 0x180
 1659 01ec 0A       		.uleb128 0xa
ARM GAS  /tmp/ccD5vHri.s 			page 52


 1660 01ed 45030000 		.4byte	.LASF52
 1661 01f1 01       		.byte	0x1
 1662 01f2 7A       		.byte	0x7a
 1663 01f3 35020000 		.4byte	0x235
 1664 01f7 03       		.byte	0x3
 1665 01f8 23       		.byte	0x23
 1666 01f9 8403     		.uleb128 0x184
 1667 01fb 0A       		.uleb128 0xa
 1668 01fc 4F030000 		.4byte	.LASF53
 1669 0200 01       		.byte	0x1
 1670 0201 7B       		.byte	0x7b
 1671 0202 54020000 		.4byte	0x254
 1672 0206 03       		.byte	0x3
 1673 0207 23       		.byte	0x23
 1674 0208 8004     		.uleb128 0x200
 1675 020a 0B       		.uleb128 0xb
 1676 020b 495000   		.ascii	"IP\000"
 1677 020e 01       		.byte	0x1
 1678 020f 7C       		.byte	0x7c
 1679 0210 74020000 		.4byte	0x274
 1680 0214 03       		.byte	0x3
 1681 0215 23       		.byte	0x23
 1682 0216 8006     		.uleb128 0x300
 1683 0218 00       		.byte	0
 1684 0219 0C       		.uleb128 0xc
 1685 021a 71010000 		.4byte	0x171
 1686 021e 29020000 		.4byte	0x229
 1687 0222 0D       		.uleb128 0xd
 1688 0223 29020000 		.4byte	0x229
 1689 0227 00       		.byte	0
 1690 0228 00       		.byte	0
 1691 0229 02       		.uleb128 0x2
 1692 022a 04       		.byte	0x4
 1693 022b 07       		.byte	0x7
 1694 022c 70040000 		.4byte	.LASF54
 1695 0230 0E       		.uleb128 0xe
 1696 0231 19020000 		.4byte	0x219
 1697 0235 0C       		.uleb128 0xc
 1698 0236 71010000 		.4byte	0x171
 1699 023a 45020000 		.4byte	0x245
 1700 023e 0D       		.uleb128 0xd
 1701 023f 29020000 		.4byte	0x229
 1702 0243 1E       		.byte	0x1e
 1703 0244 00       		.byte	0
 1704 0245 0E       		.uleb128 0xe
 1705 0246 19020000 		.4byte	0x219
 1706 024a 0E       		.uleb128 0xe
 1707 024b 19020000 		.4byte	0x219
 1708 024f 0E       		.uleb128 0xe
 1709 0250 19020000 		.4byte	0x219
 1710 0254 0C       		.uleb128 0xc
 1711 0255 71010000 		.4byte	0x171
 1712 0259 64020000 		.4byte	0x264
 1713 025d 0D       		.uleb128 0xd
 1714 025e 29020000 		.4byte	0x229
 1715 0262 3F       		.byte	0x3f
 1716 0263 00       		.byte	0
ARM GAS  /tmp/ccD5vHri.s 			page 53


 1717 0264 0C       		.uleb128 0xc
 1718 0265 71010000 		.4byte	0x171
 1719 0269 74020000 		.4byte	0x274
 1720 026d 0D       		.uleb128 0xd
 1721 026e 29020000 		.4byte	0x229
 1722 0272 07       		.byte	0x7
 1723 0273 00       		.byte	0
 1724 0274 0E       		.uleb128 0xe
 1725 0275 64020000 		.4byte	0x264
 1726 0279 07       		.uleb128 0x7
 1727 027a 36040000 		.4byte	.LASF55
 1728 027e 01       		.byte	0x1
 1729 027f 7D       		.byte	0x7d
 1730 0280 7C010000 		.4byte	0x17c
 1731 0284 0F       		.uleb128 0xf
 1732 0285 34       		.byte	0x34
 1733 0286 01       		.byte	0x1
 1734 0287 86       		.byte	0x86
 1735 0288 27030000 		.4byte	0x327
 1736 028c 0A       		.uleb128 0xa
 1737 028d 86010000 		.4byte	.LASF56
 1738 0291 01       		.byte	0x1
 1739 0292 88       		.byte	0x88
 1740 0293 2C030000 		.4byte	0x32c
 1741 0297 02       		.byte	0x2
 1742 0298 23       		.byte	0x23
 1743 0299 00       		.uleb128 0
 1744 029a 0A       		.uleb128 0xa
 1745 029b 79040000 		.4byte	.LASF57
 1746 029f 01       		.byte	0x1
 1747 02a0 89       		.byte	0x89
 1748 02a1 27030000 		.4byte	0x327
 1749 02a5 02       		.byte	0x2
 1750 02a6 23       		.byte	0x23
 1751 02a7 04       		.uleb128 0x4
 1752 02a8 0A       		.uleb128 0xa
 1753 02a9 27030000 		.4byte	.LASF46
 1754 02ad 01       		.byte	0x1
 1755 02ae 8A       		.byte	0x8a
 1756 02af 71010000 		.4byte	0x171
 1757 02b3 02       		.byte	0x2
 1758 02b4 23       		.byte	0x23
 1759 02b5 08       		.uleb128 0x8
 1760 02b6 0A       		.uleb128 0xa
 1761 02b7 F5010000 		.4byte	.LASF58
 1762 02bb 01       		.byte	0x1
 1763 02bc 8B       		.byte	0x8b
 1764 02bd 27030000 		.4byte	0x327
 1765 02c1 02       		.byte	0x2
 1766 02c2 23       		.byte	0x23
 1767 02c3 0C       		.uleb128 0xc
 1768 02c4 0B       		.uleb128 0xb
 1769 02c5 53435200 		.ascii	"SCR\000"
 1770 02c9 01       		.byte	0x1
 1771 02ca 8C       		.byte	0x8c
 1772 02cb 27030000 		.4byte	0x327
 1773 02cf 02       		.byte	0x2
ARM GAS  /tmp/ccD5vHri.s 			page 54


 1774 02d0 23       		.byte	0x23
 1775 02d1 10       		.uleb128 0x10
 1776 02d2 0B       		.uleb128 0xb
 1777 02d3 43435200 		.ascii	"CCR\000"
 1778 02d7 01       		.byte	0x1
 1779 02d8 8D       		.byte	0x8d
 1780 02d9 27030000 		.4byte	0x327
 1781 02dd 02       		.byte	0x2
 1782 02de 23       		.byte	0x23
 1783 02df 14       		.uleb128 0x14
 1784 02e0 0A       		.uleb128 0xa
 1785 02e1 31030000 		.4byte	.LASF59
 1786 02e5 01       		.byte	0x1
 1787 02e6 8E       		.byte	0x8e
 1788 02e7 71010000 		.4byte	0x171
 1789 02eb 02       		.byte	0x2
 1790 02ec 23       		.byte	0x23
 1791 02ed 18       		.uleb128 0x18
 1792 02ee 0B       		.uleb128 0xb
 1793 02ef 53485000 		.ascii	"SHP\000"
 1794 02f3 01       		.byte	0x1
 1795 02f4 8F       		.byte	0x8f
 1796 02f5 41030000 		.4byte	0x341
 1797 02f9 02       		.byte	0x2
 1798 02fa 23       		.byte	0x23
 1799 02fb 1C       		.uleb128 0x1c
 1800 02fc 0A       		.uleb128 0xa
 1801 02fd 6B020000 		.4byte	.LASF60
 1802 0301 01       		.byte	0x1
 1803 0302 90       		.byte	0x90
 1804 0303 27030000 		.4byte	0x327
 1805 0307 02       		.byte	0x2
 1806 0308 23       		.byte	0x23
 1807 0309 24       		.uleb128 0x24
 1808 030a 0A       		.uleb128 0xa
 1809 030b 3B030000 		.4byte	.LASF50
 1810 030f 01       		.byte	0x1
 1811 0310 91       		.byte	0x91
 1812 0311 31030000 		.4byte	0x331
 1813 0315 02       		.byte	0x2
 1814 0316 23       		.byte	0x23
 1815 0317 28       		.uleb128 0x28
 1816 0318 0A       		.uleb128 0xa
 1817 0319 4A010000 		.4byte	.LASF61
 1818 031d 01       		.byte	0x1
 1819 031e 92       		.byte	0x92
 1820 031f 27030000 		.4byte	0x327
 1821 0323 02       		.byte	0x2
 1822 0324 23       		.byte	0x23
 1823 0325 30       		.uleb128 0x30
 1824 0326 00       		.byte	0
 1825 0327 0E       		.uleb128 0xe
 1826 0328 71010000 		.4byte	0x171
 1827 032c 10       		.uleb128 0x10
 1828 032d 27030000 		.4byte	0x327
 1829 0331 0C       		.uleb128 0xc
 1830 0332 71010000 		.4byte	0x171
ARM GAS  /tmp/ccD5vHri.s 			page 55


 1831 0336 41030000 		.4byte	0x341
 1832 033a 0D       		.uleb128 0xd
 1833 033b 29020000 		.4byte	0x229
 1834 033f 01       		.byte	0x1
 1835 0340 00       		.byte	0
 1836 0341 0E       		.uleb128 0xe
 1837 0342 31030000 		.4byte	0x331
 1838 0346 07       		.uleb128 0x7
 1839 0347 40040000 		.4byte	.LASF62
 1840 034b 01       		.byte	0x1
 1841 034c 93       		.byte	0x93
 1842 034d 84020000 		.4byte	0x284
 1843 0351 0E       		.uleb128 0xe
 1844 0352 66010000 		.4byte	0x166
 1845 0356 11       		.uleb128 0x11
 1846 0357 2C       		.byte	0x2c
 1847 0358 03       		.byte	0x3
 1848 0359 6902     		.2byte	0x269
 1849 035b 32040000 		.4byte	0x432
 1850 035f 12       		.uleb128 0x12
 1851 0360 6A010000 		.4byte	.LASF63
 1852 0364 03       		.byte	0x3
 1853 0365 6B02     		.2byte	0x26b
 1854 0367 27030000 		.4byte	0x327
 1855 036b 02       		.byte	0x2
 1856 036c 23       		.byte	0x23
 1857 036d 00       		.uleb128 0
 1858 036e 12       		.uleb128 0x12
 1859 036f F4030000 		.4byte	.LASF64
 1860 0373 03       		.byte	0x3
 1861 0374 6C02     		.2byte	0x26c
 1862 0376 51030000 		.4byte	0x351
 1863 037a 02       		.byte	0x2
 1864 037b 23       		.byte	0x23
 1865 037c 04       		.uleb128 0x4
 1866 037d 12       		.uleb128 0x12
 1867 037e 27030000 		.4byte	.LASF46
 1868 0382 03       		.byte	0x3
 1869 0383 6D02     		.2byte	0x26d
 1870 0385 66010000 		.4byte	0x166
 1871 0389 02       		.byte	0x2
 1872 038a 23       		.byte	0x23
 1873 038b 06       		.uleb128 0x6
 1874 038c 12       		.uleb128 0x12
 1875 038d F0020000 		.4byte	.LASF65
 1876 0391 03       		.byte	0x3
 1877 0392 6E02     		.2byte	0x26e
 1878 0394 27030000 		.4byte	0x327
 1879 0398 02       		.byte	0x2
 1880 0399 23       		.byte	0x23
 1881 039a 08       		.uleb128 0x8
 1882 039b 12       		.uleb128 0x12
 1883 039c BF010000 		.4byte	.LASF66
 1884 03a0 03       		.byte	0x3
 1885 03a1 6F02     		.2byte	0x26f
 1886 03a3 27030000 		.4byte	0x327
 1887 03a7 02       		.byte	0x2
ARM GAS  /tmp/ccD5vHri.s 			page 56


 1888 03a8 23       		.byte	0x23
 1889 03a9 0C       		.uleb128 0xc
 1890 03aa 13       		.uleb128 0x13
 1891 03ab 49445200 		.ascii	"IDR\000"
 1892 03af 03       		.byte	0x3
 1893 03b0 7002     		.2byte	0x270
 1894 03b2 51030000 		.4byte	0x351
 1895 03b6 02       		.byte	0x2
 1896 03b7 23       		.byte	0x23
 1897 03b8 10       		.uleb128 0x10
 1898 03b9 12       		.uleb128 0x12
 1899 03ba 31030000 		.4byte	.LASF59
 1900 03be 03       		.byte	0x3
 1901 03bf 7102     		.2byte	0x271
 1902 03c1 66010000 		.4byte	0x166
 1903 03c5 02       		.byte	0x2
 1904 03c6 23       		.byte	0x23
 1905 03c7 12       		.uleb128 0x12
 1906 03c8 13       		.uleb128 0x13
 1907 03c9 4F445200 		.ascii	"ODR\000"
 1908 03cd 03       		.byte	0x3
 1909 03ce 7202     		.2byte	0x272
 1910 03d0 51030000 		.4byte	0x351
 1911 03d4 02       		.byte	0x2
 1912 03d5 23       		.byte	0x23
 1913 03d6 14       		.uleb128 0x14
 1914 03d7 12       		.uleb128 0x12
 1915 03d8 3B030000 		.4byte	.LASF50
 1916 03dc 03       		.byte	0x3
 1917 03dd 7302     		.2byte	0x273
 1918 03df 66010000 		.4byte	0x166
 1919 03e3 02       		.byte	0x2
 1920 03e4 23       		.byte	0x23
 1921 03e5 16       		.uleb128 0x16
 1922 03e6 12       		.uleb128 0x12
 1923 03e7 16000000 		.4byte	.LASF67
 1924 03eb 03       		.byte	0x3
 1925 03ec 7402     		.2byte	0x274
 1926 03ee 27030000 		.4byte	0x327
 1927 03f2 02       		.byte	0x2
 1928 03f3 23       		.byte	0x23
 1929 03f4 18       		.uleb128 0x18
 1930 03f5 12       		.uleb128 0x12
 1931 03f6 70060000 		.4byte	.LASF68
 1932 03fa 03       		.byte	0x3
 1933 03fb 7502     		.2byte	0x275
 1934 03fd 27030000 		.4byte	0x327
 1935 0401 02       		.byte	0x2
 1936 0402 23       		.byte	0x23
 1937 0403 1C       		.uleb128 0x1c
 1938 0404 13       		.uleb128 0x13
 1939 0405 41465200 		.ascii	"AFR\000"
 1940 0409 03       		.byte	0x3
 1941 040a 7602     		.2byte	0x276
 1942 040c 32040000 		.4byte	0x432
 1943 0410 02       		.byte	0x2
 1944 0411 23       		.byte	0x23
ARM GAS  /tmp/ccD5vHri.s 			page 57


 1945 0412 20       		.uleb128 0x20
 1946 0413 13       		.uleb128 0x13
 1947 0414 42525200 		.ascii	"BRR\000"
 1948 0418 03       		.byte	0x3
 1949 0419 7702     		.2byte	0x277
 1950 041b 51030000 		.4byte	0x351
 1951 041f 02       		.byte	0x2
 1952 0420 23       		.byte	0x23
 1953 0421 28       		.uleb128 0x28
 1954 0422 12       		.uleb128 0x12
 1955 0423 45030000 		.4byte	.LASF52
 1956 0427 03       		.byte	0x3
 1957 0428 7802     		.2byte	0x278
 1958 042a 66010000 		.4byte	0x166
 1959 042e 02       		.byte	0x2
 1960 042f 23       		.byte	0x23
 1961 0430 2A       		.uleb128 0x2a
 1962 0431 00       		.byte	0
 1963 0432 0E       		.uleb128 0xe
 1964 0433 31030000 		.4byte	0x331
 1965 0437 06       		.uleb128 0x6
 1966 0438 49040000 		.4byte	.LASF69
 1967 043c 03       		.byte	0x3
 1968 043d 7902     		.2byte	0x279
 1969 043f 56030000 		.4byte	0x356
 1970 0443 11       		.uleb128 0x11
 1971 0444 38       		.byte	0x38
 1972 0445 03       		.byte	0x3
 1973 0446 B502     		.2byte	0x2b5
 1974 0448 1E050000 		.4byte	0x51e
 1975 044c 13       		.uleb128 0x13
 1976 044d 435200   		.ascii	"CR\000"
 1977 0450 03       		.byte	0x3
 1978 0451 B702     		.2byte	0x2b7
 1979 0453 27030000 		.4byte	0x327
 1980 0457 02       		.byte	0x2
 1981 0458 23       		.byte	0x23
 1982 0459 00       		.uleb128 0
 1983 045a 12       		.uleb128 0x12
 1984 045b 07040000 		.4byte	.LASF70
 1985 045f 03       		.byte	0x3
 1986 0460 B802     		.2byte	0x2b8
 1987 0462 27030000 		.4byte	0x327
 1988 0466 02       		.byte	0x2
 1989 0467 23       		.byte	0x23
 1990 0468 04       		.uleb128 0x4
 1991 0469 13       		.uleb128 0x13
 1992 046a 43495200 		.ascii	"CIR\000"
 1993 046e 03       		.byte	0x3
 1994 046f B902     		.2byte	0x2b9
 1995 0471 27030000 		.4byte	0x327
 1996 0475 02       		.byte	0x2
 1997 0476 23       		.byte	0x23
 1998 0477 08       		.uleb128 0x8
 1999 0478 12       		.uleb128 0x12
 2000 0479 3E000000 		.4byte	.LASF71
 2001 047d 03       		.byte	0x3
ARM GAS  /tmp/ccD5vHri.s 			page 58


 2002 047e BA02     		.2byte	0x2ba
 2003 0480 27030000 		.4byte	0x327
 2004 0484 02       		.byte	0x2
 2005 0485 23       		.byte	0x23
 2006 0486 0C       		.uleb128 0xc
 2007 0487 12       		.uleb128 0x12
 2008 0488 CF010000 		.4byte	.LASF72
 2009 048c 03       		.byte	0x3
 2010 048d BB02     		.2byte	0x2bb
 2011 048f 27030000 		.4byte	0x327
 2012 0493 02       		.byte	0x2
 2013 0494 23       		.byte	0x23
 2014 0495 10       		.uleb128 0x10
 2015 0496 12       		.uleb128 0x12
 2016 0497 24020000 		.4byte	.LASF73
 2017 049b 03       		.byte	0x3
 2018 049c BC02     		.2byte	0x2bc
 2019 049e 27030000 		.4byte	0x327
 2020 04a2 02       		.byte	0x2
 2021 04a3 23       		.byte	0x23
 2022 04a4 14       		.uleb128 0x14
 2023 04a5 12       		.uleb128 0x12
 2024 04a6 CD020000 		.4byte	.LASF74
 2025 04aa 03       		.byte	0x3
 2026 04ab BD02     		.2byte	0x2bd
 2027 04ad 27030000 		.4byte	0x327
 2028 04b1 02       		.byte	0x2
 2029 04b2 23       		.byte	0x23
 2030 04b3 18       		.uleb128 0x18
 2031 04b4 12       		.uleb128 0x12
 2032 04b5 00000000 		.4byte	.LASF75
 2033 04b9 03       		.byte	0x3
 2034 04ba BE02     		.2byte	0x2be
 2035 04bc 27030000 		.4byte	0x327
 2036 04c0 02       		.byte	0x2
 2037 04c1 23       		.byte	0x23
 2038 04c2 1C       		.uleb128 0x1c
 2039 04c3 12       		.uleb128 0x12
 2040 04c4 85000000 		.4byte	.LASF76
 2041 04c8 03       		.byte	0x3
 2042 04c9 BF02     		.2byte	0x2bf
 2043 04cb 27030000 		.4byte	0x327
 2044 04cf 02       		.byte	0x2
 2045 04d0 23       		.byte	0x23
 2046 04d1 20       		.uleb128 0x20
 2047 04d2 13       		.uleb128 0x13
 2048 04d3 43535200 		.ascii	"CSR\000"
 2049 04d7 03       		.byte	0x3
 2050 04d8 C002     		.2byte	0x2c0
 2051 04da 27030000 		.4byte	0x327
 2052 04de 02       		.byte	0x2
 2053 04df 23       		.byte	0x23
 2054 04e0 24       		.uleb128 0x24
 2055 04e1 12       		.uleb128 0x12
 2056 04e2 E4000000 		.4byte	.LASF77
 2057 04e6 03       		.byte	0x3
 2058 04e7 C102     		.2byte	0x2c1
ARM GAS  /tmp/ccD5vHri.s 			page 59


 2059 04e9 27030000 		.4byte	0x327
 2060 04ed 02       		.byte	0x2
 2061 04ee 23       		.byte	0x23
 2062 04ef 28       		.uleb128 0x28
 2063 04f0 12       		.uleb128 0x12
 2064 04f1 BC020000 		.4byte	.LASF78
 2065 04f5 03       		.byte	0x3
 2066 04f6 C202     		.2byte	0x2c2
 2067 04f8 27030000 		.4byte	0x327
 2068 04fc 02       		.byte	0x2
 2069 04fd 23       		.byte	0x23
 2070 04fe 2C       		.uleb128 0x2c
 2071 04ff 12       		.uleb128 0x12
 2072 0500 C2020000 		.4byte	.LASF79
 2073 0504 03       		.byte	0x3
 2074 0505 C302     		.2byte	0x2c3
 2075 0507 27030000 		.4byte	0x327
 2076 050b 02       		.byte	0x2
 2077 050c 23       		.byte	0x23
 2078 050d 30       		.uleb128 0x30
 2079 050e 13       		.uleb128 0x13
 2080 050f 43523200 		.ascii	"CR2\000"
 2081 0513 03       		.byte	0x3
 2082 0514 C402     		.2byte	0x2c4
 2083 0516 27030000 		.4byte	0x327
 2084 051a 02       		.byte	0x2
 2085 051b 23       		.byte	0x23
 2086 051c 34       		.uleb128 0x34
 2087 051d 00       		.byte	0
 2088 051e 06       		.uleb128 0x6
 2089 051f 8C010000 		.4byte	.LASF80
 2090 0523 03       		.byte	0x3
 2091 0524 C502     		.2byte	0x2c5
 2092 0526 43040000 		.4byte	0x443
 2093 052a 11       		.uleb128 0x11
 2094 052b 54       		.byte	0x54
 2095 052c 03       		.byte	0x3
 2096 052d 0903     		.2byte	0x309
 2097 052f 4E070000 		.4byte	0x74e
 2098 0533 13       		.uleb128 0x13
 2099 0534 43523100 		.ascii	"CR1\000"
 2100 0538 03       		.byte	0x3
 2101 0539 0B03     		.2byte	0x30b
 2102 053b 51030000 		.4byte	0x351
 2103 053f 02       		.byte	0x2
 2104 0540 23       		.byte	0x23
 2105 0541 00       		.uleb128 0
 2106 0542 12       		.uleb128 0x12
 2107 0543 27030000 		.4byte	.LASF46
 2108 0547 03       		.byte	0x3
 2109 0548 0C03     		.2byte	0x30c
 2110 054a 66010000 		.4byte	0x166
 2111 054e 02       		.byte	0x2
 2112 054f 23       		.byte	0x23
 2113 0550 02       		.uleb128 0x2
 2114 0551 13       		.uleb128 0x13
 2115 0552 43523200 		.ascii	"CR2\000"
ARM GAS  /tmp/ccD5vHri.s 			page 60


 2116 0556 03       		.byte	0x3
 2117 0557 0D03     		.2byte	0x30d
 2118 0559 51030000 		.4byte	0x351
 2119 055d 02       		.byte	0x2
 2120 055e 23       		.byte	0x23
 2121 055f 04       		.uleb128 0x4
 2122 0560 12       		.uleb128 0x12
 2123 0561 31030000 		.4byte	.LASF59
 2124 0565 03       		.byte	0x3
 2125 0566 0E03     		.2byte	0x30e
 2126 0568 66010000 		.4byte	0x166
 2127 056c 02       		.byte	0x2
 2128 056d 23       		.byte	0x23
 2129 056e 06       		.uleb128 0x6
 2130 056f 12       		.uleb128 0x12
 2131 0570 3E020000 		.4byte	.LASF81
 2132 0574 03       		.byte	0x3
 2133 0575 0F03     		.2byte	0x30f
 2134 0577 51030000 		.4byte	0x351
 2135 057b 02       		.byte	0x2
 2136 057c 23       		.byte	0x23
 2137 057d 08       		.uleb128 0x8
 2138 057e 12       		.uleb128 0x12
 2139 057f 3B030000 		.4byte	.LASF50
 2140 0583 03       		.byte	0x3
 2141 0584 1003     		.2byte	0x310
 2142 0586 66010000 		.4byte	0x166
 2143 058a 02       		.byte	0x2
 2144 058b 23       		.byte	0x23
 2145 058c 0A       		.uleb128 0xa
 2146 058d 12       		.uleb128 0x12
 2147 058e 98010000 		.4byte	.LASF82
 2148 0592 03       		.byte	0x3
 2149 0593 1103     		.2byte	0x311
 2150 0595 51030000 		.4byte	0x351
 2151 0599 02       		.byte	0x2
 2152 059a 23       		.byte	0x23
 2153 059b 0C       		.uleb128 0xc
 2154 059c 12       		.uleb128 0x12
 2155 059d 45030000 		.4byte	.LASF52
 2156 05a1 03       		.byte	0x3
 2157 05a2 1203     		.2byte	0x312
 2158 05a4 66010000 		.4byte	0x166
 2159 05a8 02       		.byte	0x2
 2160 05a9 23       		.byte	0x23
 2161 05aa 0E       		.uleb128 0xe
 2162 05ab 13       		.uleb128 0x13
 2163 05ac 535200   		.ascii	"SR\000"
 2164 05af 03       		.byte	0x3
 2165 05b0 1303     		.2byte	0x313
 2166 05b2 51030000 		.4byte	0x351
 2167 05b6 02       		.byte	0x2
 2168 05b7 23       		.byte	0x23
 2169 05b8 10       		.uleb128 0x10
 2170 05b9 12       		.uleb128 0x12
 2171 05ba 4F030000 		.4byte	.LASF53
 2172 05be 03       		.byte	0x3
ARM GAS  /tmp/ccD5vHri.s 			page 61


 2173 05bf 1403     		.2byte	0x314
 2174 05c1 66010000 		.4byte	0x166
 2175 05c5 02       		.byte	0x2
 2176 05c6 23       		.byte	0x23
 2177 05c7 12       		.uleb128 0x12
 2178 05c8 13       		.uleb128 0x13
 2179 05c9 45475200 		.ascii	"EGR\000"
 2180 05cd 03       		.byte	0x3
 2181 05ce 1503     		.2byte	0x315
 2182 05d0 51030000 		.4byte	0x351
 2183 05d4 02       		.byte	0x2
 2184 05d5 23       		.byte	0x23
 2185 05d6 14       		.uleb128 0x14
 2186 05d7 12       		.uleb128 0x12
 2187 05d8 59030000 		.4byte	.LASF83
 2188 05dc 03       		.byte	0x3
 2189 05dd 1603     		.2byte	0x316
 2190 05df 66010000 		.4byte	0x166
 2191 05e3 02       		.byte	0x2
 2192 05e4 23       		.byte	0x23
 2193 05e5 16       		.uleb128 0x16
 2194 05e6 12       		.uleb128 0x12
 2195 05e7 0E010000 		.4byte	.LASF84
 2196 05eb 03       		.byte	0x3
 2197 05ec 1703     		.2byte	0x317
 2198 05ee 51030000 		.4byte	0x351
 2199 05f2 02       		.byte	0x2
 2200 05f3 23       		.byte	0x23
 2201 05f4 18       		.uleb128 0x18
 2202 05f5 12       		.uleb128 0x12
 2203 05f6 63030000 		.4byte	.LASF85
 2204 05fa 03       		.byte	0x3
 2205 05fb 1803     		.2byte	0x318
 2206 05fd 66010000 		.4byte	0x166
 2207 0601 02       		.byte	0x2
 2208 0602 23       		.byte	0x23
 2209 0603 1A       		.uleb128 0x1a
 2210 0604 12       		.uleb128 0x12
 2211 0605 14010000 		.4byte	.LASF86
 2212 0609 03       		.byte	0x3
 2213 060a 1903     		.2byte	0x319
 2214 060c 51030000 		.4byte	0x351
 2215 0610 02       		.byte	0x2
 2216 0611 23       		.byte	0x23
 2217 0612 1C       		.uleb128 0x1c
 2218 0613 12       		.uleb128 0x12
 2219 0614 5E060000 		.4byte	.LASF87
 2220 0618 03       		.byte	0x3
 2221 0619 1A03     		.2byte	0x31a
 2222 061b 66010000 		.4byte	0x166
 2223 061f 02       		.byte	0x2
 2224 0620 23       		.byte	0x23
 2225 0621 1E       		.uleb128 0x1e
 2226 0622 12       		.uleb128 0x12
 2227 0623 E5010000 		.4byte	.LASF88
 2228 0627 03       		.byte	0x3
 2229 0628 1B03     		.2byte	0x31b
ARM GAS  /tmp/ccD5vHri.s 			page 62


 2230 062a 51030000 		.4byte	0x351
 2231 062e 02       		.byte	0x2
 2232 062f 23       		.byte	0x23
 2233 0630 20       		.uleb128 0x20
 2234 0631 12       		.uleb128 0x12
 2235 0632 77030000 		.4byte	.LASF89
 2236 0636 03       		.byte	0x3
 2237 0637 1C03     		.2byte	0x31c
 2238 0639 66010000 		.4byte	0x166
 2239 063d 02       		.byte	0x2
 2240 063e 23       		.byte	0x23
 2241 063f 22       		.uleb128 0x22
 2242 0640 13       		.uleb128 0x13
 2243 0641 434E5400 		.ascii	"CNT\000"
 2244 0645 03       		.byte	0x3
 2245 0646 1D03     		.2byte	0x31d
 2246 0648 27030000 		.4byte	0x327
 2247 064c 02       		.byte	0x2
 2248 064d 23       		.byte	0x23
 2249 064e 24       		.uleb128 0x24
 2250 064f 13       		.uleb128 0x13
 2251 0650 50534300 		.ascii	"PSC\000"
 2252 0654 03       		.byte	0x3
 2253 0655 1E03     		.2byte	0x31e
 2254 0657 51030000 		.4byte	0x351
 2255 065b 02       		.byte	0x2
 2256 065c 23       		.byte	0x23
 2257 065d 28       		.uleb128 0x28
 2258 065e 12       		.uleb128 0x12
 2259 065f 23050000 		.4byte	.LASF90
 2260 0663 03       		.byte	0x3
 2261 0664 1F03     		.2byte	0x31f
 2262 0666 66010000 		.4byte	0x166
 2263 066a 02       		.byte	0x2
 2264 066b 23       		.byte	0x23
 2265 066c 2A       		.uleb128 0x2a
 2266 066d 13       		.uleb128 0x13
 2267 066e 41525200 		.ascii	"ARR\000"
 2268 0672 03       		.byte	0x3
 2269 0673 2003     		.2byte	0x320
 2270 0675 27030000 		.4byte	0x327
 2271 0679 02       		.byte	0x2
 2272 067a 23       		.byte	0x23
 2273 067b 2C       		.uleb128 0x2c
 2274 067c 13       		.uleb128 0x13
 2275 067d 52435200 		.ascii	"RCR\000"
 2276 0681 03       		.byte	0x3
 2277 0682 2103     		.2byte	0x321
 2278 0684 51030000 		.4byte	0x351
 2279 0688 02       		.byte	0x2
 2280 0689 23       		.byte	0x23
 2281 068a 30       		.uleb128 0x30
 2282 068b 12       		.uleb128 0x12
 2283 068c 2E050000 		.4byte	.LASF91
 2284 0690 03       		.byte	0x3
 2285 0691 2203     		.2byte	0x322
 2286 0693 66010000 		.4byte	0x166
ARM GAS  /tmp/ccD5vHri.s 			page 63


 2287 0697 02       		.byte	0x2
 2288 0698 23       		.byte	0x23
 2289 0699 32       		.uleb128 0x32
 2290 069a 12       		.uleb128 0x12
 2291 069b F6000000 		.4byte	.LASF92
 2292 069f 03       		.byte	0x3
 2293 06a0 2303     		.2byte	0x323
 2294 06a2 27030000 		.4byte	0x327
 2295 06a6 02       		.byte	0x2
 2296 06a7 23       		.byte	0x23
 2297 06a8 34       		.uleb128 0x34
 2298 06a9 12       		.uleb128 0x12
 2299 06aa FB000000 		.4byte	.LASF93
 2300 06ae 03       		.byte	0x3
 2301 06af 2403     		.2byte	0x324
 2302 06b1 27030000 		.4byte	0x327
 2303 06b5 02       		.byte	0x2
 2304 06b6 23       		.byte	0x23
 2305 06b7 38       		.uleb128 0x38
 2306 06b8 12       		.uleb128 0x12
 2307 06b9 00010000 		.4byte	.LASF94
 2308 06bd 03       		.byte	0x3
 2309 06be 2503     		.2byte	0x325
 2310 06c0 27030000 		.4byte	0x327
 2311 06c4 02       		.byte	0x2
 2312 06c5 23       		.byte	0x23
 2313 06c6 3C       		.uleb128 0x3c
 2314 06c7 12       		.uleb128 0x12
 2315 06c8 1E050000 		.4byte	.LASF95
 2316 06cc 03       		.byte	0x3
 2317 06cd 2603     		.2byte	0x326
 2318 06cf 27030000 		.4byte	0x327
 2319 06d3 02       		.byte	0x2
 2320 06d4 23       		.byte	0x23
 2321 06d5 40       		.uleb128 0x40
 2322 06d6 12       		.uleb128 0x12
 2323 06d7 EC000000 		.4byte	.LASF96
 2324 06db 03       		.byte	0x3
 2325 06dc 2703     		.2byte	0x327
 2326 06de 51030000 		.4byte	0x351
 2327 06e2 02       		.byte	0x2
 2328 06e3 23       		.byte	0x23
 2329 06e4 44       		.uleb128 0x44
 2330 06e5 12       		.uleb128 0x12
 2331 06e6 39050000 		.4byte	.LASF97
 2332 06ea 03       		.byte	0x3
 2333 06eb 2803     		.2byte	0x328
 2334 06ed 66010000 		.4byte	0x166
 2335 06f1 02       		.byte	0x2
 2336 06f2 23       		.byte	0x23
 2337 06f3 46       		.uleb128 0x46
 2338 06f4 13       		.uleb128 0x13
 2339 06f5 44435200 		.ascii	"DCR\000"
 2340 06f9 03       		.byte	0x3
 2341 06fa 2903     		.2byte	0x329
 2342 06fc 51030000 		.4byte	0x351
 2343 0700 02       		.byte	0x2
ARM GAS  /tmp/ccD5vHri.s 			page 64


 2344 0701 23       		.byte	0x23
 2345 0702 48       		.uleb128 0x48
 2346 0703 12       		.uleb128 0x12
 2347 0704 44050000 		.4byte	.LASF98
 2348 0708 03       		.byte	0x3
 2349 0709 2A03     		.2byte	0x32a
 2350 070b 66010000 		.4byte	0x166
 2351 070f 02       		.byte	0x2
 2352 0710 23       		.byte	0x23
 2353 0711 4A       		.uleb128 0x4a
 2354 0712 12       		.uleb128 0x12
 2355 0713 96030000 		.4byte	.LASF99
 2356 0717 03       		.byte	0x3
 2357 0718 2B03     		.2byte	0x32b
 2358 071a 51030000 		.4byte	0x351
 2359 071e 02       		.byte	0x2
 2360 071f 23       		.byte	0x23
 2361 0720 4C       		.uleb128 0x4c
 2362 0721 12       		.uleb128 0x12
 2363 0722 4F050000 		.4byte	.LASF100
 2364 0726 03       		.byte	0x3
 2365 0727 2C03     		.2byte	0x32c
 2366 0729 66010000 		.4byte	0x166
 2367 072d 02       		.byte	0x2
 2368 072e 23       		.byte	0x23
 2369 072f 4E       		.uleb128 0x4e
 2370 0730 13       		.uleb128 0x13
 2371 0731 4F5200   		.ascii	"OR\000"
 2372 0734 03       		.byte	0x3
 2373 0735 2D03     		.2byte	0x32d
 2374 0737 51030000 		.4byte	0x351
 2375 073b 02       		.byte	0x2
 2376 073c 23       		.byte	0x23
 2377 073d 50       		.uleb128 0x50
 2378 073e 12       		.uleb128 0x12
 2379 073f 94050000 		.4byte	.LASF101
 2380 0743 03       		.byte	0x3
 2381 0744 2E03     		.2byte	0x32e
 2382 0746 66010000 		.4byte	0x166
 2383 074a 02       		.byte	0x2
 2384 074b 23       		.byte	0x23
 2385 074c 52       		.uleb128 0x52
 2386 074d 00       		.byte	0
 2387 074e 06       		.uleb128 0x6
 2388 074f C1000000 		.4byte	.LASF102
 2389 0753 03       		.byte	0x3
 2390 0754 2F03     		.2byte	0x32f
 2391 0756 2A050000 		.4byte	0x52a
 2392 075a 14       		.uleb128 0x14
 2393 075b 24010000 		.4byte	.LASF103
 2394 075f 01       		.byte	0x1
 2395 0760 2B03     		.2byte	0x32b
 2396 0762 01       		.byte	0x1
 2397 0763 00000000 		.4byte	.LFB11
 2398 0767 2C000000 		.4byte	.LFE11
 2399 076b 00000000 		.4byte	.LLST0
 2400 076f 01       		.byte	0x1
ARM GAS  /tmp/ccD5vHri.s 			page 65


 2401 0770 84070000 		.4byte	0x784
 2402 0774 15       		.uleb128 0x15
 2403 0775 0D030000 		.4byte	.LASF105
 2404 0779 01       		.byte	0x1
 2405 077a 2B03     		.2byte	0x32b
 2406 077c F6000000 		.4byte	0xf6
 2407 0780 02       		.byte	0x2
 2408 0781 91       		.byte	0x91
 2409 0782 7F       		.sleb128 -1
 2410 0783 00       		.byte	0
 2411 0784 14       		.uleb128 0x14
 2412 0785 50000000 		.4byte	.LASF104
 2413 0789 01       		.byte	0x1
 2414 078a 7C03     		.2byte	0x37c
 2415 078c 01       		.byte	0x1
 2416 078d 00000000 		.4byte	.LFB16
 2417 0791 EC000000 		.4byte	.LFE16
 2418 0795 20000000 		.4byte	.LLST1
 2419 0799 01       		.byte	0x1
 2420 079a BD070000 		.4byte	0x7bd
 2421 079e 15       		.uleb128 0x15
 2422 079f 0D030000 		.4byte	.LASF105
 2423 07a3 01       		.byte	0x1
 2424 07a4 7C03     		.2byte	0x37c
 2425 07a6 F6000000 		.4byte	0xf6
 2426 07aa 02       		.byte	0x2
 2427 07ab 91       		.byte	0x91
 2428 07ac 6F       		.sleb128 -17
 2429 07ad 15       		.uleb128 0x15
 2430 07ae DE030000 		.4byte	.LASF106
 2431 07b2 01       		.byte	0x1
 2432 07b3 7C03     		.2byte	0x37c
 2433 07b5 71010000 		.4byte	0x171
 2434 07b9 02       		.byte	0x2
 2435 07ba 91       		.byte	0x91
 2436 07bb 68       		.sleb128 -24
 2437 07bc 00       		.byte	0
 2438 07bd 16       		.uleb128 0x16
 2439 07be 01       		.byte	0x1
 2440 07bf 43020000 		.4byte	.LASF107
 2441 07c3 02       		.byte	0x2
 2442 07c4 4A       		.byte	0x4a
 2443 07c5 01       		.byte	0x1
 2444 07c6 00000000 		.4byte	.LFB20
 2445 07ca 20000000 		.4byte	.LFE20
 2446 07ce 4C000000 		.4byte	.LLST2
 2447 07d2 01       		.byte	0x1
 2448 07d3 E4070000 		.4byte	0x7e4
 2449 07d7 17       		.uleb128 0x17
 2450 07d8 6100     		.ascii	"a\000"
 2451 07da 02       		.byte	0x2
 2452 07db 4A       		.byte	0x4a
 2453 07dc 1F010000 		.4byte	0x11f
 2454 07e0 02       		.byte	0x2
 2455 07e1 91       		.byte	0x91
 2456 07e2 7E       		.sleb128 -2
 2457 07e3 00       		.byte	0
ARM GAS  /tmp/ccD5vHri.s 			page 66


 2458 07e4 16       		.uleb128 0x16
 2459 07e5 01       		.byte	0x1
 2460 07e6 A5040000 		.4byte	.LASF108
 2461 07ea 02       		.byte	0x2
 2462 07eb 4F       		.byte	0x4f
 2463 07ec 01       		.byte	0x1
 2464 07ed 00000000 		.4byte	.LFB21
 2465 07f1 20000000 		.4byte	.LFE21
 2466 07f5 6C000000 		.4byte	.LLST3
 2467 07f9 01       		.byte	0x1
 2468 07fa 0B080000 		.4byte	0x80b
 2469 07fe 17       		.uleb128 0x17
 2470 07ff 6100     		.ascii	"a\000"
 2471 0801 02       		.byte	0x2
 2472 0802 4F       		.byte	0x4f
 2473 0803 1F010000 		.4byte	0x11f
 2474 0807 02       		.byte	0x2
 2475 0808 91       		.byte	0x91
 2476 0809 7E       		.sleb128 -2
 2477 080a 00       		.byte	0
 2478 080b 16       		.uleb128 0x16
 2479 080c 01       		.byte	0x1
 2480 080d B5040000 		.4byte	.LASF109
 2481 0811 02       		.byte	0x2
 2482 0812 54       		.byte	0x54
 2483 0813 01       		.byte	0x1
 2484 0814 00000000 		.4byte	.LFB22
 2485 0818 20000000 		.4byte	.LFE22
 2486 081c 8C000000 		.4byte	.LLST4
 2487 0820 01       		.byte	0x1
 2488 0821 32080000 		.4byte	0x832
 2489 0825 17       		.uleb128 0x17
 2490 0826 6100     		.ascii	"a\000"
 2491 0828 02       		.byte	0x2
 2492 0829 54       		.byte	0x54
 2493 082a 1F010000 		.4byte	0x11f
 2494 082e 02       		.byte	0x2
 2495 082f 91       		.byte	0x91
 2496 0830 7E       		.sleb128 -2
 2497 0831 00       		.byte	0
 2498 0832 16       		.uleb128 0x16
 2499 0833 01       		.byte	0x1
 2500 0834 C5040000 		.4byte	.LASF110
 2501 0838 02       		.byte	0x2
 2502 0839 59       		.byte	0x59
 2503 083a 01       		.byte	0x1
 2504 083b 00000000 		.4byte	.LFB23
 2505 083f 20000000 		.4byte	.LFE23
 2506 0843 AC000000 		.4byte	.LLST5
 2507 0847 01       		.byte	0x1
 2508 0848 59080000 		.4byte	0x859
 2509 084c 17       		.uleb128 0x17
 2510 084d 6100     		.ascii	"a\000"
 2511 084f 02       		.byte	0x2
 2512 0850 59       		.byte	0x59
 2513 0851 1F010000 		.4byte	0x11f
 2514 0855 02       		.byte	0x2
ARM GAS  /tmp/ccD5vHri.s 			page 67


 2515 0856 91       		.byte	0x91
 2516 0857 7E       		.sleb128 -2
 2517 0858 00       		.byte	0
 2518 0859 16       		.uleb128 0x16
 2519 085a 01       		.byte	0x1
 2520 085b D5040000 		.4byte	.LASF111
 2521 085f 02       		.byte	0x2
 2522 0860 5E       		.byte	0x5e
 2523 0861 01       		.byte	0x1
 2524 0862 00000000 		.4byte	.LFB24
 2525 0866 20000000 		.4byte	.LFE24
 2526 086a CC000000 		.4byte	.LLST6
 2527 086e 01       		.byte	0x1
 2528 086f 80080000 		.4byte	0x880
 2529 0873 17       		.uleb128 0x17
 2530 0874 6100     		.ascii	"a\000"
 2531 0876 02       		.byte	0x2
 2532 0877 5E       		.byte	0x5e
 2533 0878 1F010000 		.4byte	0x11f
 2534 087c 02       		.byte	0x2
 2535 087d 91       		.byte	0x91
 2536 087e 7E       		.sleb128 -2
 2537 087f 00       		.byte	0
 2538 0880 16       		.uleb128 0x16
 2539 0881 01       		.byte	0x1
 2540 0882 A1020000 		.4byte	.LASF112
 2541 0886 02       		.byte	0x2
 2542 0887 63       		.byte	0x63
 2543 0888 01       		.byte	0x1
 2544 0889 00000000 		.4byte	.LFB25
 2545 088d 20000000 		.4byte	.LFE25
 2546 0891 EC000000 		.4byte	.LLST7
 2547 0895 01       		.byte	0x1
 2548 0896 A7080000 		.4byte	0x8a7
 2549 089a 17       		.uleb128 0x17
 2550 089b 6100     		.ascii	"a\000"
 2551 089d 02       		.byte	0x2
 2552 089e 63       		.byte	0x63
 2553 089f 1F010000 		.4byte	0x11f
 2554 08a3 02       		.byte	0x2
 2555 08a4 91       		.byte	0x91
 2556 08a5 7E       		.sleb128 -2
 2557 08a6 00       		.byte	0
 2558 08a7 16       		.uleb128 0x16
 2559 08a8 01       		.byte	0x1
 2560 08a9 68060000 		.4byte	.LASF113
 2561 08ad 02       		.byte	0x2
 2562 08ae 68       		.byte	0x68
 2563 08af 01       		.byte	0x1
 2564 08b0 00000000 		.4byte	.LFB26
 2565 08b4 2C000000 		.4byte	.LFE26
 2566 08b8 0C010000 		.4byte	.LLST8
 2567 08bc 01       		.byte	0x1
 2568 08bd D0080000 		.4byte	0x8d0
 2569 08c1 18       		.uleb128 0x18
 2570 08c2 D5020000 		.4byte	.LASF114
 2571 08c6 02       		.byte	0x2
ARM GAS  /tmp/ccD5vHri.s 			page 68


 2572 08c7 68       		.byte	0x68
 2573 08c8 1F010000 		.4byte	0x11f
 2574 08cc 02       		.byte	0x2
 2575 08cd 91       		.byte	0x91
 2576 08ce 7E       		.sleb128 -2
 2577 08cf 00       		.byte	0
 2578 08d0 16       		.uleb128 0x16
 2579 08d1 01       		.byte	0x1
 2580 08d2 E5020000 		.4byte	.LASF115
 2581 08d6 02       		.byte	0x2
 2582 08d7 74       		.byte	0x74
 2583 08d8 01       		.byte	0x1
 2584 08d9 00000000 		.4byte	.LFB27
 2585 08dd CC000000 		.4byte	.LFE27
 2586 08e1 2C010000 		.4byte	.LLST9
 2587 08e5 01       		.byte	0x1
 2588 08e6 F9080000 		.4byte	0x8f9
 2589 08ea 19       		.uleb128 0x19
 2590 08eb 39000000 		.4byte	.LASF117
 2591 08ef 02       		.byte	0x2
 2592 08f0 76       		.byte	0x76
 2593 08f1 54010000 		.4byte	0x154
 2594 08f5 02       		.byte	0x2
 2595 08f6 91       		.byte	0x91
 2596 08f7 7C       		.sleb128 -4
 2597 08f8 00       		.byte	0
 2598 08f9 16       		.uleb128 0x16
 2599 08fa 01       		.byte	0x1
 2600 08fb DA020000 		.4byte	.LASF116
 2601 08ff 02       		.byte	0x2
 2602 0900 9D       		.byte	0x9d
 2603 0901 01       		.byte	0x1
 2604 0902 00000000 		.4byte	.LFB28
 2605 0906 AC000000 		.4byte	.LFE28
 2606 090a 4C010000 		.4byte	.LLST10
 2607 090e 01       		.byte	0x1
 2608 090f 22090000 		.4byte	0x922
 2609 0913 19       		.uleb128 0x19
 2610 0914 39000000 		.4byte	.LASF117
 2611 0918 02       		.byte	0x2
 2612 0919 9F       		.byte	0x9f
 2613 091a 54010000 		.4byte	0x154
 2614 091e 02       		.byte	0x2
 2615 091f 91       		.byte	0x91
 2616 0920 7C       		.sleb128 -4
 2617 0921 00       		.byte	0
 2618 0922 1A       		.uleb128 0x1a
 2619 0923 01       		.byte	0x1
 2620 0924 4F010000 		.4byte	.LASF118
 2621 0928 02       		.byte	0x2
 2622 0929 C7       		.byte	0xc7
 2623 092a 01       		.byte	0x1
 2624 092b 00000000 		.4byte	.LFB29
 2625 092f 1C000000 		.4byte	.LFE29
 2626 0933 02       		.byte	0x2
 2627 0934 7D       		.byte	0x7d
 2628 0935 00       		.sleb128 0
ARM GAS  /tmp/ccD5vHri.s 			page 69


 2629 0936 01       		.byte	0x1
 2630 0937 1A       		.uleb128 0x1a
 2631 0938 01       		.byte	0x1
 2632 0939 EA010000 		.4byte	.LASF119
 2633 093d 02       		.byte	0x2
 2634 093e CF       		.byte	0xcf
 2635 093f 01       		.byte	0x1
 2636 0940 00000000 		.4byte	.LFB30
 2637 0944 38000000 		.4byte	.LFE30
 2638 0948 02       		.byte	0x2
 2639 0949 7D       		.byte	0x7d
 2640 094a 00       		.sleb128 0
 2641 094b 01       		.byte	0x1
 2642 094c 1A       		.uleb128 0x1a
 2643 094d 01       		.byte	0x1
 2644 094e 71020000 		.4byte	.LASF120
 2645 0952 02       		.byte	0x2
 2646 0953 DB       		.byte	0xdb
 2647 0954 01       		.byte	0x1
 2648 0955 00000000 		.4byte	.LFB31
 2649 0959 18000000 		.4byte	.LFE31
 2650 095d 02       		.byte	0x2
 2651 095e 7D       		.byte	0x7d
 2652 095f 00       		.sleb128 0
 2653 0960 01       		.byte	0x1
 2654 0961 1A       		.uleb128 0x1a
 2655 0962 01       		.byte	0x1
 2656 0963 95020000 		.4byte	.LASF121
 2657 0967 02       		.byte	0x2
 2658 0968 E0       		.byte	0xe0
 2659 0969 01       		.byte	0x1
 2660 096a 00000000 		.4byte	.LFB32
 2661 096e 18000000 		.4byte	.LFE32
 2662 0972 02       		.byte	0x2
 2663 0973 7D       		.byte	0x7d
 2664 0974 00       		.sleb128 0
 2665 0975 01       		.byte	0x1
 2666 0976 1A       		.uleb128 0x1a
 2667 0977 01       		.byte	0x1
 2668 0978 AE010000 		.4byte	.LASF122
 2669 097c 02       		.byte	0x2
 2670 097d E5       		.byte	0xe5
 2671 097e 01       		.byte	0x1
 2672 097f 00000000 		.4byte	.LFB33
 2673 0983 1C000000 		.4byte	.LFE33
 2674 0987 02       		.byte	0x2
 2675 0988 7D       		.byte	0x7d
 2676 0989 00       		.sleb128 0
 2677 098a 01       		.byte	0x1
 2678 098b 16       		.uleb128 0x16
 2679 098c 01       		.byte	0x1
 2680 098d F8020000 		.4byte	.LASF123
 2681 0991 02       		.byte	0x2
 2682 0992 ED       		.byte	0xed
 2683 0993 01       		.byte	0x1
 2684 0994 00000000 		.4byte	.LFB34
 2685 0998 88000000 		.4byte	.LFE34
ARM GAS  /tmp/ccD5vHri.s 			page 70


 2686 099c 6C010000 		.4byte	.LLST11
 2687 09a0 01       		.byte	0x1
 2688 09a1 B4090000 		.4byte	0x9b4
 2689 09a5 19       		.uleb128 0x19
 2690 09a6 39000000 		.4byte	.LASF117
 2691 09aa 02       		.byte	0x2
 2692 09ab EF       		.byte	0xef
 2693 09ac 54010000 		.4byte	0x154
 2694 09b0 02       		.byte	0x2
 2695 09b1 91       		.byte	0x91
 2696 09b2 7C       		.sleb128 -4
 2697 09b3 00       		.byte	0
 2698 09b4 1B       		.uleb128 0x1b
 2699 09b5 01       		.byte	0x1
 2700 09b6 1B000000 		.4byte	.LASF124
 2701 09ba 02       		.byte	0x2
 2702 09bb 0701     		.2byte	0x107
 2703 09bd 01       		.byte	0x1
 2704 09be 00000000 		.4byte	.LFB35
 2705 09c2 1C000000 		.4byte	.LFE35
 2706 09c6 02       		.byte	0x2
 2707 09c7 7D       		.byte	0x7d
 2708 09c8 00       		.sleb128 0
 2709 09c9 01       		.byte	0x1
 2710 09ca 1B       		.uleb128 0x1b
 2711 09cb 01       		.byte	0x1
 2712 09cc 69050000 		.4byte	.LASF125
 2713 09d0 02       		.byte	0x2
 2714 09d1 1001     		.2byte	0x110
 2715 09d3 01       		.byte	0x1
 2716 09d4 00000000 		.4byte	.LFB36
 2717 09d8 48000000 		.4byte	.LFE36
 2718 09dc 02       		.byte	0x2
 2719 09dd 7D       		.byte	0x7d
 2720 09de 00       		.sleb128 0
 2721 09df 01       		.byte	0x1
 2722 09e0 1C       		.uleb128 0x1c
 2723 09e1 01       		.byte	0x1
 2724 09e2 D6000000 		.4byte	.LASF126
 2725 09e6 02       		.byte	0x2
 2726 09e7 1F01     		.2byte	0x11f
 2727 09e9 01       		.byte	0x1
 2728 09ea 00000000 		.4byte	.LFB37
 2729 09ee 30000000 		.4byte	.LFE37
 2730 09f2 8C010000 		.4byte	.LLST12
 2731 09f6 01       		.byte	0x1
 2732 09f7 090A0000 		.4byte	0xa09
 2733 09fb 1D       		.uleb128 0x1d
 2734 09fc 6100     		.ascii	"a\000"
 2735 09fe 02       		.byte	0x2
 2736 09ff 1F01     		.2byte	0x11f
 2737 0a01 1F010000 		.4byte	0x11f
 2738 0a05 02       		.byte	0x2
 2739 0a06 91       		.byte	0x91
 2740 0a07 7E       		.sleb128 -2
 2741 0a08 00       		.byte	0
 2742 0a09 1B       		.uleb128 0x1b
ARM GAS  /tmp/ccD5vHri.s 			page 71


 2743 0a0a 01       		.byte	0x1
 2744 0a0b 6E000000 		.4byte	.LASF127
 2745 0a0f 02       		.byte	0x2
 2746 0a10 2601     		.2byte	0x126
 2747 0a12 01       		.byte	0x1
 2748 0a13 00000000 		.4byte	.LFB38
 2749 0a17 18000000 		.4byte	.LFE38
 2750 0a1b 02       		.byte	0x2
 2751 0a1c 7D       		.byte	0x7d
 2752 0a1d 00       		.sleb128 0
 2753 0a1e 01       		.byte	0x1
 2754 0a1f 1B       		.uleb128 0x1b
 2755 0a20 01       		.byte	0x1
 2756 0a21 D8010000 		.4byte	.LASF128
 2757 0a25 02       		.byte	0x2
 2758 0a26 2C01     		.2byte	0x12c
 2759 0a28 01       		.byte	0x1
 2760 0a29 00000000 		.4byte	.LFB39
 2761 0a2d 18000000 		.4byte	.LFE39
 2762 0a31 02       		.byte	0x2
 2763 0a32 7D       		.byte	0x7d
 2764 0a33 00       		.sleb128 0
 2765 0a34 01       		.byte	0x1
 2766 0a35 1E       		.uleb128 0x1e
 2767 0a36 01       		.byte	0x1
 2768 0a37 18020000 		.4byte	.LASF129
 2769 0a3b 02       		.byte	0x2
 2770 0a3c 3201     		.2byte	0x132
 2771 0a3e 01       		.byte	0x1
 2772 0a3f 00000000 		.4byte	.LFB40
 2773 0a43 6C000000 		.4byte	.LFE40
 2774 0a47 AC010000 		.4byte	.LLST13
 2775 0a4b 01       		.byte	0x1
 2776 0a4c 1B       		.uleb128 0x1b
 2777 0a4d 01       		.byte	0x1
 2778 0a4e 9D010000 		.4byte	.LASF130
 2779 0a52 02       		.byte	0x2
 2780 0a53 4501     		.2byte	0x145
 2781 0a55 01       		.byte	0x1
 2782 0a56 00000000 		.4byte	.LFB41
 2783 0a5a 1C000000 		.4byte	.LFE41
 2784 0a5e 02       		.byte	0x2
 2785 0a5f 7D       		.byte	0x7d
 2786 0a60 00       		.sleb128 0
 2787 0a61 01       		.byte	0x1
 2788 0a62 1B       		.uleb128 0x1b
 2789 0a63 01       		.byte	0x1
 2790 0a64 12030000 		.4byte	.LASF131
 2791 0a68 02       		.byte	0x2
 2792 0a69 4F01     		.2byte	0x14f
 2793 0a6b 01       		.byte	0x1
 2794 0a6c 00000000 		.4byte	.LFB42
 2795 0a70 18000000 		.4byte	.LFE42
 2796 0a74 02       		.byte	0x2
 2797 0a75 7D       		.byte	0x7d
 2798 0a76 00       		.sleb128 0
 2799 0a77 01       		.byte	0x1
ARM GAS  /tmp/ccD5vHri.s 			page 72


 2800 0a78 1B       		.uleb128 0x1b
 2801 0a79 01       		.byte	0x1
 2802 0a7a 56040000 		.4byte	.LASF132
 2803 0a7e 02       		.byte	0x2
 2804 0a7f 5501     		.2byte	0x155
 2805 0a81 01       		.byte	0x1
 2806 0a82 00000000 		.4byte	.LFB43
 2807 0a86 18000000 		.4byte	.LFE43
 2808 0a8a 02       		.byte	0x2
 2809 0a8b 7D       		.byte	0x7d
 2810 0a8c 00       		.sleb128 0
 2811 0a8d 01       		.byte	0x1
 2812 0a8e 1F       		.uleb128 0x1f
 2813 0a8f FB030000 		.4byte	.LASF133
 2814 0a93 02       		.byte	0x2
 2815 0a94 14       		.byte	0x14
 2816 0a95 9B0A0000 		.4byte	0xa9b
 2817 0a99 01       		.byte	0x1
 2818 0a9a 01       		.byte	0x1
 2819 0a9b 0E       		.uleb128 0xe
 2820 0a9c 1F010000 		.4byte	0x11f
 2821 0aa0 20       		.uleb128 0x20
 2822 0aa1 9A040000 		.4byte	.LASF134
 2823 0aa5 02       		.byte	0x2
 2824 0aa6 1D       		.byte	0x1d
 2825 0aa7 9B0A0000 		.4byte	0xa9b
 2826 0aab 01       		.byte	0x1
 2827 0aac 05       		.byte	0x5
 2828 0aad 03       		.byte	0x3
 2829 0aae 00000000 		.4byte	timer_1000
 2830 0ab2 00       		.byte	0
 2831              		.section	.debug_abbrev,"",%progbits
 2832              	.Ldebug_abbrev0:
 2833 0000 01       		.uleb128 0x1
 2834 0001 11       		.uleb128 0x11
 2835 0002 01       		.byte	0x1
 2836 0003 25       		.uleb128 0x25
 2837 0004 0E       		.uleb128 0xe
 2838 0005 13       		.uleb128 0x13
 2839 0006 0B       		.uleb128 0xb
 2840 0007 03       		.uleb128 0x3
 2841 0008 0E       		.uleb128 0xe
 2842 0009 1B       		.uleb128 0x1b
 2843 000a 0E       		.uleb128 0xe
 2844 000b 55       		.uleb128 0x55
 2845 000c 06       		.uleb128 0x6
 2846 000d 11       		.uleb128 0x11
 2847 000e 01       		.uleb128 0x1
 2848 000f 52       		.uleb128 0x52
 2849 0010 01       		.uleb128 0x1
 2850 0011 10       		.uleb128 0x10
 2851 0012 06       		.uleb128 0x6
 2852 0013 00       		.byte	0
 2853 0014 00       		.byte	0
 2854 0015 02       		.uleb128 0x2
 2855 0016 24       		.uleb128 0x24
 2856 0017 00       		.byte	0
ARM GAS  /tmp/ccD5vHri.s 			page 73


 2857 0018 0B       		.uleb128 0xb
 2858 0019 0B       		.uleb128 0xb
 2859 001a 3E       		.uleb128 0x3e
 2860 001b 0B       		.uleb128 0xb
 2861 001c 03       		.uleb128 0x3
 2862 001d 0E       		.uleb128 0xe
 2863 001e 00       		.byte	0
 2864 001f 00       		.byte	0
 2865 0020 03       		.uleb128 0x3
 2866 0021 04       		.uleb128 0x4
 2867 0022 01       		.byte	0x1
 2868 0023 03       		.uleb128 0x3
 2869 0024 0E       		.uleb128 0xe
 2870 0025 0B       		.uleb128 0xb
 2871 0026 0B       		.uleb128 0xb
 2872 0027 49       		.uleb128 0x49
 2873 0028 13       		.uleb128 0x13
 2874 0029 3A       		.uleb128 0x3a
 2875 002a 0B       		.uleb128 0xb
 2876 002b 3B       		.uleb128 0x3b
 2877 002c 0B       		.uleb128 0xb
 2878 002d 01       		.uleb128 0x1
 2879 002e 13       		.uleb128 0x13
 2880 002f 00       		.byte	0
 2881 0030 00       		.byte	0
 2882 0031 04       		.uleb128 0x4
 2883 0032 28       		.uleb128 0x28
 2884 0033 00       		.byte	0
 2885 0034 03       		.uleb128 0x3
 2886 0035 0E       		.uleb128 0xe
 2887 0036 1C       		.uleb128 0x1c
 2888 0037 0D       		.uleb128 0xd
 2889 0038 00       		.byte	0
 2890 0039 00       		.byte	0
 2891 003a 05       		.uleb128 0x5
 2892 003b 28       		.uleb128 0x28
 2893 003c 00       		.byte	0
 2894 003d 03       		.uleb128 0x3
 2895 003e 0E       		.uleb128 0xe
 2896 003f 1C       		.uleb128 0x1c
 2897 0040 0B       		.uleb128 0xb
 2898 0041 00       		.byte	0
 2899 0042 00       		.byte	0
 2900 0043 06       		.uleb128 0x6
 2901 0044 16       		.uleb128 0x16
 2902 0045 00       		.byte	0
 2903 0046 03       		.uleb128 0x3
 2904 0047 0E       		.uleb128 0xe
 2905 0048 3A       		.uleb128 0x3a
 2906 0049 0B       		.uleb128 0xb
 2907 004a 3B       		.uleb128 0x3b
 2908 004b 05       		.uleb128 0x5
 2909 004c 49       		.uleb128 0x49
 2910 004d 13       		.uleb128 0x13
 2911 004e 00       		.byte	0
 2912 004f 00       		.byte	0
 2913 0050 07       		.uleb128 0x7
ARM GAS  /tmp/ccD5vHri.s 			page 74


 2914 0051 16       		.uleb128 0x16
 2915 0052 00       		.byte	0
 2916 0053 03       		.uleb128 0x3
 2917 0054 0E       		.uleb128 0xe
 2918 0055 3A       		.uleb128 0x3a
 2919 0056 0B       		.uleb128 0xb
 2920 0057 3B       		.uleb128 0x3b
 2921 0058 0B       		.uleb128 0xb
 2922 0059 49       		.uleb128 0x49
 2923 005a 13       		.uleb128 0x13
 2924 005b 00       		.byte	0
 2925 005c 00       		.byte	0
 2926 005d 08       		.uleb128 0x8
 2927 005e 24       		.uleb128 0x24
 2928 005f 00       		.byte	0
 2929 0060 0B       		.uleb128 0xb
 2930 0061 0B       		.uleb128 0xb
 2931 0062 3E       		.uleb128 0x3e
 2932 0063 0B       		.uleb128 0xb
 2933 0064 03       		.uleb128 0x3
 2934 0065 08       		.uleb128 0x8
 2935 0066 00       		.byte	0
 2936 0067 00       		.byte	0
 2937 0068 09       		.uleb128 0x9
 2938 0069 13       		.uleb128 0x13
 2939 006a 01       		.byte	0x1
 2940 006b 0B       		.uleb128 0xb
 2941 006c 05       		.uleb128 0x5
 2942 006d 3A       		.uleb128 0x3a
 2943 006e 0B       		.uleb128 0xb
 2944 006f 3B       		.uleb128 0x3b
 2945 0070 0B       		.uleb128 0xb
 2946 0071 01       		.uleb128 0x1
 2947 0072 13       		.uleb128 0x13
 2948 0073 00       		.byte	0
 2949 0074 00       		.byte	0
 2950 0075 0A       		.uleb128 0xa
 2951 0076 0D       		.uleb128 0xd
 2952 0077 00       		.byte	0
 2953 0078 03       		.uleb128 0x3
 2954 0079 0E       		.uleb128 0xe
 2955 007a 3A       		.uleb128 0x3a
 2956 007b 0B       		.uleb128 0xb
 2957 007c 3B       		.uleb128 0x3b
 2958 007d 0B       		.uleb128 0xb
 2959 007e 49       		.uleb128 0x49
 2960 007f 13       		.uleb128 0x13
 2961 0080 38       		.uleb128 0x38
 2962 0081 0A       		.uleb128 0xa
 2963 0082 00       		.byte	0
 2964 0083 00       		.byte	0
 2965 0084 0B       		.uleb128 0xb
 2966 0085 0D       		.uleb128 0xd
 2967 0086 00       		.byte	0
 2968 0087 03       		.uleb128 0x3
 2969 0088 08       		.uleb128 0x8
 2970 0089 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccD5vHri.s 			page 75


 2971 008a 0B       		.uleb128 0xb
 2972 008b 3B       		.uleb128 0x3b
 2973 008c 0B       		.uleb128 0xb
 2974 008d 49       		.uleb128 0x49
 2975 008e 13       		.uleb128 0x13
 2976 008f 38       		.uleb128 0x38
 2977 0090 0A       		.uleb128 0xa
 2978 0091 00       		.byte	0
 2979 0092 00       		.byte	0
 2980 0093 0C       		.uleb128 0xc
 2981 0094 01       		.uleb128 0x1
 2982 0095 01       		.byte	0x1
 2983 0096 49       		.uleb128 0x49
 2984 0097 13       		.uleb128 0x13
 2985 0098 01       		.uleb128 0x1
 2986 0099 13       		.uleb128 0x13
 2987 009a 00       		.byte	0
 2988 009b 00       		.byte	0
 2989 009c 0D       		.uleb128 0xd
 2990 009d 21       		.uleb128 0x21
 2991 009e 00       		.byte	0
 2992 009f 49       		.uleb128 0x49
 2993 00a0 13       		.uleb128 0x13
 2994 00a1 2F       		.uleb128 0x2f
 2995 00a2 0B       		.uleb128 0xb
 2996 00a3 00       		.byte	0
 2997 00a4 00       		.byte	0
 2998 00a5 0E       		.uleb128 0xe
 2999 00a6 35       		.uleb128 0x35
 3000 00a7 00       		.byte	0
 3001 00a8 49       		.uleb128 0x49
 3002 00a9 13       		.uleb128 0x13
 3003 00aa 00       		.byte	0
 3004 00ab 00       		.byte	0
 3005 00ac 0F       		.uleb128 0xf
 3006 00ad 13       		.uleb128 0x13
 3007 00ae 01       		.byte	0x1
 3008 00af 0B       		.uleb128 0xb
 3009 00b0 0B       		.uleb128 0xb
 3010 00b1 3A       		.uleb128 0x3a
 3011 00b2 0B       		.uleb128 0xb
 3012 00b3 3B       		.uleb128 0x3b
 3013 00b4 0B       		.uleb128 0xb
 3014 00b5 01       		.uleb128 0x1
 3015 00b6 13       		.uleb128 0x13
 3016 00b7 00       		.byte	0
 3017 00b8 00       		.byte	0
 3018 00b9 10       		.uleb128 0x10
 3019 00ba 26       		.uleb128 0x26
 3020 00bb 00       		.byte	0
 3021 00bc 49       		.uleb128 0x49
 3022 00bd 13       		.uleb128 0x13
 3023 00be 00       		.byte	0
 3024 00bf 00       		.byte	0
 3025 00c0 11       		.uleb128 0x11
 3026 00c1 13       		.uleb128 0x13
 3027 00c2 01       		.byte	0x1
ARM GAS  /tmp/ccD5vHri.s 			page 76


 3028 00c3 0B       		.uleb128 0xb
 3029 00c4 0B       		.uleb128 0xb
 3030 00c5 3A       		.uleb128 0x3a
 3031 00c6 0B       		.uleb128 0xb
 3032 00c7 3B       		.uleb128 0x3b
 3033 00c8 05       		.uleb128 0x5
 3034 00c9 01       		.uleb128 0x1
 3035 00ca 13       		.uleb128 0x13
 3036 00cb 00       		.byte	0
 3037 00cc 00       		.byte	0
 3038 00cd 12       		.uleb128 0x12
 3039 00ce 0D       		.uleb128 0xd
 3040 00cf 00       		.byte	0
 3041 00d0 03       		.uleb128 0x3
 3042 00d1 0E       		.uleb128 0xe
 3043 00d2 3A       		.uleb128 0x3a
 3044 00d3 0B       		.uleb128 0xb
 3045 00d4 3B       		.uleb128 0x3b
 3046 00d5 05       		.uleb128 0x5
 3047 00d6 49       		.uleb128 0x49
 3048 00d7 13       		.uleb128 0x13
 3049 00d8 38       		.uleb128 0x38
 3050 00d9 0A       		.uleb128 0xa
 3051 00da 00       		.byte	0
 3052 00db 00       		.byte	0
 3053 00dc 13       		.uleb128 0x13
 3054 00dd 0D       		.uleb128 0xd
 3055 00de 00       		.byte	0
 3056 00df 03       		.uleb128 0x3
 3057 00e0 08       		.uleb128 0x8
 3058 00e1 3A       		.uleb128 0x3a
 3059 00e2 0B       		.uleb128 0xb
 3060 00e3 3B       		.uleb128 0x3b
 3061 00e4 05       		.uleb128 0x5
 3062 00e5 49       		.uleb128 0x49
 3063 00e6 13       		.uleb128 0x13
 3064 00e7 38       		.uleb128 0x38
 3065 00e8 0A       		.uleb128 0xa
 3066 00e9 00       		.byte	0
 3067 00ea 00       		.byte	0
 3068 00eb 14       		.uleb128 0x14
 3069 00ec 2E       		.uleb128 0x2e
 3070 00ed 01       		.byte	0x1
 3071 00ee 03       		.uleb128 0x3
 3072 00ef 0E       		.uleb128 0xe
 3073 00f0 3A       		.uleb128 0x3a
 3074 00f1 0B       		.uleb128 0xb
 3075 00f2 3B       		.uleb128 0x3b
 3076 00f3 05       		.uleb128 0x5
 3077 00f4 27       		.uleb128 0x27
 3078 00f5 0C       		.uleb128 0xc
 3079 00f6 11       		.uleb128 0x11
 3080 00f7 01       		.uleb128 0x1
 3081 00f8 12       		.uleb128 0x12
 3082 00f9 01       		.uleb128 0x1
 3083 00fa 40       		.uleb128 0x40
 3084 00fb 06       		.uleb128 0x6
ARM GAS  /tmp/ccD5vHri.s 			page 77


 3085 00fc 9742     		.uleb128 0x2117
 3086 00fe 0C       		.uleb128 0xc
 3087 00ff 01       		.uleb128 0x1
 3088 0100 13       		.uleb128 0x13
 3089 0101 00       		.byte	0
 3090 0102 00       		.byte	0
 3091 0103 15       		.uleb128 0x15
 3092 0104 05       		.uleb128 0x5
 3093 0105 00       		.byte	0
 3094 0106 03       		.uleb128 0x3
 3095 0107 0E       		.uleb128 0xe
 3096 0108 3A       		.uleb128 0x3a
 3097 0109 0B       		.uleb128 0xb
 3098 010a 3B       		.uleb128 0x3b
 3099 010b 05       		.uleb128 0x5
 3100 010c 49       		.uleb128 0x49
 3101 010d 13       		.uleb128 0x13
 3102 010e 02       		.uleb128 0x2
 3103 010f 0A       		.uleb128 0xa
 3104 0110 00       		.byte	0
 3105 0111 00       		.byte	0
 3106 0112 16       		.uleb128 0x16
 3107 0113 2E       		.uleb128 0x2e
 3108 0114 01       		.byte	0x1
 3109 0115 3F       		.uleb128 0x3f
 3110 0116 0C       		.uleb128 0xc
 3111 0117 03       		.uleb128 0x3
 3112 0118 0E       		.uleb128 0xe
 3113 0119 3A       		.uleb128 0x3a
 3114 011a 0B       		.uleb128 0xb
 3115 011b 3B       		.uleb128 0x3b
 3116 011c 0B       		.uleb128 0xb
 3117 011d 27       		.uleb128 0x27
 3118 011e 0C       		.uleb128 0xc
 3119 011f 11       		.uleb128 0x11
 3120 0120 01       		.uleb128 0x1
 3121 0121 12       		.uleb128 0x12
 3122 0122 01       		.uleb128 0x1
 3123 0123 40       		.uleb128 0x40
 3124 0124 06       		.uleb128 0x6
 3125 0125 9742     		.uleb128 0x2117
 3126 0127 0C       		.uleb128 0xc
 3127 0128 01       		.uleb128 0x1
 3128 0129 13       		.uleb128 0x13
 3129 012a 00       		.byte	0
 3130 012b 00       		.byte	0
 3131 012c 17       		.uleb128 0x17
 3132 012d 05       		.uleb128 0x5
 3133 012e 00       		.byte	0
 3134 012f 03       		.uleb128 0x3
 3135 0130 08       		.uleb128 0x8
 3136 0131 3A       		.uleb128 0x3a
 3137 0132 0B       		.uleb128 0xb
 3138 0133 3B       		.uleb128 0x3b
 3139 0134 0B       		.uleb128 0xb
 3140 0135 49       		.uleb128 0x49
 3141 0136 13       		.uleb128 0x13
ARM GAS  /tmp/ccD5vHri.s 			page 78


 3142 0137 02       		.uleb128 0x2
 3143 0138 0A       		.uleb128 0xa
 3144 0139 00       		.byte	0
 3145 013a 00       		.byte	0
 3146 013b 18       		.uleb128 0x18
 3147 013c 05       		.uleb128 0x5
 3148 013d 00       		.byte	0
 3149 013e 03       		.uleb128 0x3
 3150 013f 0E       		.uleb128 0xe
 3151 0140 3A       		.uleb128 0x3a
 3152 0141 0B       		.uleb128 0xb
 3153 0142 3B       		.uleb128 0x3b
 3154 0143 0B       		.uleb128 0xb
 3155 0144 49       		.uleb128 0x49
 3156 0145 13       		.uleb128 0x13
 3157 0146 02       		.uleb128 0x2
 3158 0147 0A       		.uleb128 0xa
 3159 0148 00       		.byte	0
 3160 0149 00       		.byte	0
 3161 014a 19       		.uleb128 0x19
 3162 014b 34       		.uleb128 0x34
 3163 014c 00       		.byte	0
 3164 014d 03       		.uleb128 0x3
 3165 014e 0E       		.uleb128 0xe
 3166 014f 3A       		.uleb128 0x3a
 3167 0150 0B       		.uleb128 0xb
 3168 0151 3B       		.uleb128 0x3b
 3169 0152 0B       		.uleb128 0xb
 3170 0153 49       		.uleb128 0x49
 3171 0154 13       		.uleb128 0x13
 3172 0155 02       		.uleb128 0x2
 3173 0156 0A       		.uleb128 0xa
 3174 0157 00       		.byte	0
 3175 0158 00       		.byte	0
 3176 0159 1A       		.uleb128 0x1a
 3177 015a 2E       		.uleb128 0x2e
 3178 015b 00       		.byte	0
 3179 015c 3F       		.uleb128 0x3f
 3180 015d 0C       		.uleb128 0xc
 3181 015e 03       		.uleb128 0x3
 3182 015f 0E       		.uleb128 0xe
 3183 0160 3A       		.uleb128 0x3a
 3184 0161 0B       		.uleb128 0xb
 3185 0162 3B       		.uleb128 0x3b
 3186 0163 0B       		.uleb128 0xb
 3187 0164 27       		.uleb128 0x27
 3188 0165 0C       		.uleb128 0xc
 3189 0166 11       		.uleb128 0x11
 3190 0167 01       		.uleb128 0x1
 3191 0168 12       		.uleb128 0x12
 3192 0169 01       		.uleb128 0x1
 3193 016a 40       		.uleb128 0x40
 3194 016b 0A       		.uleb128 0xa
 3195 016c 9742     		.uleb128 0x2117
 3196 016e 0C       		.uleb128 0xc
 3197 016f 00       		.byte	0
 3198 0170 00       		.byte	0
ARM GAS  /tmp/ccD5vHri.s 			page 79


 3199 0171 1B       		.uleb128 0x1b
 3200 0172 2E       		.uleb128 0x2e
 3201 0173 00       		.byte	0
 3202 0174 3F       		.uleb128 0x3f
 3203 0175 0C       		.uleb128 0xc
 3204 0176 03       		.uleb128 0x3
 3205 0177 0E       		.uleb128 0xe
 3206 0178 3A       		.uleb128 0x3a
 3207 0179 0B       		.uleb128 0xb
 3208 017a 3B       		.uleb128 0x3b
 3209 017b 05       		.uleb128 0x5
 3210 017c 27       		.uleb128 0x27
 3211 017d 0C       		.uleb128 0xc
 3212 017e 11       		.uleb128 0x11
 3213 017f 01       		.uleb128 0x1
 3214 0180 12       		.uleb128 0x12
 3215 0181 01       		.uleb128 0x1
 3216 0182 40       		.uleb128 0x40
 3217 0183 0A       		.uleb128 0xa
 3218 0184 9742     		.uleb128 0x2117
 3219 0186 0C       		.uleb128 0xc
 3220 0187 00       		.byte	0
 3221 0188 00       		.byte	0
 3222 0189 1C       		.uleb128 0x1c
 3223 018a 2E       		.uleb128 0x2e
 3224 018b 01       		.byte	0x1
 3225 018c 3F       		.uleb128 0x3f
 3226 018d 0C       		.uleb128 0xc
 3227 018e 03       		.uleb128 0x3
 3228 018f 0E       		.uleb128 0xe
 3229 0190 3A       		.uleb128 0x3a
 3230 0191 0B       		.uleb128 0xb
 3231 0192 3B       		.uleb128 0x3b
 3232 0193 05       		.uleb128 0x5
 3233 0194 27       		.uleb128 0x27
 3234 0195 0C       		.uleb128 0xc
 3235 0196 11       		.uleb128 0x11
 3236 0197 01       		.uleb128 0x1
 3237 0198 12       		.uleb128 0x12
 3238 0199 01       		.uleb128 0x1
 3239 019a 40       		.uleb128 0x40
 3240 019b 06       		.uleb128 0x6
 3241 019c 9742     		.uleb128 0x2117
 3242 019e 0C       		.uleb128 0xc
 3243 019f 01       		.uleb128 0x1
 3244 01a0 13       		.uleb128 0x13
 3245 01a1 00       		.byte	0
 3246 01a2 00       		.byte	0
 3247 01a3 1D       		.uleb128 0x1d
 3248 01a4 05       		.uleb128 0x5
 3249 01a5 00       		.byte	0
 3250 01a6 03       		.uleb128 0x3
 3251 01a7 08       		.uleb128 0x8
 3252 01a8 3A       		.uleb128 0x3a
 3253 01a9 0B       		.uleb128 0xb
 3254 01aa 3B       		.uleb128 0x3b
 3255 01ab 05       		.uleb128 0x5
ARM GAS  /tmp/ccD5vHri.s 			page 80


 3256 01ac 49       		.uleb128 0x49
 3257 01ad 13       		.uleb128 0x13
 3258 01ae 02       		.uleb128 0x2
 3259 01af 0A       		.uleb128 0xa
 3260 01b0 00       		.byte	0
 3261 01b1 00       		.byte	0
 3262 01b2 1E       		.uleb128 0x1e
 3263 01b3 2E       		.uleb128 0x2e
 3264 01b4 00       		.byte	0
 3265 01b5 3F       		.uleb128 0x3f
 3266 01b6 0C       		.uleb128 0xc
 3267 01b7 03       		.uleb128 0x3
 3268 01b8 0E       		.uleb128 0xe
 3269 01b9 3A       		.uleb128 0x3a
 3270 01ba 0B       		.uleb128 0xb
 3271 01bb 3B       		.uleb128 0x3b
 3272 01bc 05       		.uleb128 0x5
 3273 01bd 27       		.uleb128 0x27
 3274 01be 0C       		.uleb128 0xc
 3275 01bf 11       		.uleb128 0x11
 3276 01c0 01       		.uleb128 0x1
 3277 01c1 12       		.uleb128 0x12
 3278 01c2 01       		.uleb128 0x1
 3279 01c3 40       		.uleb128 0x40
 3280 01c4 06       		.uleb128 0x6
 3281 01c5 9642     		.uleb128 0x2116
 3282 01c7 0C       		.uleb128 0xc
 3283 01c8 00       		.byte	0
 3284 01c9 00       		.byte	0
 3285 01ca 1F       		.uleb128 0x1f
 3286 01cb 34       		.uleb128 0x34
 3287 01cc 00       		.byte	0
 3288 01cd 03       		.uleb128 0x3
 3289 01ce 0E       		.uleb128 0xe
 3290 01cf 3A       		.uleb128 0x3a
 3291 01d0 0B       		.uleb128 0xb
 3292 01d1 3B       		.uleb128 0x3b
 3293 01d2 0B       		.uleb128 0xb
 3294 01d3 49       		.uleb128 0x49
 3295 01d4 13       		.uleb128 0x13
 3296 01d5 3F       		.uleb128 0x3f
 3297 01d6 0C       		.uleb128 0xc
 3298 01d7 3C       		.uleb128 0x3c
 3299 01d8 0C       		.uleb128 0xc
 3300 01d9 00       		.byte	0
 3301 01da 00       		.byte	0
 3302 01db 20       		.uleb128 0x20
 3303 01dc 34       		.uleb128 0x34
 3304 01dd 00       		.byte	0
 3305 01de 03       		.uleb128 0x3
 3306 01df 0E       		.uleb128 0xe
 3307 01e0 3A       		.uleb128 0x3a
 3308 01e1 0B       		.uleb128 0xb
 3309 01e2 3B       		.uleb128 0x3b
 3310 01e3 0B       		.uleb128 0xb
 3311 01e4 49       		.uleb128 0x49
 3312 01e5 13       		.uleb128 0x13
ARM GAS  /tmp/ccD5vHri.s 			page 81


 3313 01e6 3F       		.uleb128 0x3f
 3314 01e7 0C       		.uleb128 0xc
 3315 01e8 02       		.uleb128 0x2
 3316 01e9 0A       		.uleb128 0xa
 3317 01ea 00       		.byte	0
 3318 01eb 00       		.byte	0
 3319 01ec 00       		.byte	0
 3320              		.section	.debug_loc,"",%progbits
 3321              	.Ldebug_loc0:
 3322              	.LLST0:
 3323 0000 00000000 		.4byte	.LFB11
 3324 0004 02000000 		.4byte	.LCFI0
 3325 0008 0200     		.2byte	0x2
 3326 000a 7D       		.byte	0x7d
 3327 000b 00       		.sleb128 0
 3328 000c 02000000 		.4byte	.LCFI0
 3329 0010 2C000000 		.4byte	.LFE11
 3330 0014 0200     		.2byte	0x2
 3331 0016 7D       		.byte	0x7d
 3332 0017 08       		.sleb128 8
 3333 0018 00000000 		.4byte	0
 3334 001c 00000000 		.4byte	0
 3335              	.LLST1:
 3336 0020 00000000 		.4byte	.LFB16
 3337 0024 02000000 		.4byte	.LCFI1
 3338 0028 0200     		.2byte	0x2
 3339 002a 7D       		.byte	0x7d
 3340 002b 00       		.sleb128 0
 3341 002c 02000000 		.4byte	.LCFI1
 3342 0030 04000000 		.4byte	.LCFI2
 3343 0034 0200     		.2byte	0x2
 3344 0036 7D       		.byte	0x7d
 3345 0037 0C       		.sleb128 12
 3346 0038 04000000 		.4byte	.LCFI2
 3347 003c EC000000 		.4byte	.LFE16
 3348 0040 0200     		.2byte	0x2
 3349 0042 7D       		.byte	0x7d
 3350 0043 18       		.sleb128 24
 3351 0044 00000000 		.4byte	0
 3352 0048 00000000 		.4byte	0
 3353              	.LLST2:
 3354 004c 00000000 		.4byte	.LFB20
 3355 0050 02000000 		.4byte	.LCFI3
 3356 0054 0200     		.2byte	0x2
 3357 0056 7D       		.byte	0x7d
 3358 0057 00       		.sleb128 0
 3359 0058 02000000 		.4byte	.LCFI3
 3360 005c 20000000 		.4byte	.LFE20
 3361 0060 0200     		.2byte	0x2
 3362 0062 7D       		.byte	0x7d
 3363 0063 08       		.sleb128 8
 3364 0064 00000000 		.4byte	0
 3365 0068 00000000 		.4byte	0
 3366              	.LLST3:
 3367 006c 00000000 		.4byte	.LFB21
 3368 0070 02000000 		.4byte	.LCFI4
 3369 0074 0200     		.2byte	0x2
ARM GAS  /tmp/ccD5vHri.s 			page 82


 3370 0076 7D       		.byte	0x7d
 3371 0077 00       		.sleb128 0
 3372 0078 02000000 		.4byte	.LCFI4
 3373 007c 20000000 		.4byte	.LFE21
 3374 0080 0200     		.2byte	0x2
 3375 0082 7D       		.byte	0x7d
 3376 0083 08       		.sleb128 8
 3377 0084 00000000 		.4byte	0
 3378 0088 00000000 		.4byte	0
 3379              	.LLST4:
 3380 008c 00000000 		.4byte	.LFB22
 3381 0090 02000000 		.4byte	.LCFI5
 3382 0094 0200     		.2byte	0x2
 3383 0096 7D       		.byte	0x7d
 3384 0097 00       		.sleb128 0
 3385 0098 02000000 		.4byte	.LCFI5
 3386 009c 20000000 		.4byte	.LFE22
 3387 00a0 0200     		.2byte	0x2
 3388 00a2 7D       		.byte	0x7d
 3389 00a3 08       		.sleb128 8
 3390 00a4 00000000 		.4byte	0
 3391 00a8 00000000 		.4byte	0
 3392              	.LLST5:
 3393 00ac 00000000 		.4byte	.LFB23
 3394 00b0 02000000 		.4byte	.LCFI6
 3395 00b4 0200     		.2byte	0x2
 3396 00b6 7D       		.byte	0x7d
 3397 00b7 00       		.sleb128 0
 3398 00b8 02000000 		.4byte	.LCFI6
 3399 00bc 20000000 		.4byte	.LFE23
 3400 00c0 0200     		.2byte	0x2
 3401 00c2 7D       		.byte	0x7d
 3402 00c3 08       		.sleb128 8
 3403 00c4 00000000 		.4byte	0
 3404 00c8 00000000 		.4byte	0
 3405              	.LLST6:
 3406 00cc 00000000 		.4byte	.LFB24
 3407 00d0 02000000 		.4byte	.LCFI7
 3408 00d4 0200     		.2byte	0x2
 3409 00d6 7D       		.byte	0x7d
 3410 00d7 00       		.sleb128 0
 3411 00d8 02000000 		.4byte	.LCFI7
 3412 00dc 20000000 		.4byte	.LFE24
 3413 00e0 0200     		.2byte	0x2
 3414 00e2 7D       		.byte	0x7d
 3415 00e3 08       		.sleb128 8
 3416 00e4 00000000 		.4byte	0
 3417 00e8 00000000 		.4byte	0
 3418              	.LLST7:
 3419 00ec 00000000 		.4byte	.LFB25
 3420 00f0 02000000 		.4byte	.LCFI8
 3421 00f4 0200     		.2byte	0x2
 3422 00f6 7D       		.byte	0x7d
 3423 00f7 00       		.sleb128 0
 3424 00f8 02000000 		.4byte	.LCFI8
 3425 00fc 20000000 		.4byte	.LFE25
 3426 0100 0200     		.2byte	0x2
ARM GAS  /tmp/ccD5vHri.s 			page 83


 3427 0102 7D       		.byte	0x7d
 3428 0103 08       		.sleb128 8
 3429 0104 00000000 		.4byte	0
 3430 0108 00000000 		.4byte	0
 3431              	.LLST8:
 3432 010c 00000000 		.4byte	.LFB26
 3433 0110 02000000 		.4byte	.LCFI9
 3434 0114 0200     		.2byte	0x2
 3435 0116 7D       		.byte	0x7d
 3436 0117 00       		.sleb128 0
 3437 0118 02000000 		.4byte	.LCFI9
 3438 011c 2C000000 		.4byte	.LFE26
 3439 0120 0200     		.2byte	0x2
 3440 0122 7D       		.byte	0x7d
 3441 0123 08       		.sleb128 8
 3442 0124 00000000 		.4byte	0
 3443 0128 00000000 		.4byte	0
 3444              	.LLST9:
 3445 012c 00000000 		.4byte	.LFB27
 3446 0130 02000000 		.4byte	.LCFI10
 3447 0134 0200     		.2byte	0x2
 3448 0136 7D       		.byte	0x7d
 3449 0137 00       		.sleb128 0
 3450 0138 02000000 		.4byte	.LCFI10
 3451 013c CC000000 		.4byte	.LFE27
 3452 0140 0200     		.2byte	0x2
 3453 0142 7D       		.byte	0x7d
 3454 0143 08       		.sleb128 8
 3455 0144 00000000 		.4byte	0
 3456 0148 00000000 		.4byte	0
 3457              	.LLST10:
 3458 014c 00000000 		.4byte	.LFB28
 3459 0150 02000000 		.4byte	.LCFI11
 3460 0154 0200     		.2byte	0x2
 3461 0156 7D       		.byte	0x7d
 3462 0157 00       		.sleb128 0
 3463 0158 02000000 		.4byte	.LCFI11
 3464 015c AC000000 		.4byte	.LFE28
 3465 0160 0200     		.2byte	0x2
 3466 0162 7D       		.byte	0x7d
 3467 0163 08       		.sleb128 8
 3468 0164 00000000 		.4byte	0
 3469 0168 00000000 		.4byte	0
 3470              	.LLST11:
 3471 016c 00000000 		.4byte	.LFB34
 3472 0170 02000000 		.4byte	.LCFI12
 3473 0174 0200     		.2byte	0x2
 3474 0176 7D       		.byte	0x7d
 3475 0177 00       		.sleb128 0
 3476 0178 02000000 		.4byte	.LCFI12
 3477 017c 88000000 		.4byte	.LFE34
 3478 0180 0200     		.2byte	0x2
 3479 0182 7D       		.byte	0x7d
 3480 0183 08       		.sleb128 8
 3481 0184 00000000 		.4byte	0
 3482 0188 00000000 		.4byte	0
 3483              	.LLST12:
ARM GAS  /tmp/ccD5vHri.s 			page 84


 3484 018c 00000000 		.4byte	.LFB37
 3485 0190 02000000 		.4byte	.LCFI13
 3486 0194 0200     		.2byte	0x2
 3487 0196 7D       		.byte	0x7d
 3488 0197 00       		.sleb128 0
 3489 0198 02000000 		.4byte	.LCFI13
 3490 019c 30000000 		.4byte	.LFE37
 3491 01a0 0200     		.2byte	0x2
 3492 01a2 7D       		.byte	0x7d
 3493 01a3 08       		.sleb128 8
 3494 01a4 00000000 		.4byte	0
 3495 01a8 00000000 		.4byte	0
 3496              	.LLST13:
 3497 01ac 00000000 		.4byte	.LFB40
 3498 01b0 02000000 		.4byte	.LCFI14
 3499 01b4 0200     		.2byte	0x2
 3500 01b6 7D       		.byte	0x7d
 3501 01b7 00       		.sleb128 0
 3502 01b8 02000000 		.4byte	.LCFI14
 3503 01bc 6C000000 		.4byte	.LFE40
 3504 01c0 0200     		.2byte	0x2
 3505 01c2 7D       		.byte	0x7d
 3506 01c3 08       		.sleb128 8
 3507 01c4 00000000 		.4byte	0
 3508 01c8 00000000 		.4byte	0
 3509              		.section	.debug_aranges,"",%progbits
 3510 0000 E4000000 		.4byte	0xe4
 3511 0004 0200     		.2byte	0x2
 3512 0006 00000000 		.4byte	.Ldebug_info0
 3513 000a 04       		.byte	0x4
 3514 000b 00       		.byte	0
 3515 000c 0000     		.2byte	0
 3516 000e 0000     		.2byte	0
 3517 0010 00000000 		.4byte	.LFB11
 3518 0014 2C000000 		.4byte	.LFE11-.LFB11
 3519 0018 00000000 		.4byte	.LFB16
 3520 001c EC000000 		.4byte	.LFE16-.LFB16
 3521 0020 00000000 		.4byte	.LFB20
 3522 0024 20000000 		.4byte	.LFE20-.LFB20
 3523 0028 00000000 		.4byte	.LFB21
 3524 002c 20000000 		.4byte	.LFE21-.LFB21
 3525 0030 00000000 		.4byte	.LFB22
 3526 0034 20000000 		.4byte	.LFE22-.LFB22
 3527 0038 00000000 		.4byte	.LFB23
 3528 003c 20000000 		.4byte	.LFE23-.LFB23
 3529 0040 00000000 		.4byte	.LFB24
 3530 0044 20000000 		.4byte	.LFE24-.LFB24
 3531 0048 00000000 		.4byte	.LFB25
 3532 004c 20000000 		.4byte	.LFE25-.LFB25
 3533 0050 00000000 		.4byte	.LFB26
 3534 0054 2C000000 		.4byte	.LFE26-.LFB26
 3535 0058 00000000 		.4byte	.LFB27
 3536 005c CC000000 		.4byte	.LFE27-.LFB27
 3537 0060 00000000 		.4byte	.LFB28
 3538 0064 AC000000 		.4byte	.LFE28-.LFB28
 3539 0068 00000000 		.4byte	.LFB29
 3540 006c 1C000000 		.4byte	.LFE29-.LFB29
ARM GAS  /tmp/ccD5vHri.s 			page 85


 3541 0070 00000000 		.4byte	.LFB30
 3542 0074 38000000 		.4byte	.LFE30-.LFB30
 3543 0078 00000000 		.4byte	.LFB31
 3544 007c 18000000 		.4byte	.LFE31-.LFB31
 3545 0080 00000000 		.4byte	.LFB32
 3546 0084 18000000 		.4byte	.LFE32-.LFB32
 3547 0088 00000000 		.4byte	.LFB33
 3548 008c 1C000000 		.4byte	.LFE33-.LFB33
 3549 0090 00000000 		.4byte	.LFB34
 3550 0094 88000000 		.4byte	.LFE34-.LFB34
 3551 0098 00000000 		.4byte	.LFB35
 3552 009c 1C000000 		.4byte	.LFE35-.LFB35
 3553 00a0 00000000 		.4byte	.LFB36
 3554 00a4 48000000 		.4byte	.LFE36-.LFB36
 3555 00a8 00000000 		.4byte	.LFB37
 3556 00ac 30000000 		.4byte	.LFE37-.LFB37
 3557 00b0 00000000 		.4byte	.LFB38
 3558 00b4 18000000 		.4byte	.LFE38-.LFB38
 3559 00b8 00000000 		.4byte	.LFB39
 3560 00bc 18000000 		.4byte	.LFE39-.LFB39
 3561 00c0 00000000 		.4byte	.LFB40
 3562 00c4 6C000000 		.4byte	.LFE40-.LFB40
 3563 00c8 00000000 		.4byte	.LFB41
 3564 00cc 1C000000 		.4byte	.LFE41-.LFB41
 3565 00d0 00000000 		.4byte	.LFB42
 3566 00d4 18000000 		.4byte	.LFE42-.LFB42
 3567 00d8 00000000 		.4byte	.LFB43
 3568 00dc 18000000 		.4byte	.LFE43-.LFB43
 3569 00e0 00000000 		.4byte	0
 3570 00e4 00000000 		.4byte	0
 3571              		.section	.debug_ranges,"",%progbits
 3572              	.Ldebug_ranges0:
 3573 0000 00000000 		.4byte	.LFB11
 3574 0004 2C000000 		.4byte	.LFE11
 3575 0008 00000000 		.4byte	.LFB16
 3576 000c EC000000 		.4byte	.LFE16
 3577 0010 00000000 		.4byte	.LFB20
 3578 0014 20000000 		.4byte	.LFE20
 3579 0018 00000000 		.4byte	.LFB21
 3580 001c 20000000 		.4byte	.LFE21
 3581 0020 00000000 		.4byte	.LFB22
 3582 0024 20000000 		.4byte	.LFE22
 3583 0028 00000000 		.4byte	.LFB23
 3584 002c 20000000 		.4byte	.LFE23
 3585 0030 00000000 		.4byte	.LFB24
 3586 0034 20000000 		.4byte	.LFE24
 3587 0038 00000000 		.4byte	.LFB25
 3588 003c 20000000 		.4byte	.LFE25
 3589 0040 00000000 		.4byte	.LFB26
 3590 0044 2C000000 		.4byte	.LFE26
 3591 0048 00000000 		.4byte	.LFB27
 3592 004c CC000000 		.4byte	.LFE27
 3593 0050 00000000 		.4byte	.LFB28
 3594 0054 AC000000 		.4byte	.LFE28
 3595 0058 00000000 		.4byte	.LFB29
 3596 005c 1C000000 		.4byte	.LFE29
 3597 0060 00000000 		.4byte	.LFB30
ARM GAS  /tmp/ccD5vHri.s 			page 86


 3598 0064 38000000 		.4byte	.LFE30
 3599 0068 00000000 		.4byte	.LFB31
 3600 006c 18000000 		.4byte	.LFE31
 3601 0070 00000000 		.4byte	.LFB32
 3602 0074 18000000 		.4byte	.LFE32
 3603 0078 00000000 		.4byte	.LFB33
 3604 007c 1C000000 		.4byte	.LFE33
 3605 0080 00000000 		.4byte	.LFB34
 3606 0084 88000000 		.4byte	.LFE34
 3607 0088 00000000 		.4byte	.LFB35
 3608 008c 1C000000 		.4byte	.LFE35
 3609 0090 00000000 		.4byte	.LFB36
 3610 0094 48000000 		.4byte	.LFE36
 3611 0098 00000000 		.4byte	.LFB37
 3612 009c 30000000 		.4byte	.LFE37
 3613 00a0 00000000 		.4byte	.LFB38
 3614 00a4 18000000 		.4byte	.LFE38
 3615 00a8 00000000 		.4byte	.LFB39
 3616 00ac 18000000 		.4byte	.LFE39
 3617 00b0 00000000 		.4byte	.LFB40
 3618 00b4 6C000000 		.4byte	.LFE40
 3619 00b8 00000000 		.4byte	.LFB41
 3620 00bc 1C000000 		.4byte	.LFE41
 3621 00c0 00000000 		.4byte	.LFB42
 3622 00c4 18000000 		.4byte	.LFE42
 3623 00c8 00000000 		.4byte	.LFB43
 3624 00cc 18000000 		.4byte	.LFE43
 3625 00d0 00000000 		.4byte	0
 3626 00d4 00000000 		.4byte	0
 3627              		.section	.debug_line,"",%progbits
 3628              	.Ldebug_line0:
 3629 0000 6A030000 		.section	.debug_str,"MS",%progbits,1
 3629      02000A01 
 3629      00000201 
 3629      FB0E0D00 
 3629      01010101 
 3630              	.LASF75:
 3631 0000 41504231 		.ascii	"APB1ENR\000"
 3631      454E5200 
 3632              	.LASF11:
 3633 0008 45585449 		.ascii	"EXTI4_15_IRQn\000"
 3633      345F3135 
 3633      5F495251 
 3633      6E00
 3634              	.LASF67:
 3635 0016 42535252 		.ascii	"BSRR\000"
 3635      00
 3636              	.LASF124:
 3637 001b 54494D31 		.ascii	"TIM16_IRQHandler\000"
 3637      365F4952 
 3637      5148616E 
 3637      646C6572 
 3637      00
 3638              	.LASF10:
 3639 002c 45585449 		.ascii	"EXTI2_3_IRQn\000"
 3639      325F335F 
 3639      4952516E 
ARM GAS  /tmp/ccD5vHri.s 			page 87


 3639      00
 3640              	.LASF117:
 3641 0039 74656D70 		.ascii	"temp\000"
 3641      00
 3642              	.LASF71:
 3643 003e 41504232 		.ascii	"APB2RSTR\000"
 3643      52535452 
 3643      00
 3644              	.LASF2:
 3645 0047 5356435F 		.ascii	"SVC_IRQn\000"
 3645      4952516E 
 3645      00
 3646              	.LASF104:
 3647 0050 4E564943 		.ascii	"NVIC_SetPriority\000"
 3647      5F536574 
 3647      5072696F 
 3647      72697479 
 3647      00
 3648              	.LASF41:
 3649 0061 756E7369 		.ascii	"unsigned int\000"
 3649      676E6564 
 3649      20696E74 
 3649      00
 3650              	.LASF127:
 3651 006e 54494D31 		.ascii	"TIM16Enable\000"
 3651      36456E61 
 3651      626C6500 
 3652              	.LASF21:
 3653 007a 54494D31 		.ascii	"TIM16_IRQn\000"
 3653      365F4952 
 3653      516E00
 3654              	.LASF76:
 3655 0085 42444352 		.ascii	"BDCR\000"
 3655      00
 3656              	.LASF7:
 3657 008a 464C4153 		.ascii	"FLASH_IRQn\000"
 3657      485F4952 
 3657      516E00
 3658              	.LASF9:
 3659 0095 45585449 		.ascii	"EXTI0_1_IRQn\000"
 3659      305F315F 
 3659      4952516E 
 3659      00
 3660              	.LASF23:
 3661 00a2 49324331 		.ascii	"I2C1_IRQn\000"
 3661      5F495251 
 3661      6E00
 3662              	.LASF3:
 3663 00ac 50656E64 		.ascii	"PendSV_IRQn\000"
 3663      53565F49 
 3663      52516E00 
 3664              	.LASF8:
 3665 00b8 5243435F 		.ascii	"RCC_IRQn\000"
 3665      4952516E 
 3665      00
 3666              	.LASF102:
 3667 00c1 54494D5F 		.ascii	"TIM_TypeDef\000"
ARM GAS  /tmp/ccD5vHri.s 			page 88


 3667      54797065 
 3667      44656600 
 3668              	.LASF44:
 3669 00cd 75696E74 		.ascii	"uint32_t\000"
 3669      33325F74 
 3669      00
 3670              	.LASF126:
 3671 00d6 4F6E6553 		.ascii	"OneShootTIM16\000"
 3671      686F6F74 
 3671      54494D31 
 3671      3600
 3672              	.LASF77:
 3673 00e4 41484252 		.ascii	"AHBRSTR\000"
 3673      53545200 
 3674              	.LASF96:
 3675 00ec 42445452 		.ascii	"BDTR\000"
 3675      00
 3676              	.LASF45:
 3677 00f1 49534552 		.ascii	"ISER\000"
 3677      00
 3678              	.LASF92:
 3679 00f6 43435231 		.ascii	"CCR1\000"
 3679      00
 3680              	.LASF93:
 3681 00fb 43435232 		.ascii	"CCR2\000"
 3681      00
 3682              	.LASF94:
 3683 0100 43435233 		.ascii	"CCR3\000"
 3683      00
 3684              	.LASF48:
 3685 0105 52534552 		.ascii	"RSERVED1\000"
 3685      56454431 
 3685      00
 3686              	.LASF84:
 3687 010e 43434D52 		.ascii	"CCMR1\000"
 3687      3100
 3688              	.LASF86:
 3689 0114 43434D52 		.ascii	"CCMR2\000"
 3689      3200
 3690              	.LASF25:
 3691 011a 53504931 		.ascii	"SPI1_IRQn\000"
 3691      5F495251 
 3691      6E00
 3692              	.LASF103:
 3693 0124 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 3693      5F456E61 
 3693      626C6549 
 3693      525100
 3694              	.LASF40:
 3695 0133 6C6F6E67 		.ascii	"long long unsigned int\000"
 3695      206C6F6E 
 3695      6720756E 
 3695      7369676E 
 3695      65642069 
 3696              	.LASF61:
 3697 014a 44465352 		.ascii	"DFSR\000"
 3697      00
ARM GAS  /tmp/ccD5vHri.s 			page 89


 3698              	.LASF118:
 3699 014f 54494D33 		.ascii	"TIM3_IRQHandler\000"
 3699      5F495251 
 3699      48616E64 
 3699      6C657200 
 3700              	.LASF34:
 3701 015f 5F5F7569 		.ascii	"__uint16_t\000"
 3701      6E743136 
 3701      5F7400
 3702              	.LASF63:
 3703 016a 4D4F4445 		.ascii	"MODER\000"
 3703      5200
 3704              	.LASF31:
 3705 0170 4952516E 		.ascii	"IRQn_Type\000"
 3705      5F547970 
 3705      6500
 3706              	.LASF28:
 3707 017a 55534152 		.ascii	"USART2_IRQn\000"
 3707      54325F49 
 3707      52516E00 
 3708              	.LASF56:
 3709 0186 43505549 		.ascii	"CPUID\000"
 3709      4400
 3710              	.LASF80:
 3711 018c 5243435F 		.ascii	"RCC_TypeDef\000"
 3711      54797065 
 3711      44656600 
 3712              	.LASF82:
 3713 0198 44494552 		.ascii	"DIER\000"
 3713      00
 3714              	.LASF130:
 3715 019d 54494D31 		.ascii	"TIM17_IRQHandler\000"
 3715      375F4952 
 3715      5148616E 
 3715      646C6572 
 3715      00
 3716              	.LASF122:
 3717 01ae 54494D31 		.ascii	"TIM14_IRQHandler\000"
 3717      345F4952 
 3717      5148616E 
 3717      646C6572 
 3717      00
 3718              	.LASF66:
 3719 01bf 50555044 		.ascii	"PUPDR\000"
 3719      5200
 3720              	.LASF15:
 3721 01c5 41444331 		.ascii	"ADC1_IRQn\000"
 3721      5F495251 
 3721      6E00
 3722              	.LASF72:
 3723 01cf 41504231 		.ascii	"APB1RSTR\000"
 3723      52535452 
 3723      00
 3724              	.LASF128:
 3725 01d8 54494D31 		.ascii	"TIM16Disable\000"
 3725      36446973 
 3725      61626C65 
ARM GAS  /tmp/ccD5vHri.s 			page 90


 3725      00
 3726              	.LASF88:
 3727 01e5 43434552 		.ascii	"CCER\000"
 3727      00
 3728              	.LASF119:
 3729 01ea 54494D5F 		.ascii	"TIM_6_Init\000"
 3729      365F496E 
 3729      697400
 3730              	.LASF58:
 3731 01f5 41495243 		.ascii	"AIRCR\000"
 3731      5200
 3732              	.LASF18:
 3733 01fb 54494D33 		.ascii	"TIM3_IRQn\000"
 3733      5F495251 
 3733      6E00
 3734              	.LASF12:
 3735 0205 444D4131 		.ascii	"DMA1_Channel1_IRQn\000"
 3735      5F436861 
 3735      6E6E656C 
 3735      315F4952 
 3735      516E00
 3736              	.LASF129:
 3737 0218 54494D5F 		.ascii	"TIM_17_Init\000"
 3737      31375F49 
 3737      6E697400 
 3738              	.LASF73:
 3739 0224 41484245 		.ascii	"AHBENR\000"
 3739      4E5200
 3740              	.LASF20:
 3741 022b 54494D31 		.ascii	"TIM15_IRQn\000"
 3741      355F4952 
 3741      516E00
 3742              	.LASF42:
 3743 0236 75696E74 		.ascii	"uint8_t\000"
 3743      385F7400 
 3744              	.LASF81:
 3745 023e 534D4352 		.ascii	"SMCR\000"
 3745      00
 3746              	.LASF107:
 3747 0243 55706461 		.ascii	"Update_TIM1_CH3\000"
 3747      74655F54 
 3747      494D315F 
 3747      43483300 
 3748              	.LASF39:
 3749 0253 6C6F6E67 		.ascii	"long long int\000"
 3749      206C6F6E 
 3749      6720696E 
 3749      7400
 3750              	.LASF5:
 3751 0261 57574447 		.ascii	"WWDG_IRQn\000"
 3751      5F495251 
 3751      6E00
 3752              	.LASF60:
 3753 026b 53484353 		.ascii	"SHCSR\000"
 3753      5200
 3754              	.LASF120:
 3755 0271 54494D36 		.ascii	"TIM6Enable\000"
ARM GAS  /tmp/ccD5vHri.s 			page 91


 3755      456E6162 
 3755      6C6500
 3756              	.LASF16:
 3757 027c 54494D31 		.ascii	"TIM1_BRK_UP_TRG_COM_IRQn\000"
 3757      5F42524B 
 3757      5F55505F 
 3757      5452475F 
 3757      434F4D5F 
 3758              	.LASF121:
 3759 0295 54494D36 		.ascii	"TIM6Disable\000"
 3759      44697361 
 3759      626C6500 
 3760              	.LASF112:
 3761 02a1 55706461 		.ascii	"Update_TIM14_CH1\000"
 3761      74655F54 
 3761      494D3134 
 3761      5F434831 
 3761      00
 3762              	.LASF136:
 3763 02b2 7372632F 		.ascii	"src/tim.c\000"
 3763      74696D2E 
 3763      6300
 3764              	.LASF78:
 3765 02bc 43464752 		.ascii	"CFGR2\000"
 3765      3200
 3766              	.LASF79:
 3767 02c2 43464752 		.ascii	"CFGR3\000"
 3767      3300
 3768              	.LASF51:
 3769 02c8 49435052 		.ascii	"ICPR\000"
 3769      00
 3770              	.LASF74:
 3771 02cd 41504232 		.ascii	"APB2ENR\000"
 3771      454E5200 
 3772              	.LASF114:
 3773 02d5 77616974 		.ascii	"wait\000"
 3773      00
 3774              	.LASF116:
 3775 02da 54494D5F 		.ascii	"TIM_3_Init\000"
 3775      335F496E 
 3775      697400
 3776              	.LASF115:
 3777 02e5 54494D5F 		.ascii	"TIM_1_Init\000"
 3777      315F496E 
 3777      697400
 3778              	.LASF65:
 3779 02f0 4F535045 		.ascii	"OSPEEDR\000"
 3779      45445200 
 3780              	.LASF123:
 3781 02f8 54494D5F 		.ascii	"TIM_14_Init\000"
 3781      31345F49 
 3781      6E697400 
 3782              	.LASF43:
 3783 0304 75696E74 		.ascii	"uint16_t\000"
 3783      31365F74 
 3783      00
 3784              	.LASF105:
ARM GAS  /tmp/ccD5vHri.s 			page 92


 3785 030d 4952516E 		.ascii	"IRQn\000"
 3785      00
 3786              	.LASF131:
 3787 0312 54494D31 		.ascii	"TIM17Enable\000"
 3787      37456E61 
 3787      626C6500 
 3788              	.LASF6:
 3789 031e 5254435F 		.ascii	"RTC_IRQn\000"
 3789      4952516E 
 3789      00
 3790              	.LASF46:
 3791 0327 52455345 		.ascii	"RESERVED0\000"
 3791      52564544 
 3791      3000
 3792              	.LASF59:
 3793 0331 52455345 		.ascii	"RESERVED1\000"
 3793      52564544 
 3793      3100
 3794              	.LASF50:
 3795 033b 52455345 		.ascii	"RESERVED2\000"
 3795      52564544 
 3795      3200
 3796              	.LASF52:
 3797 0345 52455345 		.ascii	"RESERVED3\000"
 3797      52564544 
 3797      3300
 3798              	.LASF53:
 3799 034f 52455345 		.ascii	"RESERVED4\000"
 3799      52564544 
 3799      3400
 3800              	.LASF83:
 3801 0359 52455345 		.ascii	"RESERVED5\000"
 3801      52564544 
 3801      3500
 3802              	.LASF85:
 3803 0363 52455345 		.ascii	"RESERVED6\000"
 3803      52564544 
 3803      3600
 3804              	.LASF33:
 3805 036d 73686F72 		.ascii	"short int\000"
 3805      7420696E 
 3805      7400
 3806              	.LASF89:
 3807 0377 52455345 		.ascii	"RESERVED8\000"
 3807      52564544 
 3807      3800
 3808              	.LASF36:
 3809 0381 6C6F6E67 		.ascii	"long int\000"
 3809      20696E74 
 3809      00
 3810              	.LASF27:
 3811 038a 55534152 		.ascii	"USART1_IRQn\000"
 3811      54315F49 
 3811      52516E00 
 3812              	.LASF99:
 3813 0396 444D4152 		.ascii	"DMAR\000"
 3813      00
ARM GAS  /tmp/ccD5vHri.s 			page 93


 3814              	.LASF0:
 3815 039b 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 3815      61736B61 
 3815      626C6549 
 3815      6E745F49 
 3815      52516E00 
 3816              	.LASF137:
 3817 03af 2F686F6D 		.ascii	"/home/med/Documents/stm32_proj/emacs_dexel_pfc\000"
 3817      652F6D65 
 3817      642F446F 
 3817      63756D65 
 3817      6E74732F 
 3818              	.LASF106:
 3819 03de 7072696F 		.ascii	"priority\000"
 3819      72697479 
 3819      00
 3820              	.LASF17:
 3821 03e7 54494D31 		.ascii	"TIM1_CC_IRQn\000"
 3821      5F43435F 
 3821      4952516E 
 3821      00
 3822              	.LASF64:
 3823 03f4 4F545950 		.ascii	"OTYPER\000"
 3823      455200
 3824              	.LASF133:
 3825 03fb 77616974 		.ascii	"wait_ms_var\000"
 3825      5F6D735F 
 3825      76617200 
 3826              	.LASF70:
 3827 0407 43464752 		.ascii	"CFGR\000"
 3827      00
 3828              	.LASF22:
 3829 040c 54494D31 		.ascii	"TIM17_IRQn\000"
 3829      375F4952 
 3829      516E00
 3830              	.LASF14:
 3831 0417 444D4131 		.ascii	"DMA1_Channel4_5_IRQn\000"
 3831      5F436861 
 3831      6E6E656C 
 3831      345F355F 
 3831      4952516E 
 3832              	.LASF32:
 3833 042c 5F5F7569 		.ascii	"__uint8_t\000"
 3833      6E74385F 
 3833      7400
 3834              	.LASF55:
 3835 0436 4E564943 		.ascii	"NVIC_Type\000"
 3835      5F547970 
 3835      6500
 3836              	.LASF62:
 3837 0440 5343425F 		.ascii	"SCB_Type\000"
 3837      54797065 
 3837      00
 3838              	.LASF69:
 3839 0449 4750494F 		.ascii	"GPIO_TypeDef\000"
 3839      5F547970 
 3839      65446566 
ARM GAS  /tmp/ccD5vHri.s 			page 94


 3839      00
 3840              	.LASF132:
 3841 0456 54494D31 		.ascii	"TIM17Disable\000"
 3841      37446973 
 3841      61626C65 
 3841      00
 3842              	.LASF4:
 3843 0463 53797354 		.ascii	"SysTick_IRQn\000"
 3843      69636B5F 
 3843      4952516E 
 3843      00
 3844              	.LASF54:
 3845 0470 73697A65 		.ascii	"sizetype\000"
 3845      74797065 
 3845      00
 3846              	.LASF57:
 3847 0479 49435352 		.ascii	"ICSR\000"
 3847      00
 3848              	.LASF24:
 3849 047e 49324332 		.ascii	"I2C2_IRQn\000"
 3849      5F495251 
 3849      6E00
 3850              	.LASF38:
 3851 0488 6C6F6E67 		.ascii	"long unsigned int\000"
 3851      20756E73 
 3851      69676E65 
 3851      6420696E 
 3851      7400
 3852              	.LASF134:
 3853 049a 74696D65 		.ascii	"timer_1000\000"
 3853      725F3130 
 3853      303000
 3854              	.LASF108:
 3855 04a5 55706461 		.ascii	"Update_TIM3_CH1\000"
 3855      74655F54 
 3855      494D335F 
 3855      43483100 
 3856              	.LASF109:
 3857 04b5 55706461 		.ascii	"Update_TIM3_CH2\000"
 3857      74655F54 
 3857      494D335F 
 3857      43483200 
 3858              	.LASF110:
 3859 04c5 55706461 		.ascii	"Update_TIM3_CH3\000"
 3859      74655F54 
 3859      494D335F 
 3859      43483300 
 3860              	.LASF111:
 3861 04d5 55706461 		.ascii	"Update_TIM3_CH4\000"
 3861      74655F54 
 3861      494D335F 
 3861      43483400 
 3862              	.LASF19:
 3863 04e5 54494D31 		.ascii	"TIM14_IRQn\000"
 3863      345F4952 
 3863      516E00
 3864              	.LASF13:
ARM GAS  /tmp/ccD5vHri.s 			page 95


 3865 04f0 444D4131 		.ascii	"DMA1_Channel2_3_IRQn\000"
 3865      5F436861 
 3865      6E6E656C 
 3865      325F335F 
 3865      4952516E 
 3866              	.LASF29:
 3867 0505 756E7369 		.ascii	"unsigned char\000"
 3867      676E6564 
 3867      20636861 
 3867      7200
 3868              	.LASF37:
 3869 0513 5F5F7569 		.ascii	"__uint32_t\000"
 3869      6E743332 
 3869      5F7400
 3870              	.LASF95:
 3871 051e 43435234 		.ascii	"CCR4\000"
 3871      00
 3872              	.LASF90:
 3873 0523 52455345 		.ascii	"RESERVED10\000"
 3873      52564544 
 3873      313000
 3874              	.LASF91:
 3875 052e 52455345 		.ascii	"RESERVED12\000"
 3875      52564544 
 3875      313200
 3876              	.LASF97:
 3877 0539 52455345 		.ascii	"RESERVED17\000"
 3877      52564544 
 3877      313700
 3878              	.LASF98:
 3879 0544 52455345 		.ascii	"RESERVED18\000"
 3879      52564544 
 3879      313800
 3880              	.LASF100:
 3881 054f 52455345 		.ascii	"RESERVED19\000"
 3881      52564544 
 3881      313900
 3882              	.LASF47:
 3883 055a 49434552 		.ascii	"ICER\000"
 3883      00
 3884              	.LASF26:
 3885 055f 53504932 		.ascii	"SPI2_IRQn\000"
 3885      5F495251 
 3885      6E00
 3886              	.LASF125:
 3887 0569 54494D5F 		.ascii	"TIM_16_Init\000"
 3887      31365F49 
 3887      6E697400 
 3888              	.LASF30:
 3889 0575 7369676E 		.ascii	"signed char\000"
 3889      65642063 
 3889      68617200 
 3890              	.LASF35:
 3891 0581 73686F72 		.ascii	"short unsigned int\000"
 3891      7420756E 
 3891      7369676E 
 3891      65642069 
ARM GAS  /tmp/ccD5vHri.s 			page 96


 3891      6E7400
 3892              	.LASF101:
 3893 0594 52455345 		.ascii	"RESERVED20\000"
 3893      52564544 
 3893      323000
 3894              	.LASF135:
 3895 059f 474E5520 		.ascii	"GNU C11 5.2.1 20151202 (release) [ARM/embedded-5-br"
 3895      43313120 
 3895      352E322E 
 3895      31203230 
 3895      31353132 
 3896 05d2 616E6368 		.ascii	"anch revision 231848] -mcpu=cortex-m0 -mthumb -g -g"
 3896      20726576 
 3896      6973696F 
 3896      6E203233 
 3896      31383438 
 3897 0605 64776172 		.ascii	"dwarf-2 -O0 -fomit-frame-pointer -fdata-sections -f"
 3897      662D3220 
 3897      2D4F3020 
 3897      2D666F6D 
 3897      69742D66 
 3898 0638 66756E63 		.ascii	"function-sections\000"
 3898      74696F6E 
 3898      2D736563 
 3898      74696F6E 
 3898      7300
 3899              	.LASF1:
 3900 064a 48617264 		.ascii	"HardFault_IRQn\000"
 3900      4661756C 
 3900      745F4952 
 3900      516E00
 3901              	.LASF49:
 3902 0659 49535052 		.ascii	"ISPR\000"
 3902      00
 3903              	.LASF87:
 3904 065e 52455345 		.ascii	"RESERVED7\000"
 3904      52564544 
 3904      3700
 3905              	.LASF113:
 3906 0668 57616974 		.ascii	"Wait_ms\000"
 3906      5F6D7300 
 3907              	.LASF68:
 3908 0670 4C434B52 		.ascii	"LCKR\000"
 3908      00
 3909              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/ccD5vHri.s 			page 97


DEFINED SYMBOLS
                            *ABS*:00000000 tim.c
     /tmp/ccD5vHri.s:54     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/ccD5vHri.s:58     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/ccD5vHri.s:90     .text.NVIC_EnableIRQ:00000028 $d
     /tmp/ccD5vHri.s:95     .text.NVIC_SetPriority:00000000 $t
     /tmp/ccD5vHri.s:99     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
     /tmp/ccD5vHri.s:239    .text.NVIC_SetPriority:000000e4 $d
     /tmp/ccD5vHri.s:249    .bss.timer_1000:00000000 timer_1000
     /tmp/ccD5vHri.s:246    .bss.timer_1000:00000000 $d
     /tmp/ccD5vHri.s:252    .text.Update_TIM1_CH3:00000000 $t
     /tmp/ccD5vHri.s:257    .text.Update_TIM1_CH3:00000000 Update_TIM1_CH3
     /tmp/ccD5vHri.s:283    .text.Update_TIM1_CH3:0000001c $d
     /tmp/ccD5vHri.s:288    .text.Update_TIM3_CH1:00000000 $t
     /tmp/ccD5vHri.s:293    .text.Update_TIM3_CH1:00000000 Update_TIM3_CH1
     /tmp/ccD5vHri.s:318    .text.Update_TIM3_CH1:0000001c $d
     /tmp/ccD5vHri.s:323    .text.Update_TIM3_CH2:00000000 $t
     /tmp/ccD5vHri.s:328    .text.Update_TIM3_CH2:00000000 Update_TIM3_CH2
     /tmp/ccD5vHri.s:353    .text.Update_TIM3_CH2:0000001c $d
     /tmp/ccD5vHri.s:358    .text.Update_TIM3_CH3:00000000 $t
     /tmp/ccD5vHri.s:363    .text.Update_TIM3_CH3:00000000 Update_TIM3_CH3
     /tmp/ccD5vHri.s:388    .text.Update_TIM3_CH3:0000001c $d
     /tmp/ccD5vHri.s:393    .text.Update_TIM3_CH4:00000000 $t
     /tmp/ccD5vHri.s:398    .text.Update_TIM3_CH4:00000000 Update_TIM3_CH4
     /tmp/ccD5vHri.s:423    .text.Update_TIM3_CH4:0000001c $d
     /tmp/ccD5vHri.s:428    .text.Update_TIM14_CH1:00000000 $t
     /tmp/ccD5vHri.s:433    .text.Update_TIM14_CH1:00000000 Update_TIM14_CH1
     /tmp/ccD5vHri.s:458    .text.Update_TIM14_CH1:0000001c $d
     /tmp/ccD5vHri.s:463    .text.Wait_ms:00000000 $t
     /tmp/ccD5vHri.s:468    .text.Wait_ms:00000000 Wait_ms
     /tmp/ccD5vHri.s:502    .text.Wait_ms:00000028 $d
     /tmp/ccD5vHri.s:507    .text.TIM_1_Init:00000000 $t
     /tmp/ccD5vHri.s:512    .text.TIM_1_Init:00000000 TIM_1_Init
     /tmp/ccD5vHri.s:635    .text.TIM_1_Init:000000bc $d
     /tmp/ccD5vHri.s:643    .text.TIM_3_Init:00000000 $t
     /tmp/ccD5vHri.s:648    .text.TIM_3_Init:00000000 TIM_3_Init
     /tmp/ccD5vHri.s:757    .text.TIM_3_Init:000000a0 $d
     /tmp/ccD5vHri.s:764    .text.TIM3_IRQHandler:00000000 $t
     /tmp/ccD5vHri.s:769    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
     /tmp/ccD5vHri.s:793    .text.TIM3_IRQHandler:00000018 $d
     /tmp/ccD5vHri.s:798    .text.TIM_6_Init:00000000 $t
     /tmp/ccD5vHri.s:803    .text.TIM_6_Init:00000000 TIM_6_Init
     /tmp/ccD5vHri.s:840    .text.TIM_6_Init:0000002c $d
     /tmp/ccD5vHri.s:847    .text.TIM6Enable:00000000 $t
     /tmp/ccD5vHri.s:852    .text.TIM6Enable:00000000 TIM6Enable
     /tmp/ccD5vHri.s:872    .text.TIM6Enable:00000014 $d
     /tmp/ccD5vHri.s:877    .text.TIM6Disable:00000000 $t
     /tmp/ccD5vHri.s:882    .text.TIM6Disable:00000000 TIM6Disable
     /tmp/ccD5vHri.s:902    .text.TIM6Disable:00000014 $d
     /tmp/ccD5vHri.s:907    .text.TIM14_IRQHandler:00000000 $t
     /tmp/ccD5vHri.s:912    .text.TIM14_IRQHandler:00000000 TIM14_IRQHandler
     /tmp/ccD5vHri.s:936    .text.TIM14_IRQHandler:00000018 $d
     /tmp/ccD5vHri.s:941    .text.TIM_14_Init:00000000 $t
     /tmp/ccD5vHri.s:946    .text.TIM_14_Init:00000000 TIM_14_Init
     /tmp/ccD5vHri.s:1029   .text.TIM_14_Init:00000078 $d
     /tmp/ccD5vHri.s:1037   .text.TIM16_IRQHandler:00000000 $t
     /tmp/ccD5vHri.s:1042   .text.TIM16_IRQHandler:00000000 TIM16_IRQHandler
ARM GAS  /tmp/ccD5vHri.s 			page 98


     /tmp/ccD5vHri.s:1066   .text.TIM16_IRQHandler:00000018 $d
     /tmp/ccD5vHri.s:1071   .text.TIM_16_Init:00000000 $t
     /tmp/ccD5vHri.s:1076   .text.TIM_16_Init:00000000 TIM_16_Init
     /tmp/ccD5vHri.s:1123   .text.TIM_16_Init:0000003c $d
     /tmp/ccD5vHri.s:1130   .text.OneShootTIM16:00000000 $t
     /tmp/ccD5vHri.s:1135   .text.OneShootTIM16:00000000 OneShootTIM16
     /tmp/ccD5vHri.s:1169   .text.OneShootTIM16:0000002c $d
     /tmp/ccD5vHri.s:1174   .text.TIM16Enable:00000000 $t
     /tmp/ccD5vHri.s:1179   .text.TIM16Enable:00000000 TIM16Enable
     /tmp/ccD5vHri.s:1199   .text.TIM16Enable:00000014 $d
     /tmp/ccD5vHri.s:1204   .text.TIM16Disable:00000000 $t
     /tmp/ccD5vHri.s:1209   .text.TIM16Disable:00000000 TIM16Disable
     /tmp/ccD5vHri.s:1229   .text.TIM16Disable:00000014 $d
     /tmp/ccD5vHri.s:1234   .text.TIM_17_Init:00000000 $t
     /tmp/ccD5vHri.s:1239   .text.TIM_17_Init:00000000 TIM_17_Init
     /tmp/ccD5vHri.s:1308   .text.TIM_17_Init:00000060 $d
     /tmp/ccD5vHri.s:1315   .text.TIM17_IRQHandler:00000000 $t
     /tmp/ccD5vHri.s:1320   .text.TIM17_IRQHandler:00000000 TIM17_IRQHandler
     /tmp/ccD5vHri.s:1344   .text.TIM17_IRQHandler:00000018 $d
     /tmp/ccD5vHri.s:1349   .text.TIM17Enable:00000000 $t
     /tmp/ccD5vHri.s:1354   .text.TIM17Enable:00000000 TIM17Enable
     /tmp/ccD5vHri.s:1374   .text.TIM17Enable:00000014 $d
     /tmp/ccD5vHri.s:1379   .text.TIM17Disable:00000000 $t
     /tmp/ccD5vHri.s:1384   .text.TIM17Disable:00000000 TIM17Disable
     /tmp/ccD5vHri.s:1404   .text.TIM17Disable:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
wait_ms_var
