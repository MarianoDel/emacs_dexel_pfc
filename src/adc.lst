ARM GAS  /tmp/cc5xKR5V.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"adc.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.2.1 20151202 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./src -I ./cmsis_boot -I ./cmsis_core
  18              	@ -imultilib armv6-m
  19              	@ -iprefix /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/
  20              	@ -isysroot /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../arm-none-eabi
  21              	@ -D__USES_INITFINI__ -D STM32F030 src/adc.c -mcpu=cortex-m0 -mthumb
  22              	@ -auxbase-strip src/adc.o -g -gdwarf-2 -O0 -Wall -fomit-frame-pointer
  23              	@ -fdata-sections -ffunction-sections -fverbose-asm
  24              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  25              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  26              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  27              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  28              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  29              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  30              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  31              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  32              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  33              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  34              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  35              	@ -fmerge-debug-strings -fomit-frame-pointer -fpeephole
  36              	@ -fprefetch-loop-arrays -freg-struct-return
  37              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  38              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  39              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  40              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  41              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstdarg-opt
  42              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
  43              	@ -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  44              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  45              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  46              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  47              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  48              	@ -mvectorize-with-neon-quad
  49              	
  50              		.text
  51              	.Ltext0:
  52              		.cfi_sections	.debug_frame
  53              		.section	.text.AdcConfig,"ax",%progbits
  54              		.align	2
  55              		.global	AdcConfig
  56              		.code	16
  57              		.thumb_func
ARM GAS  /tmp/cc5xKR5V.s 			page 2


  58              		.type	AdcConfig, %function
  59              	AdcConfig:
  60              	.LFB20:
  61              		.file 1 "src/adc.c"
   1:src/adc.c     **** //---------------------------------------------
   2:src/adc.c     **** // ##
   3:src/adc.c     **** // ## @Author: Med
   4:src/adc.c     **** // ## @Editor: Emacs - ggtags
   5:src/adc.c     **** // ## @TAGS:   Global
   6:src/adc.c     **** // ## @CPU:    STM32F030
   7:src/adc.c     **** // ##
   8:src/adc.c     **** // #### ADC.C #################################
   9:src/adc.c     **** //---------------------------------------------
  10:src/adc.c     **** 
  11:src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  12:src/adc.c     **** #include "adc.h"
  13:src/adc.c     **** #include "stm32f0xx.h"
  14:src/adc.c     **** #include "hard.h"
  15:src/adc.c     **** 
  16:src/adc.c     **** 
  17:src/adc.c     **** /* Externals ------------------------------------------------------------------*/
  18:src/adc.c     **** extern volatile unsigned short adc_ch [];
  19:src/adc.c     **** 
  20:src/adc.c     **** 
  21:src/adc.c     **** #ifdef ADC_WITH_INT
  22:src/adc.c     **** extern volatile unsigned char seq_ready;
  23:src/adc.c     **** #endif
  24:src/adc.c     **** 
  25:src/adc.c     **** #ifdef ADC_WITH_TEMP_SENSE
  26:src/adc.c     **** extern volatile unsigned short tt_take_temp_sample;
  27:src/adc.c     **** #endif
  28:src/adc.c     **** 
  29:src/adc.c     **** /* Globals ------------------------------------------------------------------*/
  30:src/adc.c     **** #ifdef ADC_WITH_INT
  31:src/adc.c     **** volatile unsigned short * p_channel;
  32:src/adc.c     **** #endif
  33:src/adc.c     **** 
  34:src/adc.c     **** #ifdef ADC_WITH_TEMP_SENSE
  35:src/adc.c     **** // ------- del sensor de Temperatura -------
  36:src/adc.c     **** unsigned short board_temp [SIZEOF_BOARD_TEMP];
  37:src/adc.c     **** unsigned short last_temp = 0;
  38:src/adc.c     **** unsigned char board_temp_index = 0;
  39:src/adc.c     **** unsigned char new_temp_sample = 0;
  40:src/adc.c     **** #endif
  41:src/adc.c     **** 
  42:src/adc.c     **** 
  43:src/adc.c     **** /* Module Functions -----------------------------------------------------------*/
  44:src/adc.c     **** //Single conversion mode (CONT=0)
  45:src/adc.c     **** //In Single conversion mode, the ADC performs a single sequence of conversions,
  46:src/adc.c     **** //converting all the channels once.
  47:src/adc.c     **** 
  48:src/adc.c     **** //Continuous conversion mode (CONT=1)
  49:src/adc.c     **** //In continuous conversion mode, when a software or hardware trigger event occurs,
  50:src/adc.c     **** //the ADC performs a sequence of conversions, converting all the channels once and then
  51:src/adc.c     **** //automatically re-starts and continuously performs the same sequence of conversions
  52:src/adc.c     **** 
  53:src/adc.c     **** //Discontinuous mode (DISCEN)
ARM GAS  /tmp/cc5xKR5V.s 			page 3


  54:src/adc.c     **** //In this mode (DISCEN=1), a hardware or software trigger event is required to start
  55:src/adc.c     **** //each conversion defined in the sequence. Only with (CONT=0)
  56:src/adc.c     **** 
  57:src/adc.c     **** void AdcConfig (void)
  58:src/adc.c     **** {
  62              		.loc 1 58 0
  63              		.cfi_startproc
  64 0000 10B5     		push	{r4, lr}	@
  65              	.LCFI0:
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  59:src/adc.c     ****     if (!RCC_ADC_CLK)
  69              		.loc 1 59 0
  70 0002 244B     		ldr	r3, .L3	@ D.4925,
  71 0004 9A69     		ldr	r2, [r3, #24]	@ D.4926, _2->APB2ENR
  72 0006 8023     		movs	r3, #128	@ tmp163,
  73 0008 9B00     		lsls	r3, r3, #2	@ tmp145, tmp163,
  74 000a 1340     		ands	r3, r2	@ D.4926, D.4926
  75 000c 06D1     		bne	.L2	@,
  60:src/adc.c     ****         RCC_ADC_CLK_ON;
  76              		.loc 1 60 0
  77 000e 214B     		ldr	r3, .L3	@ D.4925,
  78 0010 204A     		ldr	r2, .L3	@ D.4925,
  79 0012 9269     		ldr	r2, [r2, #24]	@ D.4926, _7->APB2ENR
  80 0014 8021     		movs	r1, #128	@ tmp162,
  81 0016 8900     		lsls	r1, r1, #2	@ tmp146, tmp162,
  82 0018 0A43     		orrs	r2, r1	@ D.4926, tmp146
  83 001a 9A61     		str	r2, [r3, #24]	@ D.4926, _6->APB2ENR
  84              	.L2:
  61:src/adc.c     **** 
  62:src/adc.c     ****     // preseteo los registros a default, la mayoria necesita tener ADC apagado
  63:src/adc.c     ****     ADC1->CR = 0x00000000;
  85              		.loc 1 63 0
  86 001c 1E4B     		ldr	r3, .L3+4	@ D.4927,
  87 001e 0022     		movs	r2, #0	@ tmp147,
  88 0020 9A60     		str	r2, [r3, #8]	@ tmp147, _11->CR
  64:src/adc.c     ****     ADC1->IER = 0x00000000;
  89              		.loc 1 64 0
  90 0022 1D4B     		ldr	r3, .L3+4	@ D.4927,
  91 0024 0022     		movs	r2, #0	@ tmp148,
  92 0026 5A60     		str	r2, [r3, #4]	@ tmp148, _13->IER
  65:src/adc.c     ****     ADC1->CFGR1 = 0x00000000;
  93              		.loc 1 65 0
  94 0028 1B4B     		ldr	r3, .L3+4	@ D.4927,
  95 002a 0022     		movs	r2, #0	@ tmp149,
  96 002c DA60     		str	r2, [r3, #12]	@ tmp149, _15->CFGR1
  66:src/adc.c     ****     ADC1->CFGR2 = 0x00000000;
  97              		.loc 1 66 0
  98 002e 1A4B     		ldr	r3, .L3+4	@ D.4927,
  99 0030 0022     		movs	r2, #0	@ tmp150,
 100 0032 1A61     		str	r2, [r3, #16]	@ tmp150, _17->CFGR2
  67:src/adc.c     ****     ADC1->SMPR = 0x00000000;
 101              		.loc 1 67 0
 102 0034 184B     		ldr	r3, .L3+4	@ D.4927,
 103 0036 0022     		movs	r2, #0	@ tmp151,
 104 0038 5A61     		str	r2, [r3, #20]	@ tmp151, _19->SMPR
ARM GAS  /tmp/cc5xKR5V.s 			page 4


  68:src/adc.c     ****     ADC1->TR = 0x0FFF0000;
 105              		.loc 1 68 0
 106 003a 174B     		ldr	r3, .L3+4	@ D.4927,
 107 003c 174A     		ldr	r2, .L3+8	@ tmp152,
 108 003e 1A62     		str	r2, [r3, #32]	@ tmp152, _21->TR
  69:src/adc.c     ****     ADC1->CHSELR = 0x00000000;
 109              		.loc 1 69 0
 110 0040 154B     		ldr	r3, .L3+4	@ D.4927,
 111 0042 0022     		movs	r2, #0	@ tmp153,
 112 0044 9A62     		str	r2, [r3, #40]	@ tmp153, _23->CHSELR
  70:src/adc.c     **** 
  71:src/adc.c     ****     //set clock
  72:src/adc.c     ****     ADC1->CFGR2 = ADC_ClockMode_SynClkDiv4;
 113              		.loc 1 72 0
 114 0046 144B     		ldr	r3, .L3+4	@ D.4927,
 115 0048 8022     		movs	r2, #128	@ tmp160,
 116 004a 1206     		lsls	r2, r2, #24	@ tmp154, tmp160,
 117 004c 1A61     		str	r2, [r3, #16]	@ tmp154, _25->CFGR2
  73:src/adc.c     **** 
  74:src/adc.c     ****     //set resolution, trigger & Continuos or Discontinuous
  75:src/adc.c     ****     ADC1->CFGR1 |= ADC_Resolution_10b | ADC_ExternalTrigConvEdge_Rising | ADC_ExternalTrigConv_T3_T
 118              		.loc 1 75 0
 119 004e 124B     		ldr	r3, .L3+4	@ D.4927,
 120 0050 114A     		ldr	r2, .L3+4	@ D.4927,
 121 0052 D268     		ldr	r2, [r2, #12]	@ D.4926, _28->CFGR1
 122 0054 9921     		movs	r1, #153	@ tmp161,
 123 0056 C900     		lsls	r1, r1, #3	@ tmp155, tmp161,
 124 0058 0A43     		orrs	r2, r1	@ D.4926, tmp155
 125 005a DA60     		str	r2, [r3, #12]	@ D.4926, _27->CFGR1
  76:src/adc.c     ****     // ADC1->CFGR1 |= ADC_Resolution_10b | ADC_ExternalTrigConvEdge_Rising | ADC_ExternalTrigConv_T
  77:src/adc.c     ****     //ADC1->CFGR1 |= ADC_Resolution_12b | ADC_CFGR1_DISCEN;
  78:src/adc.c     ****     // ADC1->CFGR1 |= ADC_Resolution_12b;
  79:src/adc.c     **** 
  80:src/adc.c     ****     //set sampling time
  81:src/adc.c     ****     ADC1->SMPR |= ADC_SampleTime_71_5Cycles;
 126              		.loc 1 81 0
 127 005c 0E4B     		ldr	r3, .L3+4	@ D.4927,
 128 005e 0E4A     		ldr	r2, .L3+4	@ D.4927,
 129 0060 5269     		ldr	r2, [r2, #20]	@ D.4926, _33->SMPR
 130 0062 0621     		movs	r1, #6	@ tmp156,
 131 0064 0A43     		orrs	r2, r1	@ D.4926, tmp156
 132 0066 5A61     		str	r2, [r3, #20]	@ D.4926, _32->SMPR
  82:src/adc.c     ****     // ADC1->SMPR |= ADC_SampleTime_41_5Cycles;		//17.39 son SP 420    
  83:src/adc.c     ****     // ADC1->SMPR |= ADC_SampleTime_28_5Cycles;		//17.39 son SP 420
  84:src/adc.c     ****     //ADC1->SMPR |= ADC_SampleTime_7_5Cycles;		//17.36 de salida son SP 420 pero a veces pega
  85:src/adc.c     ****     //las dos int (usar DMA?) y pierde el valor intermedio
  86:src/adc.c     ****     //ADC1->SMPR |= ADC_SampleTime_1_5Cycles;			//20.7 de salida son SP 420 (regula mal)
  87:src/adc.c     **** 
  88:src/adc.c     ****     //set channel selection
  89:src/adc.c     ****     ADC1->CHSELR |= ADC_Channel_0 | ADC_Channel_1 |
 133              		.loc 1 89 0
 134 0068 0B4B     		ldr	r3, .L3+4	@ D.4927,
 135 006a 0B4A     		ldr	r2, .L3+4	@ D.4927,
 136 006c 926A     		ldr	r2, [r2, #40]	@ D.4926, _38->CHSELR
 137 006e 1F21     		movs	r1, #31	@ tmp157,
 138 0070 0A43     		orrs	r2, r1	@ D.4926, tmp157
 139 0072 9A62     		str	r2, [r3, #40]	@ D.4926, _37->CHSELR
ARM GAS  /tmp/cc5xKR5V.s 			page 5


  90:src/adc.c     ****         ADC_Channel_2 | ADC_Channel_3 | ADC_Channel_4;
  91:src/adc.c     ****     
  92:src/adc.c     **** #ifdef ADC_WITH_INT        
  93:src/adc.c     ****     //set interrupts
  94:src/adc.c     ****     ADC1->IER |= ADC_IT_EOC;
  95:src/adc.c     **** 
  96:src/adc.c     ****     //set pointer
  97:src/adc.c     ****     p_channel = &adc_ch[0];
  98:src/adc.c     **** 
  99:src/adc.c     ****     NVIC_EnableIRQ(ADC1_IRQn);
 100:src/adc.c     ****     NVIC_SetPriority(ADC1_IRQn, 3);
 101:src/adc.c     **** #endif
 102:src/adc.c     **** 
 103:src/adc.c     **** #ifdef ADC_WITH_TEMP_SENSE
 104:src/adc.c     ****     ADC->CCR |= ADC_CCR_TSEN;
 105:src/adc.c     **** #endif
 106:src/adc.c     **** 
 107:src/adc.c     ****     //calibrar ADC
 108:src/adc.c     ****     ADCGetCalibrationFactor();
 140              		.loc 1 108 0
 141 0074 FFF7FEFF 		bl	ADCGetCalibrationFactor	@
 109:src/adc.c     **** 
 110:src/adc.c     **** #ifdef ADC_WITH_DMA
 111:src/adc.c     ****     ADC1->CFGR1 |= ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG;
 142              		.loc 1 111 0
 143 0078 074B     		ldr	r3, .L3+4	@ D.4927,
 144 007a 074A     		ldr	r2, .L3+4	@ D.4927,
 145 007c D268     		ldr	r2, [r2, #12]	@ D.4926, _44->CFGR1
 146 007e 0321     		movs	r1, #3	@ tmp158,
 147 0080 0A43     		orrs	r2, r1	@ D.4926, tmp158
 148 0082 DA60     		str	r2, [r3, #12]	@ D.4926, _43->CFGR1
 112:src/adc.c     **** #endif
 113:src/adc.c     ****     
 114:src/adc.c     ****     // Enable ADC1
 115:src/adc.c     ****     ADC1->CR |= ADC_CR_ADEN;
 149              		.loc 1 115 0
 150 0084 044B     		ldr	r3, .L3+4	@ D.4927,
 151 0086 044A     		ldr	r2, .L3+4	@ D.4927,
 152 0088 9268     		ldr	r2, [r2, #8]	@ D.4926, _49->CR
 153 008a 0121     		movs	r1, #1	@ tmp159,
 154 008c 0A43     		orrs	r2, r1	@ D.4926, tmp159
 155 008e 9A60     		str	r2, [r3, #8]	@ D.4926, _48->CR
 116:src/adc.c     **** }
 156              		.loc 1 116 0
 157 0090 C046     		nop
 158              		@ sp needed	@
 159 0092 10BD     		pop	{r4, pc}
 160              	.L4:
 161              		.align	2
 162              	.L3:
 163 0094 00100240 		.word	1073876992
 164 0098 00240140 		.word	1073816576
 165 009c 0000FF0F 		.word	268369920
 166              		.cfi_endproc
 167              	.LFE20:
 168              		.size	AdcConfig, .-AdcConfig
 169              		.section	.text.SetADC1_SampleTime,"ax",%progbits
ARM GAS  /tmp/cc5xKR5V.s 			page 6


 170              		.align	2
 171              		.global	SetADC1_SampleTime
 172              		.code	16
 173              		.thumb_func
 174              		.type	SetADC1_SampleTime, %function
 175              	SetADC1_SampleTime:
 176              	.LFB21:
 117:src/adc.c     **** 
 118:src/adc.c     **** #ifdef ADC_WITH_INT
 119:src/adc.c     **** void ADC1_COMP_IRQHandler (void)
 120:src/adc.c     **** {
 121:src/adc.c     ****     if (ADC1->ISR & ADC_IT_EOC)
 122:src/adc.c     ****     {
 123:src/adc.c     ****         if (ADC1->ISR & ADC_IT_EOSEQ)	//seguro que es channel4 en posicion 3 en ver_1_1, 3 y 2 en v
 124:src/adc.c     ****         {
 125:src/adc.c     ****             p_channel = &adc_ch[ADC_LAST_CHANNEL_QUANTITY];
 126:src/adc.c     ****             *p_channel = ADC1->DR;
 127:src/adc.c     ****             p_channel = &adc_ch[0];
 128:src/adc.c     ****             seq_ready = 1;
 129:src/adc.c     ****         }
 130:src/adc.c     ****         else
 131:src/adc.c     ****         {
 132:src/adc.c     ****             *p_channel = ADC1->DR;		//
 133:src/adc.c     ****             if (p_channel < &adc_ch[ADC_LAST_CHANNEL_QUANTITY])
 134:src/adc.c     ****                 p_channel++;
 135:src/adc.c     ****         }
 136:src/adc.c     ****         //clear pending
 137:src/adc.c     ****         ADC1->ISR |= ADC_IT_EOC | ADC_IT_EOSEQ;
 138:src/adc.c     ****     }
 139:src/adc.c     **** }
 140:src/adc.c     **** #endif
 141:src/adc.c     **** 
 142:src/adc.c     **** 
 143:src/adc.c     **** //Setea el sample time en el ADC
 144:src/adc.c     **** void SetADC1_SampleTime (void)
 145:src/adc.c     **** {
 177              		.loc 1 145 0
 178              		.cfi_startproc
 179 0000 82B0     		sub	sp, sp, #8	@,,
 180              	.LCFI1:
 181              		.cfi_def_cfa_offset 8
 146:src/adc.c     ****     uint32_t tmpreg = 0;
 182              		.loc 1 146 0
 183 0002 0023     		movs	r3, #0	@ tmp111,
 184 0004 0193     		str	r3, [sp, #4]	@ tmp111, tmpreg
 147:src/adc.c     **** 
 148:src/adc.c     ****     /* Clear the Sampling time Selection bits */
 149:src/adc.c     ****     tmpreg &= ~ADC_SMPR1_SMPR;
 185              		.loc 1 149 0
 186 0006 019B     		ldr	r3, [sp, #4]	@ tmp113, tmpreg
 187 0008 0722     		movs	r2, #7	@ tmp114,
 188 000a 9343     		bics	r3, r2	@ tmp112, tmp114
 189 000c 0193     		str	r3, [sp, #4]	@ tmp112, tmpreg
 150:src/adc.c     **** 
 151:src/adc.c     ****     /* Set the ADC Sampling Time register */
 152:src/adc.c     ****     tmpreg |= (uint32_t)ADC_SampleTime_239_5Cycles;
 190              		.loc 1 152 0
ARM GAS  /tmp/cc5xKR5V.s 			page 7


 191 000e 019B     		ldr	r3, [sp, #4]	@ tmp116, tmpreg
 192 0010 0722     		movs	r2, #7	@ tmp117,
 193 0012 1343     		orrs	r3, r2	@ tmp115, tmp117
 194 0014 0193     		str	r3, [sp, #4]	@ tmp115, tmpreg
 153:src/adc.c     **** 
 154:src/adc.c     ****     /* Configure the ADC Sample time register */
 155:src/adc.c     ****     ADC1->SMPR = tmpreg ;
 195              		.loc 1 155 0
 196 0016 034B     		ldr	r3, .L6	@ D.4928,
 197 0018 019A     		ldr	r2, [sp, #4]	@ tmp118, tmpreg
 198 001a 5A61     		str	r2, [r3, #20]	@ tmp118, _4->SMPR
 156:src/adc.c     **** }
 199              		.loc 1 156 0
 200 001c C046     		nop
 201 001e 02B0     		add	sp, sp, #8	@,,
 202              		@ sp needed	@
 203 0020 7047     		bx	lr
 204              	.L7:
 205 0022 C046     		.align	2
 206              	.L6:
 207 0024 00240140 		.word	1073816576
 208              		.cfi_endproc
 209              	.LFE21:
 210              		.size	SetADC1_SampleTime, .-SetADC1_SampleTime
 211              		.section	.text.ReadADC1_SameSampleTime,"ax",%progbits
 212              		.align	2
 213              		.global	ReadADC1_SameSampleTime
 214              		.code	16
 215              		.thumb_func
 216              		.type	ReadADC1_SameSampleTime, %function
 217              	ReadADC1_SameSampleTime:
 218              	.LFB22:
 157:src/adc.c     **** 
 158:src/adc.c     **** 
 159:src/adc.c     **** //lee el ADC sin cambiar el sample time anterior
 160:src/adc.c     **** unsigned short ReadADC1_SameSampleTime (unsigned int channel)
 161:src/adc.c     **** {
 219              		.loc 1 161 0
 220              		.cfi_startproc
 221 0000 82B0     		sub	sp, sp, #8	@,,
 222              	.LCFI2:
 223              		.cfi_def_cfa_offset 8
 224 0002 0190     		str	r0, [sp, #4]	@ channel, channel
 162:src/adc.c     ****     // Configure the ADC Channel
 163:src/adc.c     ****     ADC1->CHSELR = channel;
 225              		.loc 1 163 0
 226 0004 0A4B     		ldr	r3, .L11	@ D.4929,
 227 0006 019A     		ldr	r2, [sp, #4]	@ tmp122, channel
 228 0008 9A62     		str	r2, [r3, #40]	@ tmp122, _1->CHSELR
 164:src/adc.c     **** 
 165:src/adc.c     ****     // Start the conversion
 166:src/adc.c     ****     ADC1->CR |= (uint32_t)ADC_CR_ADSTART;
 229              		.loc 1 166 0
 230 000a 094B     		ldr	r3, .L11	@ D.4929,
 231 000c 084A     		ldr	r2, .L11	@ D.4929,
 232 000e 9268     		ldr	r2, [r2, #8]	@ D.4930, _6->CR
 233 0010 0421     		movs	r1, #4	@ tmp123,
ARM GAS  /tmp/cc5xKR5V.s 			page 8


 234 0012 0A43     		orrs	r2, r1	@ D.4930, tmp123
 235 0014 9A60     		str	r2, [r3, #8]	@ D.4930, _5->CR
 167:src/adc.c     **** 
 168:src/adc.c     ****     // Wait until conversion completion
 169:src/adc.c     ****     while((ADC1->ISR & ADC_ISR_EOC) == 0);
 236              		.loc 1 169 0
 237 0016 C046     		nop
 238              	.L9:
 239              		.loc 1 169 0 is_stmt 0 discriminator 1
 240 0018 054B     		ldr	r3, .L11	@ D.4929,
 241 001a 1B68     		ldr	r3, [r3]	@ D.4930, _10->ISR
 242 001c 0422     		movs	r2, #4	@ tmp124,
 243 001e 1340     		ands	r3, r2	@ D.4930, tmp124
 244 0020 FAD0     		beq	.L9	@,
 170:src/adc.c     **** 
 171:src/adc.c     ****     // Get the conversion value
 172:src/adc.c     ****     return (uint16_t) ADC1->DR;
 245              		.loc 1 172 0 is_stmt 1
 246 0022 034B     		ldr	r3, .L11	@ D.4929,
 247 0024 1B6C     		ldr	r3, [r3, #64]	@ D.4930, _13->DR
 248 0026 9BB2     		uxth	r3, r3	@ D.4931, D.4930
 173:src/adc.c     **** }
 249              		.loc 1 173 0
 250 0028 1800     		movs	r0, r3	@, <retval>
 251 002a 02B0     		add	sp, sp, #8	@,,
 252              		@ sp needed	@
 253 002c 7047     		bx	lr
 254              	.L12:
 255 002e C046     		.align	2
 256              	.L11:
 257 0030 00240140 		.word	1073816576
 258              		.cfi_endproc
 259              	.LFE22:
 260              		.size	ReadADC1_SameSampleTime, .-ReadADC1_SameSampleTime
 261              		.section	.text.ReadADC1Check,"ax",%progbits
 262              		.align	2
 263              		.global	ReadADC1Check
 264              		.code	16
 265              		.thumb_func
 266              		.type	ReadADC1Check, %function
 267              	ReadADC1Check:
 268              	.LFB23:
 174:src/adc.c     **** 
 175:src/adc.c     **** unsigned short ReadADC1Check (unsigned char channel)
 176:src/adc.c     **** {
 269              		.loc 1 176 0
 270              		.cfi_startproc
 271 0000 82B0     		sub	sp, sp, #8	@,,
 272              	.LCFI3:
 273              		.cfi_def_cfa_offset 8
 274 0002 0200     		movs	r2, r0	@ tmp137, channel
 275 0004 6B46     		mov	r3, sp	@ tmp153,
 276 0006 0733     		adds	r3, r3, #7	@ tmp138,
 277 0008 1A70     		strb	r2, [r3]	@ tmp139, channel
 177:src/adc.c     ****     if (ADC1->CR & 0x01)			//reviso ADEN
 278              		.loc 1 177 0
 279 000a 204B     		ldr	r3, .L25	@ D.4933,
ARM GAS  /tmp/cc5xKR5V.s 			page 9


 280 000c 9B68     		ldr	r3, [r3, #8]	@ D.4934, _3->CR
 281 000e 0122     		movs	r2, #1	@ tmp140,
 282 0010 1340     		ands	r3, r2	@ D.4934, tmp140
 283 0012 01D0     		beq	.L23	@,
 178:src/adc.c     ****         return 0xFFFF;
 284              		.loc 1 178 0
 285 0014 1E4B     		ldr	r3, .L25+4	@ D.4932,
 286 0016 35E0     		b	.L15	@
 287              	.L23:
 179:src/adc.c     **** 
 180:src/adc.c     ****     //espero que este listo para convertir
 181:src/adc.c     ****     while ((ADC1->ISR & 0x01) == 0);	//espero ARDY = 1
 288              		.loc 1 181 0
 289 0018 C046     		nop
 290              	.L16:
 291              		.loc 1 181 0 is_stmt 0 discriminator 1
 292 001a 1C4B     		ldr	r3, .L25	@ D.4933,
 293 001c 1B68     		ldr	r3, [r3]	@ D.4934, _8->ISR
 294 001e 0122     		movs	r2, #1	@ tmp141,
 295 0020 1340     		ands	r3, r2	@ D.4934, tmp141
 296 0022 FAD0     		beq	.L16	@,
 182:src/adc.c     **** 
 183:src/adc.c     ****     if ((ADC1->CFGR1 & 0x00010000) == 0)			//reviso DISCONTINUOS = 1
 297              		.loc 1 183 0 is_stmt 1
 298 0024 194B     		ldr	r3, .L25	@ D.4933,
 299 0026 DA68     		ldr	r2, [r3, #12]	@ D.4934, _11->CFGR1
 300 0028 8023     		movs	r3, #128	@ tmp152,
 301 002a 5B02     		lsls	r3, r3, #9	@ tmp142, tmp152,
 302 002c 1340     		ands	r3, r2	@ D.4934, D.4934
 303 002e 01D1     		bne	.L17	@,
 184:src/adc.c     ****         return 0xFFFF;
 304              		.loc 1 184 0
 305 0030 174B     		ldr	r3, .L25+4	@ D.4932,
 306 0032 27E0     		b	.L15	@
 307              	.L17:
 185:src/adc.c     **** 
 186:src/adc.c     ****     if (ADC1->CFGR1 & 0x00002000)					//reviso CONT = 0
 308              		.loc 1 186 0
 309 0034 154B     		ldr	r3, .L25	@ D.4933,
 310 0036 DA68     		ldr	r2, [r3, #12]	@ D.4934, _15->CFGR1
 311 0038 8023     		movs	r3, #128	@ tmp151,
 312 003a 9B01     		lsls	r3, r3, #6	@ tmp143, tmp151,
 313 003c 1340     		ands	r3, r2	@ D.4934, D.4934
 314 003e 01D0     		beq	.L18	@,
 187:src/adc.c     ****         return 0xFFFF;
 315              		.loc 1 187 0
 316 0040 134B     		ldr	r3, .L25+4	@ D.4932,
 317 0042 1FE0     		b	.L15	@
 318              	.L18:
 188:src/adc.c     **** 
 189:src/adc.c     ****     if (ADC1->CFGR1 & 0x00000C00)					//reviso TRIGGER = 00
 319              		.loc 1 189 0
 320 0044 114B     		ldr	r3, .L25	@ D.4933,
 321 0046 DA68     		ldr	r2, [r3, #12]	@ D.4934, _19->CFGR1
 322 0048 C023     		movs	r3, #192	@ tmp150,
 323 004a 1B01     		lsls	r3, r3, #4	@ tmp144, tmp150,
 324 004c 1340     		ands	r3, r2	@ D.4934, D.4934
ARM GAS  /tmp/cc5xKR5V.s 			page 10


 325 004e 01D0     		beq	.L19	@,
 190:src/adc.c     ****         return 0xFFFF;
 326              		.loc 1 190 0
 327 0050 0F4B     		ldr	r3, .L25+4	@ D.4932,
 328 0052 17E0     		b	.L15	@
 329              	.L19:
 191:src/adc.c     **** 
 192:src/adc.c     ****     if (ADC1->CFGR1 & 0x00000020)					//reviso ALIGN = 0
 330              		.loc 1 192 0
 331 0054 0D4B     		ldr	r3, .L25	@ D.4933,
 332 0056 DB68     		ldr	r3, [r3, #12]	@ D.4934, _23->CFGR1
 333 0058 2022     		movs	r2, #32	@ tmp145,
 334 005a 1340     		ands	r3, r2	@ D.4934, tmp145
 335 005c 01D0     		beq	.L20	@,
 193:src/adc.c     ****         return 0xFFFF;
 336              		.loc 1 193 0
 337 005e 0C4B     		ldr	r3, .L25+4	@ D.4932,
 338 0060 10E0     		b	.L15	@
 339              	.L20:
 194:src/adc.c     **** 
 195:src/adc.c     ****     if (ADC1->CFGR1 & 0x00000018)					//reviso RES = 00
 340              		.loc 1 195 0
 341 0062 0A4B     		ldr	r3, .L25	@ D.4933,
 342 0064 DB68     		ldr	r3, [r3, #12]	@ D.4934, _27->CFGR1
 343 0066 1822     		movs	r2, #24	@ tmp146,
 344 0068 1340     		ands	r3, r2	@ D.4934, tmp146
 345 006a 01D0     		beq	.L24	@,
 196:src/adc.c     ****         return 0xFFFF;
 346              		.loc 1 196 0
 347 006c 084B     		ldr	r3, .L25+4	@ D.4932,
 348 006e 09E0     		b	.L15	@
 349              	.L24:
 197:src/adc.c     **** 
 198:src/adc.c     ****     //espero que no se este convirtiendo ADCSTART = 0
 199:src/adc.c     ****     while ((ADC1->CR & 0x02) != 0);	//espero ADCSTART = 0
 350              		.loc 1 199 0
 351 0070 C046     		nop
 352              	.L22:
 353              		.loc 1 199 0 is_stmt 0 discriminator 1
 354 0072 064B     		ldr	r3, .L25	@ D.4933,
 355 0074 9B68     		ldr	r3, [r3, #8]	@ D.4934, _31->CR
 356 0076 0222     		movs	r2, #2	@ tmp147,
 357 0078 1340     		ands	r3, r2	@ D.4934, tmp147
 358 007a FAD1     		bne	.L22	@,
 200:src/adc.c     **** 
 201:src/adc.c     ****     ADC1->CHSELR = 0x00000001;	//solo convierto CH0
 359              		.loc 1 201 0 is_stmt 1
 360 007c 034B     		ldr	r3, .L25	@ D.4933,
 361 007e 0122     		movs	r2, #1	@ tmp148,
 362 0080 9A62     		str	r2, [r3, #40]	@ tmp148, _34->CHSELR
 202:src/adc.c     **** 
 203:src/adc.c     ****     return 1;
 363              		.loc 1 203 0
 364 0082 0123     		movs	r3, #1	@ D.4932,
 365              	.L15:
 204:src/adc.c     **** }
 366              		.loc 1 204 0
ARM GAS  /tmp/cc5xKR5V.s 			page 11


 367 0084 1800     		movs	r0, r3	@, <retval>
 368 0086 02B0     		add	sp, sp, #8	@,,
 369              		@ sp needed	@
 370 0088 7047     		bx	lr
 371              	.L26:
 372 008a C046     		.align	2
 373              	.L25:
 374 008c 00240140 		.word	1073816576
 375 0090 FFFF0000 		.word	65535
 376              		.cfi_endproc
 377              	.LFE23:
 378              		.size	ReadADC1Check, .-ReadADC1Check
 379              		.section	.text.ADCGetCalibrationFactor,"ax",%progbits
 380              		.align	2
 381              		.global	ADCGetCalibrationFactor
 382              		.code	16
 383              		.thumb_func
 384              		.type	ADCGetCalibrationFactor, %function
 385              	ADCGetCalibrationFactor:
 386              	.LFB24:
 205:src/adc.c     **** 
 206:src/adc.c     **** unsigned int ADCGetCalibrationFactor (void)
 207:src/adc.c     **** {
 387              		.loc 1 207 0
 388              		.cfi_startproc
 389 0000 84B0     		sub	sp, sp, #16	@,,
 390              	.LCFI4:
 391              		.cfi_def_cfa_offset 16
 208:src/adc.c     ****     uint32_t tmpreg = 0, calibrationcounter = 0, calibrationstatus = 0;
 392              		.loc 1 208 0
 393 0002 0023     		movs	r3, #0	@ tmp122,
 394 0004 0393     		str	r3, [sp, #12]	@ tmp122, tmpreg
 395 0006 0023     		movs	r3, #0	@ tmp123,
 396 0008 0293     		str	r3, [sp, #8]	@ tmp123, calibrationcounter
 397 000a 0023     		movs	r3, #0	@ tmp124,
 398 000c 0193     		str	r3, [sp, #4]	@ tmp124, calibrationstatus
 209:src/adc.c     **** 
 210:src/adc.c     ****     /* Set the ADC calibartion */
 211:src/adc.c     ****     ADC1->CR |= (uint32_t)ADC_CR_ADCAL;
 399              		.loc 1 211 0
 400 000e 124B     		ldr	r3, .L33	@ D.4935,
 401 0010 114A     		ldr	r2, .L33	@ D.4935,
 402 0012 9268     		ldr	r2, [r2, #8]	@ D.4936, _7->CR
 403 0014 8021     		movs	r1, #128	@ tmp137,
 404 0016 0906     		lsls	r1, r1, #24	@ tmp125, tmp137,
 405 0018 0A43     		orrs	r2, r1	@ D.4936, tmp125
 406 001a 9A60     		str	r2, [r3, #8]	@ D.4936, _6->CR
 407              	.L29:
 212:src/adc.c     **** 
 213:src/adc.c     ****     /* Wait until no ADC calibration is completed */
 214:src/adc.c     ****     do
 215:src/adc.c     ****     {
 216:src/adc.c     ****         calibrationstatus = ADC1->CR & ADC_CR_ADCAL;
 408              		.loc 1 216 0 discriminator 2
 409 001c 0E4B     		ldr	r3, .L33	@ D.4935,
 410 001e 9B68     		ldr	r3, [r3, #8]	@ D.4936, _12->CR
 411 0020 DB0F     		lsrs	r3, r3, #31	@ tmp127, D.4936,
ARM GAS  /tmp/cc5xKR5V.s 			page 12


 412 0022 DB07     		lsls	r3, r3, #31	@ tmp126, tmp127,
 413 0024 0193     		str	r3, [sp, #4]	@ tmp126, calibrationstatus
 217:src/adc.c     ****         calibrationcounter++;
 414              		.loc 1 217 0 discriminator 2
 415 0026 029B     		ldr	r3, [sp, #8]	@ tmp129, calibrationcounter
 416 0028 0133     		adds	r3, r3, #1	@ tmp128,
 417 002a 0293     		str	r3, [sp, #8]	@ tmp128, calibrationcounter
 218:src/adc.c     ****     } while((calibrationcounter != CALIBRATION_TIMEOUT) && (calibrationstatus != 0x00));
 418              		.loc 1 218 0 discriminator 2
 419 002c 029A     		ldr	r2, [sp, #8]	@ tmp130, calibrationcounter
 420 002e F023     		movs	r3, #240	@ tmp136,
 421 0030 1B02     		lsls	r3, r3, #8	@ tmp131, tmp136,
 422 0032 9A42     		cmp	r2, r3	@ tmp130, tmp131
 423 0034 02D0     		beq	.L28	@,
 424              		.loc 1 218 0 is_stmt 0 discriminator 1
 425 0036 019B     		ldr	r3, [sp, #4]	@ tmp132, calibrationstatus
 426 0038 002B     		cmp	r3, #0	@ tmp132,
 427 003a EFD1     		bne	.L29	@,
 428              	.L28:
 219:src/adc.c     **** 
 220:src/adc.c     ****     if((uint32_t)(ADC1->CR & ADC_CR_ADCAL) == RESET)
 429              		.loc 1 220 0 is_stmt 1
 430 003c 064B     		ldr	r3, .L33	@ D.4935,
 431 003e 9B68     		ldr	r3, [r3, #8]	@ D.4936, _16->CR
 432 0040 002B     		cmp	r3, #0	@ D.4937,
 433 0042 03DB     		blt	.L30	@,
 221:src/adc.c     ****     {
 222:src/adc.c     ****         /*Get the calibration factor from the ADC data register */
 223:src/adc.c     ****         tmpreg = ADC1->DR;
 434              		.loc 1 223 0
 435 0044 044B     		ldr	r3, .L33	@ D.4935,
 436 0046 1B6C     		ldr	r3, [r3, #64]	@ tmp133, _19->DR
 437 0048 0393     		str	r3, [sp, #12]	@ tmp133, tmpreg
 438 004a 01E0     		b	.L31	@
 439              	.L30:
 224:src/adc.c     ****     }
 225:src/adc.c     ****     else
 226:src/adc.c     ****     {
 227:src/adc.c     ****         /* Error factor */
 228:src/adc.c     ****         tmpreg = 0x00000000;
 440              		.loc 1 228 0
 441 004c 0023     		movs	r3, #0	@ tmp134,
 442 004e 0393     		str	r3, [sp, #12]	@ tmp134, tmpreg
 443              	.L31:
 229:src/adc.c     ****     }
 230:src/adc.c     ****     return tmpreg;
 444              		.loc 1 230 0
 445 0050 039B     		ldr	r3, [sp, #12]	@ D.4938, tmpreg
 231:src/adc.c     **** }
 446              		.loc 1 231 0
 447 0052 1800     		movs	r0, r3	@, <retval>
 448 0054 04B0     		add	sp, sp, #16	@,,
 449              		@ sp needed	@
 450 0056 7047     		bx	lr
 451              	.L34:
 452              		.align	2
 453              	.L33:
ARM GAS  /tmp/cc5xKR5V.s 			page 13


 454 0058 00240140 		.word	1073816576
 455              		.cfi_endproc
 456              	.LFE24:
 457              		.size	ADCGetCalibrationFactor, .-ADCGetCalibrationFactor
 458              		.text
 459              	.Letext0:
 460              		.file 2 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types
 461              		.file 3 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 462              		.file 4 "./cmsis_boot/stm32f0xx.h"
 463              		.section	.debug_info,"",%progbits
 464              	.Ldebug_info0:
 465 0000 69030000 		.4byte	0x369
 466 0004 0200     		.2byte	0x2
 467 0006 00000000 		.4byte	.Ldebug_abbrev0
 468 000a 04       		.byte	0x4
 469 000b 01       		.uleb128 0x1
 470 000c 6F010000 		.4byte	.LASF42
 471 0010 0C       		.byte	0xc
 472 0011 1A020000 		.4byte	.LASF43
 473 0015 00000000 		.4byte	.LASF44
 474 0019 00000000 		.4byte	.Ldebug_ranges0+0
 475 001d 00000000 		.4byte	0
 476 0021 00000000 		.4byte	0
 477 0025 00000000 		.4byte	.Ldebug_line0
 478 0029 02       		.uleb128 0x2
 479 002a 01       		.byte	0x1
 480 002b 08       		.byte	0x8
 481 002c AF000000 		.4byte	.LASF0
 482 0030 02       		.uleb128 0x2
 483 0031 01       		.byte	0x1
 484 0032 06       		.byte	0x6
 485 0033 A2020000 		.4byte	.LASF1
 486 0037 02       		.uleb128 0x2
 487 0038 02       		.byte	0x2
 488 0039 05       		.byte	0x5
 489 003a 5A020000 		.4byte	.LASF2
 490 003e 03       		.uleb128 0x3
 491 003f 64020000 		.4byte	.LASF5
 492 0043 02       		.byte	0x2
 493 0044 2B       		.byte	0x2b
 494 0045 49000000 		.4byte	0x49
 495 0049 02       		.uleb128 0x2
 496 004a 02       		.byte	0x2
 497 004b 07       		.byte	0x7
 498 004c DB000000 		.4byte	.LASF3
 499 0050 02       		.uleb128 0x2
 500 0051 04       		.byte	0x4
 501 0052 05       		.byte	0x5
 502 0053 8D020000 		.4byte	.LASF4
 503 0057 03       		.uleb128 0x3
 504 0058 05010000 		.4byte	.LASF6
 505 005c 02       		.byte	0x2
 506 005d 41       		.byte	0x41
 507 005e 62000000 		.4byte	0x62
 508 0062 02       		.uleb128 0x2
 509 0063 04       		.byte	0x4
 510 0064 07       		.byte	0x7
ARM GAS  /tmp/cc5xKR5V.s 			page 14


 511 0065 C3000000 		.4byte	.LASF7
 512 0069 02       		.uleb128 0x2
 513 006a 08       		.byte	0x8
 514 006b 05       		.byte	0x5
 515 006c 2D020000 		.4byte	.LASF8
 516 0070 02       		.uleb128 0x2
 517 0071 08       		.byte	0x8
 518 0072 07       		.byte	0x7
 519 0073 53010000 		.4byte	.LASF9
 520 0077 04       		.uleb128 0x4
 521 0078 04       		.byte	0x4
 522 0079 05       		.byte	0x5
 523 007a 696E7400 		.ascii	"int\000"
 524 007e 02       		.uleb128 0x2
 525 007f 04       		.byte	0x4
 526 0080 07       		.byte	0x7
 527 0081 21010000 		.4byte	.LASF10
 528 0085 03       		.uleb128 0x3
 529 0086 6F020000 		.4byte	.LASF11
 530 008a 03       		.byte	0x3
 531 008b 1A       		.byte	0x1a
 532 008c 3E000000 		.4byte	0x3e
 533 0090 03       		.uleb128 0x3
 534 0091 84020000 		.4byte	.LASF12
 535 0095 03       		.byte	0x3
 536 0096 20       		.byte	0x20
 537 0097 57000000 		.4byte	0x57
 538 009b 02       		.uleb128 0x2
 539 009c 04       		.byte	0x4
 540 009d 07       		.byte	0x7
 541 009e 24020000 		.4byte	.LASF13
 542 00a2 05       		.uleb128 0x5
 543 00a3 90000000 		.4byte	0x90
 544 00a7 06       		.uleb128 0x6
 545 00a8 01       		.byte	0x1
 546 00a9 29000000 		.4byte	0x29
 547 00ad 04       		.byte	0x4
 548 00ae 6D01     		.2byte	0x16d
 549 00b0 C1000000 		.4byte	0xc1
 550 00b4 07       		.uleb128 0x7
 551 00b5 AE020000 		.4byte	.LASF14
 552 00b9 00       		.byte	0
 553 00ba 08       		.uleb128 0x8
 554 00bb 53455400 		.ascii	"SET\000"
 555 00bf 01       		.byte	0x1
 556 00c0 00       		.byte	0
 557 00c1 09       		.uleb128 0x9
 558 00c2 44       		.byte	0x44
 559 00c3 04       		.byte	0x4
 560 00c4 7C01     		.2byte	0x17c
 561 00c6 8B010000 		.4byte	0x18b
 562 00ca 0A       		.uleb128 0xa
 563 00cb 49535200 		.ascii	"ISR\000"
 564 00cf 04       		.byte	0x4
 565 00d0 7E01     		.2byte	0x17e
 566 00d2 A2000000 		.4byte	0xa2
 567 00d6 02       		.byte	0x2
ARM GAS  /tmp/cc5xKR5V.s 			page 15


 568 00d7 23       		.byte	0x23
 569 00d8 00       		.uleb128 0
 570 00d9 0A       		.uleb128 0xa
 571 00da 49455200 		.ascii	"IER\000"
 572 00de 04       		.byte	0x4
 573 00df 7F01     		.2byte	0x17f
 574 00e1 A2000000 		.4byte	0xa2
 575 00e5 02       		.byte	0x2
 576 00e6 23       		.byte	0x23
 577 00e7 04       		.uleb128 0x4
 578 00e8 0A       		.uleb128 0xa
 579 00e9 435200   		.ascii	"CR\000"
 580 00ec 04       		.byte	0x4
 581 00ed 8001     		.2byte	0x180
 582 00ef A2000000 		.4byte	0xa2
 583 00f3 02       		.byte	0x2
 584 00f4 23       		.byte	0x23
 585 00f5 08       		.uleb128 0x8
 586 00f6 0B       		.uleb128 0xb
 587 00f7 BD000000 		.4byte	.LASF15
 588 00fb 04       		.byte	0x4
 589 00fc 8101     		.2byte	0x181
 590 00fe A2000000 		.4byte	0xa2
 591 0102 02       		.byte	0x2
 592 0103 23       		.byte	0x23
 593 0104 0C       		.uleb128 0xc
 594 0105 0B       		.uleb128 0xb
 595 0106 5A000000 		.4byte	.LASF16
 596 010a 04       		.byte	0x4
 597 010b 8201     		.2byte	0x182
 598 010d A2000000 		.4byte	0xa2
 599 0111 02       		.byte	0x2
 600 0112 23       		.byte	0x23
 601 0113 10       		.uleb128 0x10
 602 0114 0B       		.uleb128 0xb
 603 0115 6A010000 		.4byte	.LASF17
 604 0119 04       		.byte	0x4
 605 011a 8301     		.2byte	0x183
 606 011c A2000000 		.4byte	0xa2
 607 0120 02       		.byte	0x2
 608 0121 23       		.byte	0x23
 609 0122 14       		.uleb128 0x14
 610 0123 0B       		.uleb128 0xb
 611 0124 67000000 		.4byte	.LASF18
 612 0128 04       		.byte	0x4
 613 0129 8401     		.2byte	0x184
 614 012b 90000000 		.4byte	0x90
 615 012f 02       		.byte	0x2
 616 0130 23       		.byte	0x23
 617 0131 18       		.uleb128 0x18
 618 0132 0B       		.uleb128 0xb
 619 0133 71000000 		.4byte	.LASF19
 620 0137 04       		.byte	0x4
 621 0138 8501     		.2byte	0x185
 622 013a 90000000 		.4byte	0x90
 623 013e 02       		.byte	0x2
 624 013f 23       		.byte	0x23
ARM GAS  /tmp/cc5xKR5V.s 			page 16


 625 0140 1C       		.uleb128 0x1c
 626 0141 0A       		.uleb128 0xa
 627 0142 545200   		.ascii	"TR\000"
 628 0145 04       		.byte	0x4
 629 0146 8601     		.2byte	0x186
 630 0148 A2000000 		.4byte	0xa2
 631 014c 02       		.byte	0x2
 632 014d 23       		.byte	0x23
 633 014e 20       		.uleb128 0x20
 634 014f 0B       		.uleb128 0xb
 635 0150 7B000000 		.4byte	.LASF20
 636 0154 04       		.byte	0x4
 637 0155 8701     		.2byte	0x187
 638 0157 90000000 		.4byte	0x90
 639 015b 02       		.byte	0x2
 640 015c 23       		.byte	0x23
 641 015d 24       		.uleb128 0x24
 642 015e 0B       		.uleb128 0xb
 643 015f 60000000 		.4byte	.LASF21
 644 0163 04       		.byte	0x4
 645 0164 8801     		.2byte	0x188
 646 0166 A2000000 		.4byte	0xa2
 647 016a 02       		.byte	0x2
 648 016b 23       		.byte	0x23
 649 016c 28       		.uleb128 0x28
 650 016d 0B       		.uleb128 0xb
 651 016e 85000000 		.4byte	.LASF22
 652 0172 04       		.byte	0x4
 653 0173 8901     		.2byte	0x189
 654 0175 8B010000 		.4byte	0x18b
 655 0179 02       		.byte	0x2
 656 017a 23       		.byte	0x23
 657 017b 2C       		.uleb128 0x2c
 658 017c 0A       		.uleb128 0xa
 659 017d 445200   		.ascii	"DR\000"
 660 0180 04       		.byte	0x4
 661 0181 8A01     		.2byte	0x18a
 662 0183 A2000000 		.4byte	0xa2
 663 0187 02       		.byte	0x2
 664 0188 23       		.byte	0x23
 665 0189 40       		.uleb128 0x40
 666 018a 00       		.byte	0
 667 018b 0C       		.uleb128 0xc
 668 018c 90000000 		.4byte	0x90
 669 0190 9B010000 		.4byte	0x19b
 670 0194 0D       		.uleb128 0xd
 671 0195 9B000000 		.4byte	0x9b
 672 0199 04       		.byte	0x4
 673 019a 00       		.byte	0
 674 019b 0E       		.uleb128 0xe
 675 019c 96020000 		.4byte	.LASF23
 676 01a0 04       		.byte	0x4
 677 01a1 8B01     		.2byte	0x18b
 678 01a3 C1000000 		.4byte	0xc1
 679 01a7 09       		.uleb128 0x9
 680 01a8 38       		.byte	0x38
 681 01a9 04       		.byte	0x4
ARM GAS  /tmp/cc5xKR5V.s 			page 17


 682 01aa B502     		.2byte	0x2b5
 683 01ac 82020000 		.4byte	0x282
 684 01b0 0A       		.uleb128 0xa
 685 01b1 435200   		.ascii	"CR\000"
 686 01b4 04       		.byte	0x4
 687 01b5 B702     		.2byte	0x2b7
 688 01b7 A2000000 		.4byte	0xa2
 689 01bb 02       		.byte	0x2
 690 01bc 23       		.byte	0x23
 691 01bd 00       		.uleb128 0
 692 01be 0B       		.uleb128 0xb
 693 01bf 46000000 		.4byte	.LASF24
 694 01c3 04       		.byte	0x4
 695 01c4 B802     		.2byte	0x2b8
 696 01c6 A2000000 		.4byte	0xa2
 697 01ca 02       		.byte	0x2
 698 01cb 23       		.byte	0x23
 699 01cc 04       		.uleb128 0x4
 700 01cd 0A       		.uleb128 0xa
 701 01ce 43495200 		.ascii	"CIR\000"
 702 01d2 04       		.byte	0x4
 703 01d3 B902     		.2byte	0x2b9
 704 01d5 A2000000 		.4byte	0xa2
 705 01d9 02       		.byte	0x2
 706 01da 23       		.byte	0x23
 707 01db 08       		.uleb128 0x8
 708 01dc 0B       		.uleb128 0xb
 709 01dd 18010000 		.4byte	.LASF25
 710 01e1 04       		.byte	0x4
 711 01e2 BA02     		.2byte	0x2ba
 712 01e4 A2000000 		.4byte	0xa2
 713 01e8 02       		.byte	0x2
 714 01e9 23       		.byte	0x23
 715 01ea 0C       		.uleb128 0xc
 716 01eb 0B       		.uleb128 0xb
 717 01ec FC000000 		.4byte	.LASF26
 718 01f0 04       		.byte	0x4
 719 01f1 BB02     		.2byte	0x2bb
 720 01f3 A2000000 		.4byte	0xa2
 721 01f7 02       		.byte	0x2
 722 01f8 23       		.byte	0x23
 723 01f9 10       		.uleb128 0x10
 724 01fa 0B       		.uleb128 0xb
 725 01fb 4B000000 		.4byte	.LASF27
 726 01ff 04       		.byte	0x4
 727 0200 BC02     		.2byte	0x2bc
 728 0202 A2000000 		.4byte	0xa2
 729 0206 02       		.byte	0x2
 730 0207 23       		.byte	0x23
 731 0208 14       		.uleb128 0x14
 732 0209 0B       		.uleb128 0xb
 733 020a 8F000000 		.4byte	.LASF28
 734 020e 04       		.byte	0x4
 735 020f BD02     		.2byte	0x2bd
 736 0211 A2000000 		.4byte	0xa2
 737 0215 02       		.byte	0x2
 738 0216 23       		.byte	0x23
ARM GAS  /tmp/cc5xKR5V.s 			page 18


 739 0217 18       		.uleb128 0x18
 740 0218 0B       		.uleb128 0xb
 741 0219 10010000 		.4byte	.LASF29
 742 021d 04       		.byte	0x4
 743 021e BE02     		.2byte	0x2be
 744 0220 A2000000 		.4byte	0xa2
 745 0224 02       		.byte	0x2
 746 0225 23       		.byte	0x23
 747 0226 1C       		.uleb128 0x1c
 748 0227 0B       		.uleb128 0xb
 749 0228 39000000 		.4byte	.LASF30
 750 022c 04       		.byte	0x4
 751 022d BF02     		.2byte	0x2bf
 752 022f A2000000 		.4byte	0xa2
 753 0233 02       		.byte	0x2
 754 0234 23       		.byte	0x23
 755 0235 20       		.uleb128 0x20
 756 0236 0A       		.uleb128 0xa
 757 0237 43535200 		.ascii	"CSR\000"
 758 023b 04       		.byte	0x4
 759 023c C002     		.2byte	0x2c0
 760 023e A2000000 		.4byte	0xa2
 761 0242 02       		.byte	0x2
 762 0243 23       		.byte	0x23
 763 0244 24       		.uleb128 0x24
 764 0245 0B       		.uleb128 0xb
 765 0246 52000000 		.4byte	.LASF31
 766 024a 04       		.byte	0x4
 767 024b C102     		.2byte	0x2c1
 768 024d A2000000 		.4byte	0xa2
 769 0251 02       		.byte	0x2
 770 0252 23       		.byte	0x23
 771 0253 28       		.uleb128 0x28
 772 0254 0B       		.uleb128 0xb
 773 0255 5A000000 		.4byte	.LASF16
 774 0259 04       		.byte	0x4
 775 025a C202     		.2byte	0x2c2
 776 025c A2000000 		.4byte	0xa2
 777 0260 02       		.byte	0x2
 778 0261 23       		.byte	0x23
 779 0262 2C       		.uleb128 0x2c
 780 0263 0B       		.uleb128 0xb
 781 0264 D5000000 		.4byte	.LASF32
 782 0268 04       		.byte	0x4
 783 0269 C302     		.2byte	0x2c3
 784 026b A2000000 		.4byte	0xa2
 785 026f 02       		.byte	0x2
 786 0270 23       		.byte	0x23
 787 0271 30       		.uleb128 0x30
 788 0272 0A       		.uleb128 0xa
 789 0273 43523200 		.ascii	"CR2\000"
 790 0277 04       		.byte	0x4
 791 0278 C402     		.2byte	0x2c4
 792 027a A2000000 		.4byte	0xa2
 793 027e 02       		.byte	0x2
 794 027f 23       		.byte	0x23
 795 0280 34       		.uleb128 0x34
ARM GAS  /tmp/cc5xKR5V.s 			page 19


 796 0281 00       		.byte	0
 797 0282 0E       		.uleb128 0xe
 798 0283 78020000 		.4byte	.LASF33
 799 0287 04       		.byte	0x4
 800 0288 C502     		.2byte	0x2c5
 801 028a A7010000 		.4byte	0x1a7
 802 028e 0F       		.uleb128 0xf
 803 028f 01       		.byte	0x1
 804 0290 2F000000 		.4byte	.LASF45
 805 0294 01       		.byte	0x1
 806 0295 39       		.byte	0x39
 807 0296 01       		.byte	0x1
 808 0297 00000000 		.4byte	.LFB20
 809 029b A0000000 		.4byte	.LFE20
 810 029f 00000000 		.4byte	.LLST0
 811 02a3 01       		.byte	0x1
 812 02a4 10       		.uleb128 0x10
 813 02a5 01       		.byte	0x1
 814 02a6 40010000 		.4byte	.LASF37
 815 02aa 01       		.byte	0x1
 816 02ab 90       		.byte	0x90
 817 02ac 01       		.byte	0x1
 818 02ad 00000000 		.4byte	.LFB21
 819 02b1 28000000 		.4byte	.LFE21
 820 02b5 20000000 		.4byte	.LLST1
 821 02b9 01       		.byte	0x1
 822 02ba CD020000 		.4byte	0x2cd
 823 02be 11       		.uleb128 0x11
 824 02bf 53020000 		.4byte	.LASF39
 825 02c3 01       		.byte	0x1
 826 02c4 92       		.byte	0x92
 827 02c5 90000000 		.4byte	0x90
 828 02c9 02       		.byte	0x2
 829 02ca 91       		.byte	0x91
 830 02cb 7C       		.sleb128 -4
 831 02cc 00       		.byte	0
 832 02cd 12       		.uleb128 0x12
 833 02ce 01       		.byte	0x1
 834 02cf 3B020000 		.4byte	.LASF34
 835 02d3 01       		.byte	0x1
 836 02d4 A0       		.byte	0xa0
 837 02d5 01       		.byte	0x1
 838 02d6 49000000 		.4byte	0x49
 839 02da 00000000 		.4byte	.LFB22
 840 02de 34000000 		.4byte	.LFE22
 841 02e2 40000000 		.4byte	.LLST2
 842 02e6 01       		.byte	0x1
 843 02e7 FA020000 		.4byte	0x2fa
 844 02eb 13       		.uleb128 0x13
 845 02ec 3E000000 		.4byte	.LASF36
 846 02f0 01       		.byte	0x1
 847 02f1 A0       		.byte	0xa0
 848 02f2 7E000000 		.4byte	0x7e
 849 02f6 02       		.byte	0x2
 850 02f7 91       		.byte	0x91
 851 02f8 7C       		.sleb128 -4
 852 02f9 00       		.byte	0
ARM GAS  /tmp/cc5xKR5V.s 			page 20


 853 02fa 12       		.uleb128 0x12
 854 02fb 01       		.byte	0x1
 855 02fc EE000000 		.4byte	.LASF35
 856 0300 01       		.byte	0x1
 857 0301 AF       		.byte	0xaf
 858 0302 01       		.byte	0x1
 859 0303 49000000 		.4byte	0x49
 860 0307 00000000 		.4byte	.LFB23
 861 030b 94000000 		.4byte	.LFE23
 862 030f 60000000 		.4byte	.LLST3
 863 0313 01       		.byte	0x1
 864 0314 27030000 		.4byte	0x327
 865 0318 13       		.uleb128 0x13
 866 0319 3E000000 		.4byte	.LASF36
 867 031d 01       		.byte	0x1
 868 031e AF       		.byte	0xaf
 869 031f 29000000 		.4byte	0x29
 870 0323 02       		.byte	0x2
 871 0324 91       		.byte	0x91
 872 0325 7F       		.sleb128 -1
 873 0326 00       		.byte	0
 874 0327 14       		.uleb128 0x14
 875 0328 01       		.byte	0x1
 876 0329 97000000 		.4byte	.LASF38
 877 032d 01       		.byte	0x1
 878 032e CE       		.byte	0xce
 879 032f 01       		.byte	0x1
 880 0330 7E000000 		.4byte	0x7e
 881 0334 00000000 		.4byte	.LFB24
 882 0338 5C000000 		.4byte	.LFE24
 883 033c 80000000 		.4byte	.LLST4
 884 0340 01       		.byte	0x1
 885 0341 11       		.uleb128 0x11
 886 0342 53020000 		.4byte	.LASF39
 887 0346 01       		.byte	0x1
 888 0347 D0       		.byte	0xd0
 889 0348 90000000 		.4byte	0x90
 890 034c 02       		.byte	0x2
 891 034d 91       		.byte	0x91
 892 034e 7C       		.sleb128 -4
 893 034f 11       		.uleb128 0x11
 894 0350 B4020000 		.4byte	.LASF40
 895 0354 01       		.byte	0x1
 896 0355 D0       		.byte	0xd0
 897 0356 90000000 		.4byte	0x90
 898 035a 02       		.byte	0x2
 899 035b 91       		.byte	0x91
 900 035c 78       		.sleb128 -8
 901 035d 11       		.uleb128 0x11
 902 035e 2E010000 		.4byte	.LASF41
 903 0362 01       		.byte	0x1
 904 0363 D0       		.byte	0xd0
 905 0364 90000000 		.4byte	0x90
 906 0368 02       		.byte	0x2
 907 0369 91       		.byte	0x91
 908 036a 74       		.sleb128 -12
 909 036b 00       		.byte	0
ARM GAS  /tmp/cc5xKR5V.s 			page 21


 910 036c 00       		.byte	0
 911              		.section	.debug_abbrev,"",%progbits
 912              	.Ldebug_abbrev0:
 913 0000 01       		.uleb128 0x1
 914 0001 11       		.uleb128 0x11
 915 0002 01       		.byte	0x1
 916 0003 25       		.uleb128 0x25
 917 0004 0E       		.uleb128 0xe
 918 0005 13       		.uleb128 0x13
 919 0006 0B       		.uleb128 0xb
 920 0007 03       		.uleb128 0x3
 921 0008 0E       		.uleb128 0xe
 922 0009 1B       		.uleb128 0x1b
 923 000a 0E       		.uleb128 0xe
 924 000b 55       		.uleb128 0x55
 925 000c 06       		.uleb128 0x6
 926 000d 11       		.uleb128 0x11
 927 000e 01       		.uleb128 0x1
 928 000f 52       		.uleb128 0x52
 929 0010 01       		.uleb128 0x1
 930 0011 10       		.uleb128 0x10
 931 0012 06       		.uleb128 0x6
 932 0013 00       		.byte	0
 933 0014 00       		.byte	0
 934 0015 02       		.uleb128 0x2
 935 0016 24       		.uleb128 0x24
 936 0017 00       		.byte	0
 937 0018 0B       		.uleb128 0xb
 938 0019 0B       		.uleb128 0xb
 939 001a 3E       		.uleb128 0x3e
 940 001b 0B       		.uleb128 0xb
 941 001c 03       		.uleb128 0x3
 942 001d 0E       		.uleb128 0xe
 943 001e 00       		.byte	0
 944 001f 00       		.byte	0
 945 0020 03       		.uleb128 0x3
 946 0021 16       		.uleb128 0x16
 947 0022 00       		.byte	0
 948 0023 03       		.uleb128 0x3
 949 0024 0E       		.uleb128 0xe
 950 0025 3A       		.uleb128 0x3a
 951 0026 0B       		.uleb128 0xb
 952 0027 3B       		.uleb128 0x3b
 953 0028 0B       		.uleb128 0xb
 954 0029 49       		.uleb128 0x49
 955 002a 13       		.uleb128 0x13
 956 002b 00       		.byte	0
 957 002c 00       		.byte	0
 958 002d 04       		.uleb128 0x4
 959 002e 24       		.uleb128 0x24
 960 002f 00       		.byte	0
 961 0030 0B       		.uleb128 0xb
 962 0031 0B       		.uleb128 0xb
 963 0032 3E       		.uleb128 0x3e
 964 0033 0B       		.uleb128 0xb
 965 0034 03       		.uleb128 0x3
 966 0035 08       		.uleb128 0x8
ARM GAS  /tmp/cc5xKR5V.s 			page 22


 967 0036 00       		.byte	0
 968 0037 00       		.byte	0
 969 0038 05       		.uleb128 0x5
 970 0039 35       		.uleb128 0x35
 971 003a 00       		.byte	0
 972 003b 49       		.uleb128 0x49
 973 003c 13       		.uleb128 0x13
 974 003d 00       		.byte	0
 975 003e 00       		.byte	0
 976 003f 06       		.uleb128 0x6
 977 0040 04       		.uleb128 0x4
 978 0041 01       		.byte	0x1
 979 0042 0B       		.uleb128 0xb
 980 0043 0B       		.uleb128 0xb
 981 0044 49       		.uleb128 0x49
 982 0045 13       		.uleb128 0x13
 983 0046 3A       		.uleb128 0x3a
 984 0047 0B       		.uleb128 0xb
 985 0048 3B       		.uleb128 0x3b
 986 0049 05       		.uleb128 0x5
 987 004a 01       		.uleb128 0x1
 988 004b 13       		.uleb128 0x13
 989 004c 00       		.byte	0
 990 004d 00       		.byte	0
 991 004e 07       		.uleb128 0x7
 992 004f 28       		.uleb128 0x28
 993 0050 00       		.byte	0
 994 0051 03       		.uleb128 0x3
 995 0052 0E       		.uleb128 0xe
 996 0053 1C       		.uleb128 0x1c
 997 0054 0B       		.uleb128 0xb
 998 0055 00       		.byte	0
 999 0056 00       		.byte	0
 1000 0057 08       		.uleb128 0x8
 1001 0058 28       		.uleb128 0x28
 1002 0059 00       		.byte	0
 1003 005a 03       		.uleb128 0x3
 1004 005b 08       		.uleb128 0x8
 1005 005c 1C       		.uleb128 0x1c
 1006 005d 0B       		.uleb128 0xb
 1007 005e 00       		.byte	0
 1008 005f 00       		.byte	0
 1009 0060 09       		.uleb128 0x9
 1010 0061 13       		.uleb128 0x13
 1011 0062 01       		.byte	0x1
 1012 0063 0B       		.uleb128 0xb
 1013 0064 0B       		.uleb128 0xb
 1014 0065 3A       		.uleb128 0x3a
 1015 0066 0B       		.uleb128 0xb
 1016 0067 3B       		.uleb128 0x3b
 1017 0068 05       		.uleb128 0x5
 1018 0069 01       		.uleb128 0x1
 1019 006a 13       		.uleb128 0x13
 1020 006b 00       		.byte	0
 1021 006c 00       		.byte	0
 1022 006d 0A       		.uleb128 0xa
 1023 006e 0D       		.uleb128 0xd
ARM GAS  /tmp/cc5xKR5V.s 			page 23


 1024 006f 00       		.byte	0
 1025 0070 03       		.uleb128 0x3
 1026 0071 08       		.uleb128 0x8
 1027 0072 3A       		.uleb128 0x3a
 1028 0073 0B       		.uleb128 0xb
 1029 0074 3B       		.uleb128 0x3b
 1030 0075 05       		.uleb128 0x5
 1031 0076 49       		.uleb128 0x49
 1032 0077 13       		.uleb128 0x13
 1033 0078 38       		.uleb128 0x38
 1034 0079 0A       		.uleb128 0xa
 1035 007a 00       		.byte	0
 1036 007b 00       		.byte	0
 1037 007c 0B       		.uleb128 0xb
 1038 007d 0D       		.uleb128 0xd
 1039 007e 00       		.byte	0
 1040 007f 03       		.uleb128 0x3
 1041 0080 0E       		.uleb128 0xe
 1042 0081 3A       		.uleb128 0x3a
 1043 0082 0B       		.uleb128 0xb
 1044 0083 3B       		.uleb128 0x3b
 1045 0084 05       		.uleb128 0x5
 1046 0085 49       		.uleb128 0x49
 1047 0086 13       		.uleb128 0x13
 1048 0087 38       		.uleb128 0x38
 1049 0088 0A       		.uleb128 0xa
 1050 0089 00       		.byte	0
 1051 008a 00       		.byte	0
 1052 008b 0C       		.uleb128 0xc
 1053 008c 01       		.uleb128 0x1
 1054 008d 01       		.byte	0x1
 1055 008e 49       		.uleb128 0x49
 1056 008f 13       		.uleb128 0x13
 1057 0090 01       		.uleb128 0x1
 1058 0091 13       		.uleb128 0x13
 1059 0092 00       		.byte	0
 1060 0093 00       		.byte	0
 1061 0094 0D       		.uleb128 0xd
 1062 0095 21       		.uleb128 0x21
 1063 0096 00       		.byte	0
 1064 0097 49       		.uleb128 0x49
 1065 0098 13       		.uleb128 0x13
 1066 0099 2F       		.uleb128 0x2f
 1067 009a 0B       		.uleb128 0xb
 1068 009b 00       		.byte	0
 1069 009c 00       		.byte	0
 1070 009d 0E       		.uleb128 0xe
 1071 009e 16       		.uleb128 0x16
 1072 009f 00       		.byte	0
 1073 00a0 03       		.uleb128 0x3
 1074 00a1 0E       		.uleb128 0xe
 1075 00a2 3A       		.uleb128 0x3a
 1076 00a3 0B       		.uleb128 0xb
 1077 00a4 3B       		.uleb128 0x3b
 1078 00a5 05       		.uleb128 0x5
 1079 00a6 49       		.uleb128 0x49
 1080 00a7 13       		.uleb128 0x13
ARM GAS  /tmp/cc5xKR5V.s 			page 24


 1081 00a8 00       		.byte	0
 1082 00a9 00       		.byte	0
 1083 00aa 0F       		.uleb128 0xf
 1084 00ab 2E       		.uleb128 0x2e
 1085 00ac 00       		.byte	0
 1086 00ad 3F       		.uleb128 0x3f
 1087 00ae 0C       		.uleb128 0xc
 1088 00af 03       		.uleb128 0x3
 1089 00b0 0E       		.uleb128 0xe
 1090 00b1 3A       		.uleb128 0x3a
 1091 00b2 0B       		.uleb128 0xb
 1092 00b3 3B       		.uleb128 0x3b
 1093 00b4 0B       		.uleb128 0xb
 1094 00b5 27       		.uleb128 0x27
 1095 00b6 0C       		.uleb128 0xc
 1096 00b7 11       		.uleb128 0x11
 1097 00b8 01       		.uleb128 0x1
 1098 00b9 12       		.uleb128 0x12
 1099 00ba 01       		.uleb128 0x1
 1100 00bb 40       		.uleb128 0x40
 1101 00bc 06       		.uleb128 0x6
 1102 00bd 9642     		.uleb128 0x2116
 1103 00bf 0C       		.uleb128 0xc
 1104 00c0 00       		.byte	0
 1105 00c1 00       		.byte	0
 1106 00c2 10       		.uleb128 0x10
 1107 00c3 2E       		.uleb128 0x2e
 1108 00c4 01       		.byte	0x1
 1109 00c5 3F       		.uleb128 0x3f
 1110 00c6 0C       		.uleb128 0xc
 1111 00c7 03       		.uleb128 0x3
 1112 00c8 0E       		.uleb128 0xe
 1113 00c9 3A       		.uleb128 0x3a
 1114 00ca 0B       		.uleb128 0xb
 1115 00cb 3B       		.uleb128 0x3b
 1116 00cc 0B       		.uleb128 0xb
 1117 00cd 27       		.uleb128 0x27
 1118 00ce 0C       		.uleb128 0xc
 1119 00cf 11       		.uleb128 0x11
 1120 00d0 01       		.uleb128 0x1
 1121 00d1 12       		.uleb128 0x12
 1122 00d2 01       		.uleb128 0x1
 1123 00d3 40       		.uleb128 0x40
 1124 00d4 06       		.uleb128 0x6
 1125 00d5 9742     		.uleb128 0x2117
 1126 00d7 0C       		.uleb128 0xc
 1127 00d8 01       		.uleb128 0x1
 1128 00d9 13       		.uleb128 0x13
 1129 00da 00       		.byte	0
 1130 00db 00       		.byte	0
 1131 00dc 11       		.uleb128 0x11
 1132 00dd 34       		.uleb128 0x34
 1133 00de 00       		.byte	0
 1134 00df 03       		.uleb128 0x3
 1135 00e0 0E       		.uleb128 0xe
 1136 00e1 3A       		.uleb128 0x3a
 1137 00e2 0B       		.uleb128 0xb
ARM GAS  /tmp/cc5xKR5V.s 			page 25


 1138 00e3 3B       		.uleb128 0x3b
 1139 00e4 0B       		.uleb128 0xb
 1140 00e5 49       		.uleb128 0x49
 1141 00e6 13       		.uleb128 0x13
 1142 00e7 02       		.uleb128 0x2
 1143 00e8 0A       		.uleb128 0xa
 1144 00e9 00       		.byte	0
 1145 00ea 00       		.byte	0
 1146 00eb 12       		.uleb128 0x12
 1147 00ec 2E       		.uleb128 0x2e
 1148 00ed 01       		.byte	0x1
 1149 00ee 3F       		.uleb128 0x3f
 1150 00ef 0C       		.uleb128 0xc
 1151 00f0 03       		.uleb128 0x3
 1152 00f1 0E       		.uleb128 0xe
 1153 00f2 3A       		.uleb128 0x3a
 1154 00f3 0B       		.uleb128 0xb
 1155 00f4 3B       		.uleb128 0x3b
 1156 00f5 0B       		.uleb128 0xb
 1157 00f6 27       		.uleb128 0x27
 1158 00f7 0C       		.uleb128 0xc
 1159 00f8 49       		.uleb128 0x49
 1160 00f9 13       		.uleb128 0x13
 1161 00fa 11       		.uleb128 0x11
 1162 00fb 01       		.uleb128 0x1
 1163 00fc 12       		.uleb128 0x12
 1164 00fd 01       		.uleb128 0x1
 1165 00fe 40       		.uleb128 0x40
 1166 00ff 06       		.uleb128 0x6
 1167 0100 9742     		.uleb128 0x2117
 1168 0102 0C       		.uleb128 0xc
 1169 0103 01       		.uleb128 0x1
 1170 0104 13       		.uleb128 0x13
 1171 0105 00       		.byte	0
 1172 0106 00       		.byte	0
 1173 0107 13       		.uleb128 0x13
 1174 0108 05       		.uleb128 0x5
 1175 0109 00       		.byte	0
 1176 010a 03       		.uleb128 0x3
 1177 010b 0E       		.uleb128 0xe
 1178 010c 3A       		.uleb128 0x3a
 1179 010d 0B       		.uleb128 0xb
 1180 010e 3B       		.uleb128 0x3b
 1181 010f 0B       		.uleb128 0xb
 1182 0110 49       		.uleb128 0x49
 1183 0111 13       		.uleb128 0x13
 1184 0112 02       		.uleb128 0x2
 1185 0113 0A       		.uleb128 0xa
 1186 0114 00       		.byte	0
 1187 0115 00       		.byte	0
 1188 0116 14       		.uleb128 0x14
 1189 0117 2E       		.uleb128 0x2e
 1190 0118 01       		.byte	0x1
 1191 0119 3F       		.uleb128 0x3f
 1192 011a 0C       		.uleb128 0xc
 1193 011b 03       		.uleb128 0x3
 1194 011c 0E       		.uleb128 0xe
ARM GAS  /tmp/cc5xKR5V.s 			page 26


 1195 011d 3A       		.uleb128 0x3a
 1196 011e 0B       		.uleb128 0xb
 1197 011f 3B       		.uleb128 0x3b
 1198 0120 0B       		.uleb128 0xb
 1199 0121 27       		.uleb128 0x27
 1200 0122 0C       		.uleb128 0xc
 1201 0123 49       		.uleb128 0x49
 1202 0124 13       		.uleb128 0x13
 1203 0125 11       		.uleb128 0x11
 1204 0126 01       		.uleb128 0x1
 1205 0127 12       		.uleb128 0x12
 1206 0128 01       		.uleb128 0x1
 1207 0129 40       		.uleb128 0x40
 1208 012a 06       		.uleb128 0x6
 1209 012b 9742     		.uleb128 0x2117
 1210 012d 0C       		.uleb128 0xc
 1211 012e 00       		.byte	0
 1212 012f 00       		.byte	0
 1213 0130 00       		.byte	0
 1214              		.section	.debug_loc,"",%progbits
 1215              	.Ldebug_loc0:
 1216              	.LLST0:
 1217 0000 00000000 		.4byte	.LFB20
 1218 0004 02000000 		.4byte	.LCFI0
 1219 0008 0200     		.2byte	0x2
 1220 000a 7D       		.byte	0x7d
 1221 000b 00       		.sleb128 0
 1222 000c 02000000 		.4byte	.LCFI0
 1223 0010 A0000000 		.4byte	.LFE20
 1224 0014 0200     		.2byte	0x2
 1225 0016 7D       		.byte	0x7d
 1226 0017 08       		.sleb128 8
 1227 0018 00000000 		.4byte	0
 1228 001c 00000000 		.4byte	0
 1229              	.LLST1:
 1230 0020 00000000 		.4byte	.LFB21
 1231 0024 02000000 		.4byte	.LCFI1
 1232 0028 0200     		.2byte	0x2
 1233 002a 7D       		.byte	0x7d
 1234 002b 00       		.sleb128 0
 1235 002c 02000000 		.4byte	.LCFI1
 1236 0030 28000000 		.4byte	.LFE21
 1237 0034 0200     		.2byte	0x2
 1238 0036 7D       		.byte	0x7d
 1239 0037 08       		.sleb128 8
 1240 0038 00000000 		.4byte	0
 1241 003c 00000000 		.4byte	0
 1242              	.LLST2:
 1243 0040 00000000 		.4byte	.LFB22
 1244 0044 02000000 		.4byte	.LCFI2
 1245 0048 0200     		.2byte	0x2
 1246 004a 7D       		.byte	0x7d
 1247 004b 00       		.sleb128 0
 1248 004c 02000000 		.4byte	.LCFI2
 1249 0050 34000000 		.4byte	.LFE22
 1250 0054 0200     		.2byte	0x2
 1251 0056 7D       		.byte	0x7d
ARM GAS  /tmp/cc5xKR5V.s 			page 27


 1252 0057 08       		.sleb128 8
 1253 0058 00000000 		.4byte	0
 1254 005c 00000000 		.4byte	0
 1255              	.LLST3:
 1256 0060 00000000 		.4byte	.LFB23
 1257 0064 02000000 		.4byte	.LCFI3
 1258 0068 0200     		.2byte	0x2
 1259 006a 7D       		.byte	0x7d
 1260 006b 00       		.sleb128 0
 1261 006c 02000000 		.4byte	.LCFI3
 1262 0070 94000000 		.4byte	.LFE23
 1263 0074 0200     		.2byte	0x2
 1264 0076 7D       		.byte	0x7d
 1265 0077 08       		.sleb128 8
 1266 0078 00000000 		.4byte	0
 1267 007c 00000000 		.4byte	0
 1268              	.LLST4:
 1269 0080 00000000 		.4byte	.LFB24
 1270 0084 02000000 		.4byte	.LCFI4
 1271 0088 0200     		.2byte	0x2
 1272 008a 7D       		.byte	0x7d
 1273 008b 00       		.sleb128 0
 1274 008c 02000000 		.4byte	.LCFI4
 1275 0090 5C000000 		.4byte	.LFE24
 1276 0094 0200     		.2byte	0x2
 1277 0096 7D       		.byte	0x7d
 1278 0097 10       		.sleb128 16
 1279 0098 00000000 		.4byte	0
 1280 009c 00000000 		.4byte	0
 1281              		.section	.debug_aranges,"",%progbits
 1282 0000 3C000000 		.4byte	0x3c
 1283 0004 0200     		.2byte	0x2
 1284 0006 00000000 		.4byte	.Ldebug_info0
 1285 000a 04       		.byte	0x4
 1286 000b 00       		.byte	0
 1287 000c 0000     		.2byte	0
 1288 000e 0000     		.2byte	0
 1289 0010 00000000 		.4byte	.LFB20
 1290 0014 A0000000 		.4byte	.LFE20-.LFB20
 1291 0018 00000000 		.4byte	.LFB21
 1292 001c 28000000 		.4byte	.LFE21-.LFB21
 1293 0020 00000000 		.4byte	.LFB22
 1294 0024 34000000 		.4byte	.LFE22-.LFB22
 1295 0028 00000000 		.4byte	.LFB23
 1296 002c 94000000 		.4byte	.LFE23-.LFB23
 1297 0030 00000000 		.4byte	.LFB24
 1298 0034 5C000000 		.4byte	.LFE24-.LFB24
 1299 0038 00000000 		.4byte	0
 1300 003c 00000000 		.4byte	0
 1301              		.section	.debug_ranges,"",%progbits
 1302              	.Ldebug_ranges0:
 1303 0000 00000000 		.4byte	.LFB20
 1304 0004 A0000000 		.4byte	.LFE20
 1305 0008 00000000 		.4byte	.LFB21
 1306 000c 28000000 		.4byte	.LFE21
 1307 0010 00000000 		.4byte	.LFB22
 1308 0014 34000000 		.4byte	.LFE22
ARM GAS  /tmp/cc5xKR5V.s 			page 28


 1309 0018 00000000 		.4byte	.LFB23
 1310 001c 94000000 		.4byte	.LFE23
 1311 0020 00000000 		.4byte	.LFB24
 1312 0024 5C000000 		.4byte	.LFE24
 1313 0028 00000000 		.4byte	0
 1314 002c 00000000 		.4byte	0
 1315              		.section	.debug_line,"",%progbits
 1316              	.Ldebug_line0:
 1317 0000 A4010000 		.section	.debug_str,"MS",%progbits,1
 1317      0200EF00 
 1317      00000201 
 1317      FB0E0D00 
 1317      01010101 
 1318              	.LASF44:
 1319 0000 2F686F6D 		.ascii	"/home/med/Documents/stm32_proj/emacs_dexel_pfc\000"
 1319      652F6D65 
 1319      642F446F 
 1319      63756D65 
 1319      6E74732F 
 1320              	.LASF45:
 1321 002f 41646343 		.ascii	"AdcConfig\000"
 1321      6F6E6669 
 1321      6700
 1322              	.LASF30:
 1323 0039 42444352 		.ascii	"BDCR\000"
 1323      00
 1324              	.LASF36:
 1325 003e 6368616E 		.ascii	"channel\000"
 1325      6E656C00 
 1326              	.LASF24:
 1327 0046 43464752 		.ascii	"CFGR\000"
 1327      00
 1328              	.LASF27:
 1329 004b 41484245 		.ascii	"AHBENR\000"
 1329      4E5200
 1330              	.LASF31:
 1331 0052 41484252 		.ascii	"AHBRSTR\000"
 1331      53545200 
 1332              	.LASF16:
 1333 005a 43464752 		.ascii	"CFGR2\000"
 1333      3200
 1334              	.LASF21:
 1335 0060 43485345 		.ascii	"CHSELR\000"
 1335      4C5200
 1336              	.LASF18:
 1337 0067 52455345 		.ascii	"RESERVED1\000"
 1337      52564544 
 1337      3100
 1338              	.LASF19:
 1339 0071 52455345 		.ascii	"RESERVED2\000"
 1339      52564544 
 1339      3200
 1340              	.LASF20:
 1341 007b 52455345 		.ascii	"RESERVED3\000"
 1341      52564544 
 1341      3300
 1342              	.LASF22:
ARM GAS  /tmp/cc5xKR5V.s 			page 29


 1343 0085 52455345 		.ascii	"RESERVED4\000"
 1343      52564544 
 1343      3400
 1344              	.LASF28:
 1345 008f 41504232 		.ascii	"APB2ENR\000"
 1345      454E5200 
 1346              	.LASF38:
 1347 0097 41444347 		.ascii	"ADCGetCalibrationFactor\000"
 1347      65744361 
 1347      6C696272 
 1347      6174696F 
 1347      6E466163 
 1348              	.LASF0:
 1349 00af 756E7369 		.ascii	"unsigned char\000"
 1349      676E6564 
 1349      20636861 
 1349      7200
 1350              	.LASF15:
 1351 00bd 43464752 		.ascii	"CFGR1\000"
 1351      3100
 1352              	.LASF7:
 1353 00c3 6C6F6E67 		.ascii	"long unsigned int\000"
 1353      20756E73 
 1353      69676E65 
 1353      6420696E 
 1353      7400
 1354              	.LASF32:
 1355 00d5 43464752 		.ascii	"CFGR3\000"
 1355      3300
 1356              	.LASF3:
 1357 00db 73686F72 		.ascii	"short unsigned int\000"
 1357      7420756E 
 1357      7369676E 
 1357      65642069 
 1357      6E7400
 1358              	.LASF35:
 1359 00ee 52656164 		.ascii	"ReadADC1Check\000"
 1359      41444331 
 1359      43686563 
 1359      6B00
 1360              	.LASF26:
 1361 00fc 41504231 		.ascii	"APB1RSTR\000"
 1361      52535452 
 1361      00
 1362              	.LASF6:
 1363 0105 5F5F7569 		.ascii	"__uint32_t\000"
 1363      6E743332 
 1363      5F7400
 1364              	.LASF29:
 1365 0110 41504231 		.ascii	"APB1ENR\000"
 1365      454E5200 
 1366              	.LASF25:
 1367 0118 41504232 		.ascii	"APB2RSTR\000"
 1367      52535452 
 1367      00
 1368              	.LASF10:
 1369 0121 756E7369 		.ascii	"unsigned int\000"
ARM GAS  /tmp/cc5xKR5V.s 			page 30


 1369      676E6564 
 1369      20696E74 
 1369      00
 1370              	.LASF41:
 1371 012e 63616C69 		.ascii	"calibrationstatus\000"
 1371      62726174 
 1371      696F6E73 
 1371      74617475 
 1371      7300
 1372              	.LASF37:
 1373 0140 53657441 		.ascii	"SetADC1_SampleTime\000"
 1373      4443315F 
 1373      53616D70 
 1373      6C655469 
 1373      6D6500
 1374              	.LASF9:
 1375 0153 6C6F6E67 		.ascii	"long long unsigned int\000"
 1375      206C6F6E 
 1375      6720756E 
 1375      7369676E 
 1375      65642069 
 1376              	.LASF17:
 1377 016a 534D5052 		.ascii	"SMPR\000"
 1377      00
 1378              	.LASF42:
 1379 016f 474E5520 		.ascii	"GNU C11 5.2.1 20151202 (release) [ARM/embedded-5-br"
 1379      43313120 
 1379      352E322E 
 1379      31203230 
 1379      31353132 
 1380 01a2 616E6368 		.ascii	"anch revision 231848] -mcpu=cortex-m0 -mthumb -g -g"
 1380      20726576 
 1380      6973696F 
 1380      6E203233 
 1380      31383438 
 1381 01d5 64776172 		.ascii	"dwarf-2 -O0 -fomit-frame-pointer -fdata-sections -f"
 1381      662D3220 
 1381      2D4F3020 
 1381      2D666F6D 
 1381      69742D66 
 1382 0208 66756E63 		.ascii	"function-sections\000"
 1382      74696F6E 
 1382      2D736563 
 1382      74696F6E 
 1382      7300
 1383              	.LASF43:
 1384 021a 7372632F 		.ascii	"src/adc.c\000"
 1384      6164632E 
 1384      6300
 1385              	.LASF13:
 1386 0224 73697A65 		.ascii	"sizetype\000"
 1386      74797065 
 1386      00
 1387              	.LASF8:
 1388 022d 6C6F6E67 		.ascii	"long long int\000"
 1388      206C6F6E 
 1388      6720696E 
ARM GAS  /tmp/cc5xKR5V.s 			page 31


 1388      7400
 1389              	.LASF34:
 1390 023b 52656164 		.ascii	"ReadADC1_SameSampleTime\000"
 1390      41444331 
 1390      5F53616D 
 1390      6553616D 
 1390      706C6554 
 1391              	.LASF39:
 1392 0253 746D7072 		.ascii	"tmpreg\000"
 1392      656700
 1393              	.LASF2:
 1394 025a 73686F72 		.ascii	"short int\000"
 1394      7420696E 
 1394      7400
 1395              	.LASF5:
 1396 0264 5F5F7569 		.ascii	"__uint16_t\000"
 1396      6E743136 
 1396      5F7400
 1397              	.LASF11:
 1398 026f 75696E74 		.ascii	"uint16_t\000"
 1398      31365F74 
 1398      00
 1399              	.LASF33:
 1400 0278 5243435F 		.ascii	"RCC_TypeDef\000"
 1400      54797065 
 1400      44656600 
 1401              	.LASF12:
 1402 0284 75696E74 		.ascii	"uint32_t\000"
 1402      33325F74 
 1402      00
 1403              	.LASF4:
 1404 028d 6C6F6E67 		.ascii	"long int\000"
 1404      20696E74 
 1404      00
 1405              	.LASF23:
 1406 0296 4144435F 		.ascii	"ADC_TypeDef\000"
 1406      54797065 
 1406      44656600 
 1407              	.LASF1:
 1408 02a2 7369676E 		.ascii	"signed char\000"
 1408      65642063 
 1408      68617200 
 1409              	.LASF14:
 1410 02ae 52455345 		.ascii	"RESET\000"
 1410      5400
 1411              	.LASF40:
 1412 02b4 63616C69 		.ascii	"calibrationcounter\000"
 1412      62726174 
 1412      696F6E63 
 1412      6F756E74 
 1412      657200
 1413              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/cc5xKR5V.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
     /tmp/cc5xKR5V.s:54     .text.AdcConfig:00000000 $t
     /tmp/cc5xKR5V.s:59     .text.AdcConfig:00000000 AdcConfig
     /tmp/cc5xKR5V.s:385    .text.ADCGetCalibrationFactor:00000000 ADCGetCalibrationFactor
     /tmp/cc5xKR5V.s:163    .text.AdcConfig:00000094 $d
     /tmp/cc5xKR5V.s:170    .text.SetADC1_SampleTime:00000000 $t
     /tmp/cc5xKR5V.s:175    .text.SetADC1_SampleTime:00000000 SetADC1_SampleTime
     /tmp/cc5xKR5V.s:207    .text.SetADC1_SampleTime:00000024 $d
     /tmp/cc5xKR5V.s:212    .text.ReadADC1_SameSampleTime:00000000 $t
     /tmp/cc5xKR5V.s:217    .text.ReadADC1_SameSampleTime:00000000 ReadADC1_SameSampleTime
     /tmp/cc5xKR5V.s:257    .text.ReadADC1_SameSampleTime:00000030 $d
     /tmp/cc5xKR5V.s:262    .text.ReadADC1Check:00000000 $t
     /tmp/cc5xKR5V.s:267    .text.ReadADC1Check:00000000 ReadADC1Check
     /tmp/cc5xKR5V.s:374    .text.ReadADC1Check:0000008c $d
     /tmp/cc5xKR5V.s:380    .text.ADCGetCalibrationFactor:00000000 $t
     /tmp/cc5xKR5V.s:454    .text.ADCGetCalibrationFactor:00000058 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
