ARM GAS  /tmp/ccGLq0Q1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"dsp.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.2.1 20151202 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./src -I ./cmsis_boot -I ./cmsis_core
  18              	@ -imultilib armv6-m
  19              	@ -iprefix /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/
  20              	@ -isysroot /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../arm-none-eabi
  21              	@ -D__USES_INITFINI__ -D STM32F030 src/dsp.c -mcpu=cortex-m0 -mthumb
  22              	@ -auxbase-strip src/dsp.o -g -gdwarf-2 -O0 -Wall -fomit-frame-pointer
  23              	@ -fdata-sections -ffunction-sections -fverbose-asm
  24              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  25              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  26              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  27              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  28              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  29              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  30              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  31              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  32              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  33              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  34              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  35              	@ -fmerge-debug-strings -fomit-frame-pointer -fpeephole
  36              	@ -fprefetch-loop-arrays -freg-struct-return
  37              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  38              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  39              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  40              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  41              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstdarg-opt
  42              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
  43              	@ -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  44              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  45              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  46              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  47              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  48              	@ -mvectorize-with-neon-quad
  49              	
  50              		.text
  51              	.Ltext0:
  52              		.cfi_sections	.debug_frame
  53              		.global	acc
  54              		.section	.bss.acc,"aw",%nobits
  55              		.align	2
  56              		.type	acc, %object
  57              		.size	acc, 4
ARM GAS  /tmp/ccGLq0Q1.s 			page 2


  58              	acc:
  59 0000 00000000 		.space	4
  60              		.global	error_z1
  61              		.section	.bss.error_z1,"aw",%nobits
  62              		.align	1
  63              		.type	error_z1, %object
  64              		.size	error_z1, 2
  65              	error_z1:
  66 0000 0000     		.space	2
  67              		.global	error_z2
  68              		.section	.bss.error_z2,"aw",%nobits
  69              		.align	1
  70              		.type	error_z2, %object
  71              		.size	error_z2, 2
  72              	error_z2:
  73 0000 0000     		.space	2
  74              		.global	d_last
  75              		.section	.bss.d_last,"aw",%nobits
  76              		.align	1
  77              		.type	d_last, %object
  78              		.size	d_last, 2
  79              	d_last:
  80 0000 0000     		.space	2
  81              		.comm	v_ma8,16,4
  82              		.comm	p_ma8,4,4
  83              		.global	total_ma8
  84              		.section	.bss.total_ma8,"aw",%nobits
  85              		.align	2
  86              		.type	total_ma8, %object
  87              		.size	total_ma8, 4
  88              	total_ma8:
  89 0000 00000000 		.space	4
  90              		.comm	v_ma_circular,64,4
  91              		.comm	p_ma_circular,4,4
  92              		.section	.text.RandomGen,"ax",%progbits
  93              		.align	2
  94              		.global	RandomGen
  95              		.code	16
  96              		.thumb_func
  97              		.type	RandomGen, %function
  98              	RandomGen:
  99              	.LFB0:
 100              		.file 1 "src/dsp.c"
   1:src/dsp.c     **** //---------------------------------------------
   2:src/dsp.c     **** // ## @Author: Med
   3:src/dsp.c     **** // ## @Editor: Emacs - ggtags
   4:src/dsp.c     **** // ## @TAGS:   Global
   5:src/dsp.c     **** // ##
   6:src/dsp.c     **** // #### DSP.C #################################
   7:src/dsp.c     **** //---------------------------------------------
   8:src/dsp.c     **** 
   9:src/dsp.c     **** #include "dsp.h"
  10:src/dsp.c     **** 
  11:src/dsp.c     **** 
  12:src/dsp.c     **** #include <stdlib.h>
  13:src/dsp.c     **** #include <math.h>
  14:src/dsp.c     **** 
ARM GAS  /tmp/ccGLq0Q1.s 			page 3


  15:src/dsp.c     **** 
  16:src/dsp.c     **** /* Externals variables ---------------------------------------------------------*/
  17:src/dsp.c     **** #ifdef USE_PID_UPDATED_CONSTANTS
  18:src/dsp.c     **** unsigned short pid_param_p;
  19:src/dsp.c     **** unsigned short pid_param_i;
  20:src/dsp.c     **** unsigned short pid_param_d;
  21:src/dsp.c     **** #endif
  22:src/dsp.c     **** 
  23:src/dsp.c     **** /* Global variables ---------------------------------------------------------*/
  24:src/dsp.c     **** //------- de los PID ---------
  25:src/dsp.c     **** #ifdef USE_PID_CONTROLLERS
  26:src/dsp.c     **** int acc = 0;
  27:src/dsp.c     **** short error_z1 = 0;
  28:src/dsp.c     **** short error_z2 = 0;
  29:src/dsp.c     **** short d_last = 0;
  30:src/dsp.c     **** #endif
  31:src/dsp.c     **** 
  32:src/dsp.c     **** #ifdef USE_MA8_CIRCULAR
  33:src/dsp.c     **** unsigned short v_ma8 [8];
  34:src/dsp.c     **** unsigned short * p_ma8;
  35:src/dsp.c     **** unsigned int total_ma8 = 0;
  36:src/dsp.c     **** #endif
  37:src/dsp.c     **** #ifdef USE_MA32_CIRCULAR
  38:src/dsp.c     **** unsigned short v_ma_circular [32];
  39:src/dsp.c     **** unsigned short * p_ma_circular;
  40:src/dsp.c     **** #endif
  41:src/dsp.c     **** /* Module Definitions ---------------------------------------------------------*/
  42:src/dsp.c     **** // #define PID_CONSTANT_DIVIDER    10    //todos se dividen por 1024
  43:src/dsp.c     **** // #define PID_CONSTANT_DIVIDER    8    //todos se dividen por 256
  44:src/dsp.c     **** #define PID_CONSTANT_DIVIDER    7    //todos se dividen por 128
  45:src/dsp.c     **** // #define PID_CONSTANT_DIVIDER    6    //todos se dividen por 64
  46:src/dsp.c     **** 
  47:src/dsp.c     **** //from microinverter01.py
  48:src/dsp.c     **** // #define KPV	14    //0.108
  49:src/dsp.c     **** // #define KIV	11    //0.08333
  50:src/dsp.c     **** // #define KDV	0
  51:src/dsp.c     **** 
  52:src/dsp.c     **** //estos funcionan bastante bien para tension en vacio, prende apaga alrededor de 100V
  53:src/dsp.c     **** //usan divisor por 128, ajusta en 35.6V, este con carga ajusta mejor 34.3 a 35.6
  54:src/dsp.c     **** #define KPV	5    //kp_dig = 0.039
  55:src/dsp.c     **** #define KIV	3    //ki_dig = 0.023
  56:src/dsp.c     **** #define KDV	0
  57:src/dsp.c     **** 
  58:src/dsp.c     **** //estos funcionan bastante bien para tension en vacio, prende apaga alrededor de 80V
  59:src/dsp.c     **** //usan divisor por 128, ajustan en 34.3V, ajusta muy rapido diferentes cambios de tension
  60:src/dsp.c     **** //con carga no ajusta tan bien 32.3 a 34.6
  61:src/dsp.c     **** // #define KPV	19    //kp_dig = 0.15
  62:src/dsp.c     **** // #define KIV	1    //ki_dig = 0.0078
  63:src/dsp.c     **** // #define KDV	182    //kd_dig = 1.42
  64:src/dsp.c     **** 
  65:src/dsp.c     **** // #define KPV	2    //kp_dig = 0.01
  66:src/dsp.c     **** // #define KIV	1    //ki_dig = 0.0000416
  67:src/dsp.c     **** // #define KDV	24    //kd_dig = 0.024
  68:src/dsp.c     **** 
  69:src/dsp.c     **** 
  70:src/dsp.c     **** #define K1V (KPV + KIV + KDV)
  71:src/dsp.c     **** #define K2V (KPV + KDV + KDV)
ARM GAS  /tmp/ccGLq0Q1.s 			page 4


  72:src/dsp.c     **** #define K3V (KDV)
  73:src/dsp.c     **** 
  74:src/dsp.c     **** /* Module functions ---------------------------------------------------------*/
  75:src/dsp.c     **** 
  76:src/dsp.c     **** unsigned short RandomGen (unsigned int seed)
  77:src/dsp.c     **** {
 101              		.loc 1 77 0
 102              		.cfi_startproc
 103 0000 00B5     		push	{lr}	@
 104              	.LCFI0:
 105              		.cfi_def_cfa_offset 4
 106              		.cfi_offset 14, -4
 107 0002 85B0     		sub	sp, sp, #20	@,,
 108              	.LCFI1:
 109              		.cfi_def_cfa_offset 24
 110 0004 0190     		str	r0, [sp, #4]	@ seed, seed
  78:src/dsp.c     **** 	unsigned int random;
  79:src/dsp.c     **** 
  80:src/dsp.c     **** 	//Random Generator
  81:src/dsp.c     **** 	srand (seed);
 111              		.loc 1 81 0
 112 0006 019B     		ldr	r3, [sp, #4]	@ tmp113, seed
 113 0008 1800     		movs	r0, r3	@, tmp113
 114 000a FFF7FEFF 		bl	srand	@
  82:src/dsp.c     **** 	random = rand();
 115              		.loc 1 82 0
 116 000e FFF7FEFF 		bl	rand	@
 117 0012 0300     		movs	r3, r0	@ D.6038,
 118 0014 0393     		str	r3, [sp, #12]	@ D.6038, random
  83:src/dsp.c     **** 
  84:src/dsp.c     **** 	return (unsigned short) random;
 119              		.loc 1 84 0
 120 0016 039B     		ldr	r3, [sp, #12]	@ tmp115, random
 121 0018 9BB2     		uxth	r3, r3	@ D.6039, tmp114
  85:src/dsp.c     **** 
  86:src/dsp.c     **** }
 122              		.loc 1 86 0
 123 001a 1800     		movs	r0, r3	@, <retval>
 124 001c 05B0     		add	sp, sp, #20	@,,
 125              		@ sp needed	@
 126 001e 00BD     		pop	{pc}
 127              		.cfi_endproc
 128              	.LFE0:
 129              		.size	RandomGen, .-RandomGen
 130              		.section	.text.MA32Circular_Start,"ax",%progbits
 131              		.align	2
 132              		.global	MA32Circular_Start
 133              		.code	16
 134              		.thumb_func
 135              		.type	MA32Circular_Start, %function
 136              	MA32Circular_Start:
 137              	.LFB1:
  87:src/dsp.c     **** 
  88:src/dsp.c     **** #ifdef USE_MA32_CIRCULAR
  89:src/dsp.c     **** //seteo de punteros del filtro circular
  90:src/dsp.c     **** void MA32Circular_Start (void)
  91:src/dsp.c     **** {
ARM GAS  /tmp/ccGLq0Q1.s 			page 5


 138              		.loc 1 91 0
 139              		.cfi_startproc
  92:src/dsp.c     ****     p_ma_circular = &v_ma_circular[0];
 140              		.loc 1 92 0
 141 0000 024B     		ldr	r3, .L4	@ tmp110,
 142 0002 034A     		ldr	r2, .L4+4	@ tmp111,
 143 0004 1A60     		str	r2, [r3]	@ tmp111, p_ma_circular
  93:src/dsp.c     **** }
 144              		.loc 1 93 0
 145 0006 C046     		nop
 146              		@ sp needed	@
 147 0008 7047     		bx	lr
 148              	.L5:
 149 000a C046     		.align	2
 150              	.L4:
 151 000c 00000000 		.word	p_ma_circular
 152 0010 00000000 		.word	v_ma_circular
 153              		.cfi_endproc
 154              	.LFE1:
 155              		.size	MA32Circular_Start, .-MA32Circular_Start
 156              		.section	.text.MA32Circular_Reset,"ax",%progbits
 157              		.align	2
 158              		.global	MA32Circular_Reset
 159              		.code	16
 160              		.thumb_func
 161              		.type	MA32Circular_Reset, %function
 162              	MA32Circular_Reset:
 163              	.LFB2:
  94:src/dsp.c     **** 
  95:src/dsp.c     **** //reset de punteros al filtro circular
  96:src/dsp.c     **** void MA32Circular_Reset (void)
  97:src/dsp.c     **** {
 164              		.loc 1 97 0
 165              		.cfi_startproc
 166 0000 00B5     		push	{lr}	@
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 14, -4
 170 0002 83B0     		sub	sp, sp, #12	@,,
 171              	.LCFI3:
 172              		.cfi_def_cfa_offset 16
  98:src/dsp.c     ****     unsigned char i;
  99:src/dsp.c     ****     
 100:src/dsp.c     ****     MA32Circular_Start();
 173              		.loc 1 100 0
 174 0004 FFF7FEFF 		bl	MA32Circular_Start	@
 101:src/dsp.c     ****     for (i = 0; i < 32; i++)
 175              		.loc 1 101 0
 176 0008 6B46     		mov	r3, sp	@ tmp126,
 177 000a 0733     		adds	r3, r3, #7	@ tmp112,
 178 000c 0022     		movs	r2, #0	@ tmp113,
 179 000e 1A70     		strb	r2, [r3]	@ tmp114, i
 180 0010 0DE0     		b	.L7	@
 181              	.L8:
 102:src/dsp.c     ****         v_ma_circular[i] = 0;
 182              		.loc 1 102 0 discriminator 3
 183 0012 6B46     		mov	r3, sp	@ tmp127,
ARM GAS  /tmp/ccGLq0Q1.s 			page 6


 184 0014 0733     		adds	r3, r3, #7	@ tmp115,
 185 0016 1A78     		ldrb	r2, [r3]	@ D.6040, i
 186 0018 094B     		ldr	r3, .L9	@ tmp116,
 187 001a 5200     		lsls	r2, r2, #1	@ tmp117, D.6040,
 188 001c 0021     		movs	r1, #0	@ tmp118,
 189 001e D152     		strh	r1, [r2, r3]	@ tmp119, v_ma_circular
 101:src/dsp.c     ****     for (i = 0; i < 32; i++)
 190              		.loc 1 101 0 discriminator 3
 191 0020 6B46     		mov	r3, sp	@ tmp128,
 192 0022 0733     		adds	r3, r3, #7	@ tmp120,
 193 0024 1A78     		ldrb	r2, [r3]	@ D.6041, i
 194 0026 6B46     		mov	r3, sp	@ tmp129,
 195 0028 0733     		adds	r3, r3, #7	@ tmp121,
 196 002a 0132     		adds	r2, r2, #1	@ tmp122,
 197 002c 1A70     		strb	r2, [r3]	@ tmp123, i
 198              	.L7:
 101:src/dsp.c     ****     for (i = 0; i < 32; i++)
 199              		.loc 1 101 0 is_stmt 0 discriminator 1
 200 002e 6B46     		mov	r3, sp	@ tmp130,
 201 0030 0733     		adds	r3, r3, #7	@ tmp124,
 202 0032 1B78     		ldrb	r3, [r3]	@ tmp125, i
 203 0034 1F2B     		cmp	r3, #31	@ tmp125,
 204 0036 ECD9     		bls	.L8	@,
 103:src/dsp.c     **** }
 205              		.loc 1 103 0 is_stmt 1
 206 0038 C046     		nop
 207 003a 03B0     		add	sp, sp, #12	@,,
 208              		@ sp needed	@
 209 003c 00BD     		pop	{pc}
 210              	.L10:
 211 003e C046     		.align	2
 212              	.L9:
 213 0040 00000000 		.word	v_ma_circular
 214              		.cfi_endproc
 215              	.LFE2:
 216              		.size	MA32Circular_Reset, .-MA32Circular_Reset
 217              		.section	.text.MA32Circular_Load,"ax",%progbits
 218              		.align	2
 219              		.global	MA32Circular_Load
 220              		.code	16
 221              		.thumb_func
 222              		.type	MA32Circular_Load, %function
 223              	MA32Circular_Load:
 224              	.LFB3:
 104:src/dsp.c     **** 
 105:src/dsp.c     **** void MA32Circular_Load (unsigned short new_sample)
 106:src/dsp.c     **** {
 225              		.loc 1 106 0
 226              		.cfi_startproc
 227 0000 82B0     		sub	sp, sp, #8	@,,
 228              	.LCFI4:
 229              		.cfi_def_cfa_offset 8
 230 0002 0200     		movs	r2, r0	@ tmp115, new_sample
 231 0004 6B46     		mov	r3, sp	@ tmp126,
 232 0006 0633     		adds	r3, r3, #6	@ tmp116,
 233 0008 1A80     		strh	r2, [r3]	@ tmp117, new_sample
 107:src/dsp.c     ****     *p_ma_circular = new_sample;
ARM GAS  /tmp/ccGLq0Q1.s 			page 7


 234              		.loc 1 107 0
 235 000a 0B4B     		ldr	r3, .L15	@ tmp118,
 236 000c 1B68     		ldr	r3, [r3]	@ D.6042, p_ma_circular
 237 000e 6A46     		mov	r2, sp	@ tmp127,
 238 0010 0632     		adds	r2, r2, #6	@ tmp119,
 239 0012 1288     		ldrh	r2, [r2]	@ tmp120, new_sample
 240 0014 1A80     		strh	r2, [r3]	@ tmp120, *_3
 108:src/dsp.c     **** 
 109:src/dsp.c     ****     if (p_ma_circular < (v_ma_circular + 31))
 241              		.loc 1 109 0
 242 0016 084B     		ldr	r3, .L15	@ tmp121,
 243 0018 1A68     		ldr	r2, [r3]	@ D.6042, p_ma_circular
 244 001a 084B     		ldr	r3, .L15+4	@ D.6042,
 245 001c 9A42     		cmp	r2, r3	@ D.6042, D.6042
 246 001e 05D2     		bcs	.L12	@,
 110:src/dsp.c     ****         p_ma_circular += 1;
 247              		.loc 1 110 0
 248 0020 054B     		ldr	r3, .L15	@ tmp122,
 249 0022 1B68     		ldr	r3, [r3]	@ D.6042, p_ma_circular
 250 0024 9A1C     		adds	r2, r3, #2	@ D.6042, D.6042,
 251 0026 044B     		ldr	r3, .L15	@ tmp123,
 252 0028 1A60     		str	r2, [r3]	@ D.6042, p_ma_circular
 111:src/dsp.c     ****     else
 112:src/dsp.c     ****         p_ma_circular = &v_ma_circular[0];
 113:src/dsp.c     **** 
 114:src/dsp.c     **** }
 253              		.loc 1 114 0
 254 002a 02E0     		b	.L14	@
 255              	.L12:
 112:src/dsp.c     **** 
 256              		.loc 1 112 0
 257 002c 024B     		ldr	r3, .L15	@ tmp124,
 258 002e 044A     		ldr	r2, .L15+8	@ tmp125,
 259 0030 1A60     		str	r2, [r3]	@ tmp125, p_ma_circular
 260              	.L14:
 261              		.loc 1 114 0
 262 0032 C046     		nop
 263 0034 02B0     		add	sp, sp, #8	@,,
 264              		@ sp needed	@
 265 0036 7047     		bx	lr
 266              	.L16:
 267              		.align	2
 268              	.L15:
 269 0038 00000000 		.word	p_ma_circular
 270 003c 3E000000 		.word	v_ma_circular+62
 271 0040 00000000 		.word	v_ma_circular
 272              		.cfi_endproc
 273              	.LFE3:
 274              		.size	MA32Circular_Load, .-MA32Circular_Load
 275              		.section	.text.MA32Circular_Calc,"ax",%progbits
 276              		.align	2
 277              		.global	MA32Circular_Calc
 278              		.code	16
 279              		.thumb_func
 280              		.type	MA32Circular_Calc, %function
 281              	MA32Circular_Calc:
 282              	.LFB4:
ARM GAS  /tmp/ccGLq0Q1.s 			page 8


 115:src/dsp.c     **** 
 116:src/dsp.c     **** unsigned short MA32Circular_Calc (void)
 117:src/dsp.c     **** {
 283              		.loc 1 117 0
 284              		.cfi_startproc
 285 0000 82B0     		sub	sp, sp, #8	@,,
 286              	.LCFI5:
 287              		.cfi_def_cfa_offset 8
 118:src/dsp.c     ****     unsigned int total_ma;
 119:src/dsp.c     **** 
 120:src/dsp.c     ****     total_ma = v_ma_circular[0] + v_ma_circular[1] + v_ma_circular[2] + v_ma_circular[3] +
 288              		.loc 1 120 0
 289 0002 334B     		ldr	r3, .L19	@ tmp208,
 290 0004 1B88     		ldrh	r3, [r3]	@ D.6043, v_ma_circular
 291 0006 1A00     		movs	r2, r3	@ D.6044, D.6043
 292 0008 314B     		ldr	r3, .L19	@ tmp209,
 293 000a 5B88     		ldrh	r3, [r3, #2]	@ D.6043,
 294 000c D318     		adds	r3, r2, r3	@ D.6044, D.6044, D.6044
 295 000e 304A     		ldr	r2, .L19	@ tmp210,
 296 0010 9288     		ldrh	r2, [r2, #4]	@ D.6043,
 297 0012 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 298 0014 2E4A     		ldr	r2, .L19	@ tmp211,
 299 0016 D288     		ldrh	r2, [r2, #6]	@ D.6043,
 300 0018 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 121:src/dsp.c     ****         v_ma_circular[4] + v_ma_circular[5] + v_ma_circular[6] + v_ma_circular[7] +
 301              		.loc 1 121 0
 302 001a 2D4A     		ldr	r2, .L19	@ tmp212,
 303 001c 1289     		ldrh	r2, [r2, #8]	@ D.6043,
 120:src/dsp.c     ****         v_ma_circular[4] + v_ma_circular[5] + v_ma_circular[6] + v_ma_circular[7] +
 304              		.loc 1 120 0
 305 001e 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 306              		.loc 1 121 0
 307 0020 2B4A     		ldr	r2, .L19	@ tmp213,
 308 0022 5289     		ldrh	r2, [r2, #10]	@ D.6043,
 309 0024 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 310 0026 2A4A     		ldr	r2, .L19	@ tmp214,
 311 0028 9289     		ldrh	r2, [r2, #12]	@ D.6043,
 312 002a 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 313 002c 284A     		ldr	r2, .L19	@ tmp215,
 314 002e D289     		ldrh	r2, [r2, #14]	@ D.6043,
 315 0030 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 122:src/dsp.c     ****         v_ma_circular[8] + v_ma_circular[9] + v_ma_circular[10] + v_ma_circular[11] +
 316              		.loc 1 122 0
 317 0032 274A     		ldr	r2, .L19	@ tmp216,
 318 0034 128A     		ldrh	r2, [r2, #16]	@ D.6043,
 121:src/dsp.c     ****         v_ma_circular[4] + v_ma_circular[5] + v_ma_circular[6] + v_ma_circular[7] +
 319              		.loc 1 121 0
 320 0036 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 321              		.loc 1 122 0
 322 0038 254A     		ldr	r2, .L19	@ tmp217,
 323 003a 528A     		ldrh	r2, [r2, #18]	@ D.6043,
 324 003c 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 325 003e 244A     		ldr	r2, .L19	@ tmp218,
 326 0040 928A     		ldrh	r2, [r2, #20]	@ D.6043,
 327 0042 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 328 0044 224A     		ldr	r2, .L19	@ tmp219,
 329 0046 D28A     		ldrh	r2, [r2, #22]	@ D.6043,
ARM GAS  /tmp/ccGLq0Q1.s 			page 9


 330 0048 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 123:src/dsp.c     ****         v_ma_circular[12] + v_ma_circular[13] + v_ma_circular[14] + v_ma_circular[15] +
 331              		.loc 1 123 0
 332 004a 214A     		ldr	r2, .L19	@ tmp220,
 333 004c 128B     		ldrh	r2, [r2, #24]	@ D.6043,
 122:src/dsp.c     ****         v_ma_circular[8] + v_ma_circular[9] + v_ma_circular[10] + v_ma_circular[11] +
 334              		.loc 1 122 0
 335 004e 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 336              		.loc 1 123 0
 337 0050 1F4A     		ldr	r2, .L19	@ tmp221,
 338 0052 528B     		ldrh	r2, [r2, #26]	@ D.6043,
 339 0054 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 340 0056 1E4A     		ldr	r2, .L19	@ tmp222,
 341 0058 928B     		ldrh	r2, [r2, #28]	@ D.6043,
 342 005a 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 343 005c 1C4A     		ldr	r2, .L19	@ tmp223,
 344 005e D28B     		ldrh	r2, [r2, #30]	@ D.6043,
 345 0060 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 124:src/dsp.c     ****         v_ma_circular[16] + v_ma_circular[17] + v_ma_circular[18] + v_ma_circular[19] +
 346              		.loc 1 124 0
 347 0062 1B4A     		ldr	r2, .L19	@ tmp224,
 348 0064 128C     		ldrh	r2, [r2, #32]	@ D.6043,
 123:src/dsp.c     ****         v_ma_circular[12] + v_ma_circular[13] + v_ma_circular[14] + v_ma_circular[15] +
 349              		.loc 1 123 0
 350 0066 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 351              		.loc 1 124 0
 352 0068 194A     		ldr	r2, .L19	@ tmp225,
 353 006a 528C     		ldrh	r2, [r2, #34]	@ D.6043,
 354 006c 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 355 006e 184A     		ldr	r2, .L19	@ tmp226,
 356 0070 928C     		ldrh	r2, [r2, #36]	@ D.6043,
 357 0072 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 358 0074 164A     		ldr	r2, .L19	@ tmp227,
 359 0076 D28C     		ldrh	r2, [r2, #38]	@ D.6043,
 360 0078 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 125:src/dsp.c     ****         v_ma_circular[20] + v_ma_circular[21] + v_ma_circular[22] + v_ma_circular[23] +
 361              		.loc 1 125 0
 362 007a 154A     		ldr	r2, .L19	@ tmp228,
 363 007c 128D     		ldrh	r2, [r2, #40]	@ D.6043,
 124:src/dsp.c     ****         v_ma_circular[16] + v_ma_circular[17] + v_ma_circular[18] + v_ma_circular[19] +
 364              		.loc 1 124 0
 365 007e 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 366              		.loc 1 125 0
 367 0080 134A     		ldr	r2, .L19	@ tmp229,
 368 0082 528D     		ldrh	r2, [r2, #42]	@ D.6043,
 369 0084 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 370 0086 124A     		ldr	r2, .L19	@ tmp230,
 371 0088 928D     		ldrh	r2, [r2, #44]	@ D.6043,
 372 008a 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 373 008c 104A     		ldr	r2, .L19	@ tmp231,
 374 008e D28D     		ldrh	r2, [r2, #46]	@ D.6043,
 375 0090 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 126:src/dsp.c     ****         v_ma_circular[24] + v_ma_circular[25] + v_ma_circular[26] + v_ma_circular[27] +
 376              		.loc 1 126 0
 377 0092 0F4A     		ldr	r2, .L19	@ tmp232,
 378 0094 128E     		ldrh	r2, [r2, #48]	@ D.6043,
 125:src/dsp.c     ****         v_ma_circular[20] + v_ma_circular[21] + v_ma_circular[22] + v_ma_circular[23] +
ARM GAS  /tmp/ccGLq0Q1.s 			page 10


 379              		.loc 1 125 0
 380 0096 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 381              		.loc 1 126 0
 382 0098 0D4A     		ldr	r2, .L19	@ tmp233,
 383 009a 528E     		ldrh	r2, [r2, #50]	@ D.6043,
 384 009c 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 385 009e 0C4A     		ldr	r2, .L19	@ tmp234,
 386 00a0 928E     		ldrh	r2, [r2, #52]	@ D.6043,
 387 00a2 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 388 00a4 0A4A     		ldr	r2, .L19	@ tmp235,
 389 00a6 D28E     		ldrh	r2, [r2, #54]	@ D.6043,
 390 00a8 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 127:src/dsp.c     ****         v_ma_circular[28] + v_ma_circular[29] + v_ma_circular[30] + v_ma_circular[31];
 391              		.loc 1 127 0
 392 00aa 094A     		ldr	r2, .L19	@ tmp236,
 393 00ac 128F     		ldrh	r2, [r2, #56]	@ D.6043,
 126:src/dsp.c     ****         v_ma_circular[24] + v_ma_circular[25] + v_ma_circular[26] + v_ma_circular[27] +
 394              		.loc 1 126 0
 395 00ae 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 396              		.loc 1 127 0
 397 00b0 074A     		ldr	r2, .L19	@ tmp237,
 398 00b2 528F     		ldrh	r2, [r2, #58]	@ D.6043,
 399 00b4 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 400 00b6 064A     		ldr	r2, .L19	@ tmp238,
 401 00b8 928F     		ldrh	r2, [r2, #60]	@ D.6043,
 402 00ba 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 403 00bc 044A     		ldr	r2, .L19	@ tmp239,
 404 00be D28F     		ldrh	r2, [r2, #62]	@ D.6043,
 405 00c0 9B18     		adds	r3, r3, r2	@ D.6044, D.6044, D.6044
 120:src/dsp.c     ****         v_ma_circular[4] + v_ma_circular[5] + v_ma_circular[6] + v_ma_circular[7] +
 406              		.loc 1 120 0
 407 00c2 0193     		str	r3, [sp, #4]	@ D.6044, total_ma
 128:src/dsp.c     **** 
 129:src/dsp.c     ****     return (unsigned short) (total_ma >> 5);
 408              		.loc 1 129 0
 409 00c4 019B     		ldr	r3, [sp, #4]	@ tmp240, total_ma
 410 00c6 5B09     		lsrs	r3, r3, #5	@ D.6045, tmp240,
 411 00c8 9BB2     		uxth	r3, r3	@ D.6043, D.6045
 130:src/dsp.c     **** }
 412              		.loc 1 130 0
 413 00ca 1800     		movs	r0, r3	@, <retval>
 414 00cc 02B0     		add	sp, sp, #8	@,,
 415              		@ sp needed	@
 416 00ce 7047     		bx	lr
 417              	.L20:
 418              		.align	2
 419              	.L19:
 420 00d0 00000000 		.word	v_ma_circular
 421              		.cfi_endproc
 422              	.LFE4:
 423              		.size	MA32Circular_Calc, .-MA32Circular_Calc
 424              		.section	.text.MA8Circular_Reset,"ax",%progbits
 425              		.align	2
 426              		.global	MA8Circular_Reset
 427              		.code	16
 428              		.thumb_func
 429              		.type	MA8Circular_Reset, %function
ARM GAS  /tmp/ccGLq0Q1.s 			page 11


 430              	MA8Circular_Reset:
 431              	.LFB5:
 131:src/dsp.c     **** 
 132:src/dsp.c     **** #endif
 133:src/dsp.c     **** 
 134:src/dsp.c     **** #ifdef USE_MA8_CIRCULAR
 135:src/dsp.c     **** //reset de punteros al filtro circular
 136:src/dsp.c     **** void MA8Circular_Reset (void)
 137:src/dsp.c     **** {
 432              		.loc 1 137 0
 433              		.cfi_startproc
 434 0000 82B0     		sub	sp, sp, #8	@,,
 435              	.LCFI6:
 436              		.cfi_def_cfa_offset 8
 138:src/dsp.c     ****     unsigned char i;
 139:src/dsp.c     **** 
 140:src/dsp.c     ****     for (i = 0; i < 8; i++)
 437              		.loc 1 140 0
 438 0002 6B46     		mov	r3, sp	@ tmp130,
 439 0004 0733     		adds	r3, r3, #7	@ tmp112,
 440 0006 0022     		movs	r2, #0	@ tmp113,
 441 0008 1A70     		strb	r2, [r3]	@ tmp114, i
 442 000a 0DE0     		b	.L22	@
 443              	.L23:
 141:src/dsp.c     ****         v_ma8[i] = 0;
 444              		.loc 1 141 0 discriminator 3
 445 000c 6B46     		mov	r3, sp	@ tmp131,
 446 000e 0733     		adds	r3, r3, #7	@ tmp115,
 447 0010 1A78     		ldrb	r2, [r3]	@ D.6046, i
 448 0012 0C4B     		ldr	r3, .L24	@ tmp116,
 449 0014 5200     		lsls	r2, r2, #1	@ tmp117, D.6046,
 450 0016 0021     		movs	r1, #0	@ tmp118,
 451 0018 D152     		strh	r1, [r2, r3]	@ tmp119, v_ma8
 140:src/dsp.c     ****         v_ma8[i] = 0;
 452              		.loc 1 140 0 discriminator 3
 453 001a 6B46     		mov	r3, sp	@ tmp132,
 454 001c 0733     		adds	r3, r3, #7	@ tmp120,
 455 001e 1A78     		ldrb	r2, [r3]	@ D.6047, i
 456 0020 6B46     		mov	r3, sp	@ tmp133,
 457 0022 0733     		adds	r3, r3, #7	@ tmp121,
 458 0024 0132     		adds	r2, r2, #1	@ tmp122,
 459 0026 1A70     		strb	r2, [r3]	@ tmp123, i
 460              	.L22:
 140:src/dsp.c     ****         v_ma8[i] = 0;
 461              		.loc 1 140 0 is_stmt 0 discriminator 1
 462 0028 6B46     		mov	r3, sp	@ tmp134,
 463 002a 0733     		adds	r3, r3, #7	@ tmp124,
 464 002c 1B78     		ldrb	r3, [r3]	@ tmp125, i
 465 002e 072B     		cmp	r3, #7	@ tmp125,
 466 0030 ECD9     		bls	.L23	@,
 142:src/dsp.c     **** 
 143:src/dsp.c     ****     p_ma8 = &v_ma8[0];
 467              		.loc 1 143 0 is_stmt 1
 468 0032 054B     		ldr	r3, .L24+4	@ tmp126,
 469 0034 034A     		ldr	r2, .L24	@ tmp127,
 470 0036 1A60     		str	r2, [r3]	@ tmp127, p_ma8
 144:src/dsp.c     ****     total_ma8 = 0;
ARM GAS  /tmp/ccGLq0Q1.s 			page 12


 471              		.loc 1 144 0
 472 0038 044B     		ldr	r3, .L24+8	@ tmp128,
 473 003a 0022     		movs	r2, #0	@ tmp129,
 474 003c 1A60     		str	r2, [r3]	@ tmp129, total_ma8
 145:src/dsp.c     **** }
 475              		.loc 1 145 0
 476 003e C046     		nop
 477 0040 02B0     		add	sp, sp, #8	@,,
 478              		@ sp needed	@
 479 0042 7047     		bx	lr
 480              	.L25:
 481              		.align	2
 482              	.L24:
 483 0044 00000000 		.word	v_ma8
 484 0048 00000000 		.word	p_ma8
 485 004c 00000000 		.word	total_ma8
 486              		.cfi_endproc
 487              	.LFE5:
 488              		.size	MA8Circular_Reset, .-MA8Circular_Reset
 489              		.section	.text.MA8Circular,"ax",%progbits
 490              		.align	2
 491              		.global	MA8Circular
 492              		.code	16
 493              		.thumb_func
 494              		.type	MA8Circular, %function
 495              	MA8Circular:
 496              	.LFB6:
 146:src/dsp.c     **** 
 147:src/dsp.c     **** //Filtro circular, necesito activar previamente con MA8Circular_Start()
 148:src/dsp.c     **** //MA8Circular_Reset() vacia el filtro
 149:src/dsp.c     **** //recibe: new_sample
 150:src/dsp.c     **** //contesta: resultado
 151:src/dsp.c     **** unsigned short MA8Circular (unsigned short new_sample)
 152:src/dsp.c     **** {
 497              		.loc 1 152 0
 498              		.cfi_startproc
 499 0000 82B0     		sub	sp, sp, #8	@,,
 500              	.LCFI7:
 501              		.cfi_def_cfa_offset 8
 502 0002 0200     		movs	r2, r0	@ tmp127, new_sample
 503 0004 6B46     		mov	r3, sp	@ tmp146,
 504 0006 0633     		adds	r3, r3, #6	@ tmp128,
 505 0008 1A80     		strh	r2, [r3]	@ tmp129, new_sample
 153:src/dsp.c     ****     total_ma8 -= *p_ma8;
 506              		.loc 1 153 0
 507 000a 154B     		ldr	r3, .L30	@ tmp130,
 508 000c 1A68     		ldr	r2, [r3]	@ D.6048, total_ma8
 509 000e 154B     		ldr	r3, .L30+4	@ tmp131,
 510 0010 1B68     		ldr	r3, [r3]	@ D.6049, p_ma8
 511 0012 1B88     		ldrh	r3, [r3]	@ D.6050, *_4
 512 0014 D21A     		subs	r2, r2, r3	@ D.6048, D.6048, D.6048
 513 0016 124B     		ldr	r3, .L30	@ tmp132,
 514 0018 1A60     		str	r2, [r3]	@ D.6048, total_ma8
 154:src/dsp.c     ****     total_ma8 += new_sample;
 515              		.loc 1 154 0
 516 001a 6B46     		mov	r3, sp	@ tmp147,
 517 001c 0633     		adds	r3, r3, #6	@ tmp133,
ARM GAS  /tmp/ccGLq0Q1.s 			page 13


 518 001e 1A88     		ldrh	r2, [r3]	@ D.6048, new_sample
 519 0020 0F4B     		ldr	r3, .L30	@ tmp134,
 520 0022 1B68     		ldr	r3, [r3]	@ D.6048, total_ma8
 521 0024 D218     		adds	r2, r2, r3	@ D.6048, D.6048, D.6048
 522 0026 0E4B     		ldr	r3, .L30	@ tmp135,
 523 0028 1A60     		str	r2, [r3]	@ D.6048, total_ma8
 155:src/dsp.c     ****     *p_ma8 = new_sample;
 524              		.loc 1 155 0
 525 002a 0E4B     		ldr	r3, .L30+4	@ tmp136,
 526 002c 1B68     		ldr	r3, [r3]	@ D.6049, p_ma8
 527 002e 6A46     		mov	r2, sp	@ tmp148,
 528 0030 0632     		adds	r2, r2, #6	@ tmp137,
 529 0032 1288     		ldrh	r2, [r2]	@ tmp138, new_sample
 530 0034 1A80     		strh	r2, [r3]	@ tmp138, *_14
 156:src/dsp.c     **** 
 157:src/dsp.c     ****     if (p_ma8 < (v_ma8 + 7))
 531              		.loc 1 157 0
 532 0036 0B4B     		ldr	r3, .L30+4	@ tmp139,
 533 0038 1A68     		ldr	r2, [r3]	@ D.6049, p_ma8
 534 003a 0B4B     		ldr	r3, .L30+8	@ D.6049,
 535 003c 9A42     		cmp	r2, r3	@ D.6049, D.6049
 536 003e 05D2     		bcs	.L27	@,
 158:src/dsp.c     ****         p_ma8 += 1;
 537              		.loc 1 158 0
 538 0040 084B     		ldr	r3, .L30+4	@ tmp140,
 539 0042 1B68     		ldr	r3, [r3]	@ D.6049, p_ma8
 540 0044 9A1C     		adds	r2, r3, #2	@ D.6049, D.6049,
 541 0046 074B     		ldr	r3, .L30+4	@ tmp141,
 542 0048 1A60     		str	r2, [r3]	@ D.6049, p_ma8
 543 004a 02E0     		b	.L28	@
 544              	.L27:
 159:src/dsp.c     ****     else
 160:src/dsp.c     ****         p_ma8 = &v_ma8[0];
 545              		.loc 1 160 0
 546 004c 054B     		ldr	r3, .L30+4	@ tmp142,
 547 004e 074A     		ldr	r2, .L30+12	@ tmp143,
 548 0050 1A60     		str	r2, [r3]	@ tmp143, p_ma8
 549              	.L28:
 161:src/dsp.c     **** 
 162:src/dsp.c     ****     return (unsigned short) (total_ma8 >> 3);
 550              		.loc 1 162 0
 551 0052 034B     		ldr	r3, .L30	@ tmp144,
 552 0054 1B68     		ldr	r3, [r3]	@ D.6048, total_ma8
 553 0056 DB08     		lsrs	r3, r3, #3	@ D.6048, D.6048,
 554 0058 9BB2     		uxth	r3, r3	@ D.6050, D.6048
 163:src/dsp.c     **** }
 555              		.loc 1 163 0
 556 005a 1800     		movs	r0, r3	@, <retval>
 557 005c 02B0     		add	sp, sp, #8	@,,
 558              		@ sp needed	@
 559 005e 7047     		bx	lr
 560              	.L31:
 561              		.align	2
 562              	.L30:
 563 0060 00000000 		.word	total_ma8
 564 0064 00000000 		.word	p_ma8
 565 0068 0E000000 		.word	v_ma8+14
ARM GAS  /tmp/ccGLq0Q1.s 			page 14


 566 006c 00000000 		.word	v_ma8
 567              		.cfi_endproc
 568              	.LFE6:
 569              		.size	MA8Circular, .-MA8Circular
 570              		.section	.text.MA8Circular_Only_Load,"ax",%progbits
 571              		.align	2
 572              		.global	MA8Circular_Only_Load
 573              		.code	16
 574              		.thumb_func
 575              		.type	MA8Circular_Only_Load, %function
 576              	MA8Circular_Only_Load:
 577              	.LFB7:
 164:src/dsp.c     **** 
 165:src/dsp.c     **** void MA8Circular_Only_Load (unsigned short new_sample)
 166:src/dsp.c     **** {
 578              		.loc 1 166 0
 579              		.cfi_startproc
 580 0000 82B0     		sub	sp, sp, #8	@,,
 581              	.LCFI8:
 582              		.cfi_def_cfa_offset 8
 583 0002 0200     		movs	r2, r0	@ tmp115, new_sample
 584 0004 6B46     		mov	r3, sp	@ tmp126,
 585 0006 0633     		adds	r3, r3, #6	@ tmp116,
 586 0008 1A80     		strh	r2, [r3]	@ tmp117, new_sample
 167:src/dsp.c     ****     *p_ma8 = new_sample;
 587              		.loc 1 167 0
 588 000a 0B4B     		ldr	r3, .L36	@ tmp118,
 589 000c 1B68     		ldr	r3, [r3]	@ D.6051, p_ma8
 590 000e 6A46     		mov	r2, sp	@ tmp127,
 591 0010 0632     		adds	r2, r2, #6	@ tmp119,
 592 0012 1288     		ldrh	r2, [r2]	@ tmp120, new_sample
 593 0014 1A80     		strh	r2, [r3]	@ tmp120, *_3
 168:src/dsp.c     **** 
 169:src/dsp.c     ****     if (p_ma8 < (v_ma8 + 7))
 594              		.loc 1 169 0
 595 0016 084B     		ldr	r3, .L36	@ tmp121,
 596 0018 1A68     		ldr	r2, [r3]	@ D.6051, p_ma8
 597 001a 084B     		ldr	r3, .L36+4	@ D.6051,
 598 001c 9A42     		cmp	r2, r3	@ D.6051, D.6051
 599 001e 05D2     		bcs	.L33	@,
 170:src/dsp.c     ****         p_ma8 += 1;
 600              		.loc 1 170 0
 601 0020 054B     		ldr	r3, .L36	@ tmp122,
 602 0022 1B68     		ldr	r3, [r3]	@ D.6051, p_ma8
 603 0024 9A1C     		adds	r2, r3, #2	@ D.6051, D.6051,
 604 0026 044B     		ldr	r3, .L36	@ tmp123,
 605 0028 1A60     		str	r2, [r3]	@ D.6051, p_ma8
 171:src/dsp.c     ****     else
 172:src/dsp.c     ****         p_ma8 = &v_ma8[0];
 173:src/dsp.c     **** }
 606              		.loc 1 173 0
 607 002a 02E0     		b	.L35	@
 608              	.L33:
 172:src/dsp.c     **** }
 609              		.loc 1 172 0
 610 002c 024B     		ldr	r3, .L36	@ tmp124,
 611 002e 044A     		ldr	r2, .L36+8	@ tmp125,
ARM GAS  /tmp/ccGLq0Q1.s 			page 15


 612 0030 1A60     		str	r2, [r3]	@ tmp125, p_ma8
 613              	.L35:
 614              		.loc 1 173 0
 615 0032 C046     		nop
 616 0034 02B0     		add	sp, sp, #8	@,,
 617              		@ sp needed	@
 618 0036 7047     		bx	lr
 619              	.L37:
 620              		.align	2
 621              	.L36:
 622 0038 00000000 		.word	p_ma8
 623 003c 0E000000 		.word	v_ma8+14
 624 0040 00000000 		.word	v_ma8
 625              		.cfi_endproc
 626              	.LFE7:
 627              		.size	MA8Circular_Only_Load, .-MA8Circular_Only_Load
 628              		.section	.text.MA8Circular_Only_Calc,"ax",%progbits
 629              		.align	2
 630              		.global	MA8Circular_Only_Calc
 631              		.code	16
 632              		.thumb_func
 633              		.type	MA8Circular_Only_Calc, %function
 634              	MA8Circular_Only_Calc:
 635              	.LFB8:
 174:src/dsp.c     **** 
 175:src/dsp.c     **** unsigned short MA8Circular_Only_Calc (void)
 176:src/dsp.c     **** {
 636              		.loc 1 176 0
 637              		.cfi_startproc
 638 0000 82B0     		sub	sp, sp, #8	@,,
 639              	.LCFI9:
 640              		.cfi_def_cfa_offset 8
 177:src/dsp.c     ****     unsigned int total_ma;
 178:src/dsp.c     **** 
 179:src/dsp.c     ****     total_ma = v_ma8[0] + v_ma8[1] + v_ma8[2] + v_ma8[3] + v_ma8[4] + v_ma8[5] + v_ma8[6] + v_ma8[7
 641              		.loc 1 179 0
 642 0002 0F4B     		ldr	r3, .L40	@ tmp136,
 643 0004 1B88     		ldrh	r3, [r3]	@ D.6052, v_ma8
 644 0006 1A00     		movs	r2, r3	@ D.6053, D.6052
 645 0008 0D4B     		ldr	r3, .L40	@ tmp137,
 646 000a 5B88     		ldrh	r3, [r3, #2]	@ D.6052,
 647 000c D318     		adds	r3, r2, r3	@ D.6053, D.6053, D.6053
 648 000e 0C4A     		ldr	r2, .L40	@ tmp138,
 649 0010 9288     		ldrh	r2, [r2, #4]	@ D.6052,
 650 0012 9B18     		adds	r3, r3, r2	@ D.6053, D.6053, D.6053
 651 0014 0A4A     		ldr	r2, .L40	@ tmp139,
 652 0016 D288     		ldrh	r2, [r2, #6]	@ D.6052,
 653 0018 9B18     		adds	r3, r3, r2	@ D.6053, D.6053, D.6053
 654 001a 094A     		ldr	r2, .L40	@ tmp140,
 655 001c 1289     		ldrh	r2, [r2, #8]	@ D.6052,
 656 001e 9B18     		adds	r3, r3, r2	@ D.6053, D.6053, D.6053
 657 0020 074A     		ldr	r2, .L40	@ tmp141,
 658 0022 5289     		ldrh	r2, [r2, #10]	@ D.6052,
 659 0024 9B18     		adds	r3, r3, r2	@ D.6053, D.6053, D.6053
 660 0026 064A     		ldr	r2, .L40	@ tmp142,
 661 0028 9289     		ldrh	r2, [r2, #12]	@ D.6052,
 662 002a 9B18     		adds	r3, r3, r2	@ D.6053, D.6053, D.6053
ARM GAS  /tmp/ccGLq0Q1.s 			page 16


 663 002c 044A     		ldr	r2, .L40	@ tmp143,
 664 002e D289     		ldrh	r2, [r2, #14]	@ D.6052,
 665 0030 9B18     		adds	r3, r3, r2	@ D.6053, D.6053, D.6053
 666 0032 0193     		str	r3, [sp, #4]	@ D.6053, total_ma
 180:src/dsp.c     ****     return (unsigned short) (total_ma >> 3);
 667              		.loc 1 180 0
 668 0034 019B     		ldr	r3, [sp, #4]	@ tmp144, total_ma
 669 0036 DB08     		lsrs	r3, r3, #3	@ D.6054, tmp144,
 670 0038 9BB2     		uxth	r3, r3	@ D.6052, D.6054
 181:src/dsp.c     **** }
 671              		.loc 1 181 0
 672 003a 1800     		movs	r0, r3	@, <retval>
 673 003c 02B0     		add	sp, sp, #8	@,,
 674              		@ sp needed	@
 675 003e 7047     		bx	lr
 676              	.L41:
 677              		.align	2
 678              	.L40:
 679 0040 00000000 		.word	v_ma8
 680              		.cfi_endproc
 681              	.LFE8:
 682              		.size	MA8Circular_Only_Calc, .-MA8Circular_Only_Calc
 683              		.section	.text.MAFilterFast,"ax",%progbits
 684              		.align	2
 685              		.global	MAFilterFast
 686              		.code	16
 687              		.thumb_func
 688              		.type	MAFilterFast, %function
 689              	MAFilterFast:
 690              	.LFB9:
 182:src/dsp.c     **** #endif
 183:src/dsp.c     **** 
 184:src/dsp.c     **** unsigned short MAFilterFast (unsigned short new_sample, unsigned short * vsample)
 185:src/dsp.c     **** {
 691              		.loc 1 185 0
 692              		.cfi_startproc
 693 0000 84B0     		sub	sp, sp, #16	@,,
 694              	.LCFI10:
 695              		.cfi_def_cfa_offset 16
 696 0002 0200     		movs	r2, r0	@ tmp129, new_sample
 697 0004 0091     		str	r1, [sp]	@ vsample, vsample
 698 0006 6B46     		mov	r3, sp	@ tmp147,
 699 0008 0633     		adds	r3, r3, #6	@ tmp130,
 700 000a 1A80     		strh	r2, [r3]	@ tmp131, new_sample
 186:src/dsp.c     **** 	unsigned int total_ma;
 187:src/dsp.c     **** 
 188:src/dsp.c     **** 	//Kernel mejorado ver 2
 189:src/dsp.c     **** 	//si el vector es de 0 a 7 (+1) sumo todas las posiciones entre 1 y 8, acomodo el nuevo vector ent
 190:src/dsp.c     **** 
 191:src/dsp.c     **** 	total_ma = new_sample + *(vsample) + *(vsample + 1) + *(vsample + 2);
 701              		.loc 1 191 0
 702 000c 6B46     		mov	r3, sp	@ tmp148,
 703 000e 0633     		adds	r3, r3, #6	@ tmp132,
 704 0010 1B88     		ldrh	r3, [r3]	@ D.6055, new_sample
 705 0012 009A     		ldr	r2, [sp]	@ tmp133, vsample
 706 0014 1288     		ldrh	r2, [r2]	@ D.6056, *vsample_4(D)
 707 0016 9B18     		adds	r3, r3, r2	@ D.6055, D.6055, D.6055
ARM GAS  /tmp/ccGLq0Q1.s 			page 17


 708 0018 009A     		ldr	r2, [sp]	@ tmp134, vsample
 709 001a 0232     		adds	r2, r2, #2	@ D.6057,
 710 001c 1288     		ldrh	r2, [r2]	@ D.6056, *_8
 711 001e 9B18     		adds	r3, r3, r2	@ D.6055, D.6055, D.6055
 712 0020 009A     		ldr	r2, [sp]	@ tmp135, vsample
 713 0022 0432     		adds	r2, r2, #4	@ D.6057,
 714 0024 1288     		ldrh	r2, [r2]	@ D.6056, *_12
 715 0026 9B18     		adds	r3, r3, r2	@ D.6055, D.6055, D.6055
 716 0028 0393     		str	r3, [sp, #12]	@ D.6055, total_ma
 192:src/dsp.c     **** 	*(vsample + 2) = *(vsample + 1);
 717              		.loc 1 192 0
 718 002a 009B     		ldr	r3, [sp]	@ tmp136, vsample
 719 002c 0433     		adds	r3, r3, #4	@ D.6057,
 720 002e 009A     		ldr	r2, [sp]	@ tmp137, vsample
 721 0030 5288     		ldrh	r2, [r2, #2]	@ D.6056, MEM[(short unsigned int *)vsample_4(D) + 2B]
 722 0032 1A80     		strh	r2, [r3]	@ tmp138, *_17
 193:src/dsp.c     **** 	*(vsample + 1) = *(vsample);
 723              		.loc 1 193 0
 724 0034 009B     		ldr	r3, [sp]	@ tmp139, vsample
 725 0036 0233     		adds	r3, r3, #2	@ D.6057,
 726 0038 009A     		ldr	r2, [sp]	@ tmp140, vsample
 727 003a 1288     		ldrh	r2, [r2]	@ D.6056, *vsample_4(D)
 728 003c 1A80     		strh	r2, [r3]	@ tmp141, *_20
 194:src/dsp.c     **** 	*(vsample) = new_sample;
 729              		.loc 1 194 0
 730 003e 009B     		ldr	r3, [sp]	@ tmp142, vsample
 731 0040 6A46     		mov	r2, sp	@ tmp149,
 732 0042 0632     		adds	r2, r2, #6	@ tmp143,
 733 0044 1288     		ldrh	r2, [r2]	@ tmp144, new_sample
 734 0046 1A80     		strh	r2, [r3]	@ tmp144, *vsample_4(D)
 195:src/dsp.c     **** 
 196:src/dsp.c     **** 	return (unsigned short) (total_ma >> 2);
 735              		.loc 1 196 0
 736 0048 039B     		ldr	r3, [sp, #12]	@ tmp145, total_ma
 737 004a 9B08     		lsrs	r3, r3, #2	@ D.6058, tmp145,
 738 004c 9BB2     		uxth	r3, r3	@ D.6056, D.6058
 197:src/dsp.c     **** }
 739              		.loc 1 197 0
 740 004e 1800     		movs	r0, r3	@, <retval>
 741 0050 04B0     		add	sp, sp, #16	@,,
 742              		@ sp needed	@
 743 0052 7047     		bx	lr
 744              		.cfi_endproc
 745              	.LFE9:
 746              		.size	MAFilterFast, .-MAFilterFast
 747              		.section	.text.MAFilter8,"ax",%progbits
 748              		.align	2
 749              		.global	MAFilter8
 750              		.code	16
 751              		.thumb_func
 752              		.type	MAFilter8, %function
 753              	MAFilter8:
 754              	.LFB10:
 198:src/dsp.c     **** 
 199:src/dsp.c     **** //unsigned short MAFilter8 (unsigned short new_sample, unsigned short * vsample)
 200:src/dsp.c     **** unsigned short MAFilter8 (unsigned short * vsample)
 201:src/dsp.c     **** {
ARM GAS  /tmp/ccGLq0Q1.s 			page 18


 755              		.loc 1 201 0
 756              		.cfi_startproc
 757 0000 84B0     		sub	sp, sp, #16	@,,
 758              	.LCFI11:
 759              		.cfi_def_cfa_offset 16
 760 0002 0190     		str	r0, [sp, #4]	@ vsample, vsample
 202:src/dsp.c     **** 	unsigned int total_ma;
 203:src/dsp.c     **** 
 204:src/dsp.c     **** 	//Kernel mejorado ver 2
 205:src/dsp.c     **** 	//si el vector es de 0 a 7 (+1) sumo todas las posiciones entre 1 y 8, acomodo el nuevo vector ent
 206:src/dsp.c     **** 
 207:src/dsp.c     **** 	total_ma = *(vsample) + *(vsample + 1) + *(vsample + 2) + *(vsample + 3) + *(vsample + 4) + *(vsam
 761              		.loc 1 207 0
 762 0004 019B     		ldr	r3, [sp, #4]	@ tmp157, vsample
 763 0006 1B88     		ldrh	r3, [r3]	@ D.6059, *vsample_2(D)
 764 0008 1A00     		movs	r2, r3	@ D.6060, D.6059
 765 000a 019B     		ldr	r3, [sp, #4]	@ tmp158, vsample
 766 000c 0233     		adds	r3, r3, #2	@ D.6061,
 767 000e 1B88     		ldrh	r3, [r3]	@ D.6059, *_5
 768 0010 D318     		adds	r3, r2, r3	@ D.6060, D.6060, D.6060
 769 0012 019A     		ldr	r2, [sp, #4]	@ tmp159, vsample
 770 0014 0432     		adds	r2, r2, #4	@ D.6061,
 771 0016 1288     		ldrh	r2, [r2]	@ D.6059, *_9
 772 0018 9B18     		adds	r3, r3, r2	@ D.6060, D.6060, D.6060
 773 001a 019A     		ldr	r2, [sp, #4]	@ tmp160, vsample
 774 001c 0632     		adds	r2, r2, #6	@ D.6061,
 775 001e 1288     		ldrh	r2, [r2]	@ D.6059, *_13
 776 0020 9B18     		adds	r3, r3, r2	@ D.6060, D.6060, D.6060
 777 0022 019A     		ldr	r2, [sp, #4]	@ tmp161, vsample
 778 0024 0832     		adds	r2, r2, #8	@ D.6061,
 779 0026 1288     		ldrh	r2, [r2]	@ D.6059, *_17
 780 0028 9B18     		adds	r3, r3, r2	@ D.6060, D.6060, D.6060
 781 002a 019A     		ldr	r2, [sp, #4]	@ tmp162, vsample
 782 002c 0A32     		adds	r2, r2, #10	@ D.6061,
 783 002e 1288     		ldrh	r2, [r2]	@ D.6059, *_21
 784 0030 9B18     		adds	r3, r3, r2	@ D.6060, D.6060, D.6060
 785 0032 019A     		ldr	r2, [sp, #4]	@ tmp163, vsample
 786 0034 0C32     		adds	r2, r2, #12	@ D.6061,
 787 0036 1288     		ldrh	r2, [r2]	@ D.6059, *_25
 788 0038 9B18     		adds	r3, r3, r2	@ D.6060, D.6060, D.6060
 789 003a 019A     		ldr	r2, [sp, #4]	@ tmp164, vsample
 790 003c 0E32     		adds	r2, r2, #14	@ D.6061,
 791 003e 1288     		ldrh	r2, [r2]	@ D.6059, *_29
 792 0040 9B18     		adds	r3, r3, r2	@ D.6060, D.6060, D.6060
 793 0042 0393     		str	r3, [sp, #12]	@ D.6060, total_ma
 208:src/dsp.c     **** 	*(vsample + 7) = *(vsample + 6);
 794              		.loc 1 208 0
 795 0044 019B     		ldr	r3, [sp, #4]	@ tmp165, vsample
 796 0046 0E33     		adds	r3, r3, #14	@ D.6061,
 797 0048 019A     		ldr	r2, [sp, #4]	@ tmp166, vsample
 798 004a 9289     		ldrh	r2, [r2, #12]	@ D.6059, MEM[(short unsigned int *)vsample_2(D) + 12B]
 799 004c 1A80     		strh	r2, [r3]	@ tmp167, *_34
 209:src/dsp.c     **** 	*(vsample + 6) = *(vsample + 5);
 800              		.loc 1 209 0
 801 004e 019B     		ldr	r3, [sp, #4]	@ tmp168, vsample
 802 0050 0C33     		adds	r3, r3, #12	@ D.6061,
 803 0052 019A     		ldr	r2, [sp, #4]	@ tmp169, vsample
ARM GAS  /tmp/ccGLq0Q1.s 			page 19


 804 0054 5289     		ldrh	r2, [r2, #10]	@ D.6059, MEM[(short unsigned int *)vsample_2(D) + 10B]
 805 0056 1A80     		strh	r2, [r3]	@ tmp170, *_37
 210:src/dsp.c     **** 	*(vsample + 5) = *(vsample + 4);
 806              		.loc 1 210 0
 807 0058 019B     		ldr	r3, [sp, #4]	@ tmp171, vsample
 808 005a 0A33     		adds	r3, r3, #10	@ D.6061,
 809 005c 019A     		ldr	r2, [sp, #4]	@ tmp172, vsample
 810 005e 1289     		ldrh	r2, [r2, #8]	@ D.6059, MEM[(short unsigned int *)vsample_2(D) + 8B]
 811 0060 1A80     		strh	r2, [r3]	@ tmp173, *_40
 211:src/dsp.c     **** 	*(vsample + 4) = *(vsample + 3);
 812              		.loc 1 211 0
 813 0062 019B     		ldr	r3, [sp, #4]	@ tmp174, vsample
 814 0064 0833     		adds	r3, r3, #8	@ D.6061,
 815 0066 019A     		ldr	r2, [sp, #4]	@ tmp175, vsample
 816 0068 D288     		ldrh	r2, [r2, #6]	@ D.6059, MEM[(short unsigned int *)vsample_2(D) + 6B]
 817 006a 1A80     		strh	r2, [r3]	@ tmp176, *_43
 212:src/dsp.c     **** 	*(vsample + 3) = *(vsample + 2);
 818              		.loc 1 212 0
 819 006c 019B     		ldr	r3, [sp, #4]	@ tmp177, vsample
 820 006e 0633     		adds	r3, r3, #6	@ D.6061,
 821 0070 019A     		ldr	r2, [sp, #4]	@ tmp178, vsample
 822 0072 9288     		ldrh	r2, [r2, #4]	@ D.6059, MEM[(short unsigned int *)vsample_2(D) + 4B]
 823 0074 1A80     		strh	r2, [r3]	@ tmp179, *_46
 213:src/dsp.c     **** 	*(vsample + 2) = *(vsample + 1);
 824              		.loc 1 213 0
 825 0076 019B     		ldr	r3, [sp, #4]	@ tmp180, vsample
 826 0078 0433     		adds	r3, r3, #4	@ D.6061,
 827 007a 019A     		ldr	r2, [sp, #4]	@ tmp181, vsample
 828 007c 5288     		ldrh	r2, [r2, #2]	@ D.6059, MEM[(short unsigned int *)vsample_2(D) + 2B]
 829 007e 1A80     		strh	r2, [r3]	@ tmp182, *_49
 214:src/dsp.c     **** 	*(vsample + 1) = *(vsample);
 830              		.loc 1 214 0
 831 0080 019B     		ldr	r3, [sp, #4]	@ tmp183, vsample
 832 0082 0233     		adds	r3, r3, #2	@ D.6061,
 833 0084 019A     		ldr	r2, [sp, #4]	@ tmp184, vsample
 834 0086 1288     		ldrh	r2, [r2]	@ D.6059, *vsample_2(D)
 835 0088 1A80     		strh	r2, [r3]	@ tmp185, *_52
 215:src/dsp.c     **** 
 216:src/dsp.c     **** 	return (unsigned short) (total_ma >> 3);
 836              		.loc 1 216 0
 837 008a 039B     		ldr	r3, [sp, #12]	@ tmp186, total_ma
 838 008c DB08     		lsrs	r3, r3, #3	@ D.6062, tmp186,
 839 008e 9BB2     		uxth	r3, r3	@ D.6059, D.6062
 217:src/dsp.c     **** }
 840              		.loc 1 217 0
 841 0090 1800     		movs	r0, r3	@, <retval>
 842 0092 04B0     		add	sp, sp, #16	@,,
 843              		@ sp needed	@
 844 0094 7047     		bx	lr
 845              		.cfi_endproc
 846              	.LFE10:
 847              		.size	MAFilter8, .-MAFilter8
 848 0096 C046     		.section	.text.MAFilter32,"ax",%progbits
 849              		.align	2
 850              		.global	MAFilter32
 851              		.code	16
 852              		.thumb_func
ARM GAS  /tmp/ccGLq0Q1.s 			page 20


 853              		.type	MAFilter32, %function
 854              	MAFilter32:
 855              	.LFB11:
 218:src/dsp.c     **** 
 219:src/dsp.c     **** unsigned short MAFilter32 (unsigned short new_sample, unsigned short * vsample)
 220:src/dsp.c     **** {
 856              		.loc 1 220 0
 857              		.cfi_startproc
 858 0000 84B0     		sub	sp, sp, #16	@,,
 859              	.LCFI12:
 860              		.cfi_def_cfa_offset 16
 861 0002 0200     		movs	r2, r0	@ tmp260, new_sample
 862 0004 0091     		str	r1, [sp]	@ vsample, vsample
 863 0006 6B46     		mov	r3, sp	@ tmp438,
 864 0008 0633     		adds	r3, r3, #6	@ tmp261,
 865 000a 1A80     		strh	r2, [r3]	@ tmp262, new_sample
 221:src/dsp.c     **** 	unsigned short total_ma;
 222:src/dsp.c     **** 
 223:src/dsp.c     **** 	total_ma = new_sample + *(vsample) + *(vsample + 1) + *(vsample + 2) + *(vsample + 3) + *(vsample 
 866              		.loc 1 223 0
 867 000c 009B     		ldr	r3, [sp]	@ tmp263, vsample
 868 000e 1A88     		ldrh	r2, [r3]	@ D.6063, *vsample_2(D)
 869 0010 6B46     		mov	r3, sp	@ tmp439,
 870 0012 0633     		adds	r3, r3, #6	@ tmp264,
 871 0014 1B88     		ldrh	r3, [r3]	@ tmp265, new_sample
 872 0016 D318     		adds	r3, r2, r3	@ tmp266, D.6063, tmp265
 873 0018 9AB2     		uxth	r2, r3	@ D.6063, tmp266
 874 001a 009B     		ldr	r3, [sp]	@ tmp267, vsample
 875 001c 0233     		adds	r3, r3, #2	@ D.6064,
 876 001e 1B88     		ldrh	r3, [r3]	@ D.6063, *_6
 877 0020 D318     		adds	r3, r2, r3	@ tmp268, D.6063, D.6063
 878 0022 9AB2     		uxth	r2, r3	@ D.6063, tmp268
 879 0024 009B     		ldr	r3, [sp]	@ tmp269, vsample
 880 0026 0433     		adds	r3, r3, #4	@ D.6064,
 881 0028 1B88     		ldrh	r3, [r3]	@ D.6063, *_9
 882 002a D318     		adds	r3, r2, r3	@ tmp270, D.6063, D.6063
 883 002c 9AB2     		uxth	r2, r3	@ D.6063, tmp270
 884 002e 009B     		ldr	r3, [sp]	@ tmp271, vsample
 885 0030 0633     		adds	r3, r3, #6	@ D.6064,
 886 0032 1B88     		ldrh	r3, [r3]	@ D.6063, *_12
 887 0034 D318     		adds	r3, r2, r3	@ tmp272, D.6063, D.6063
 888 0036 9AB2     		uxth	r2, r3	@ D.6063, tmp272
 889 0038 009B     		ldr	r3, [sp]	@ tmp273, vsample
 890 003a 0833     		adds	r3, r3, #8	@ D.6064,
 891 003c 1B88     		ldrh	r3, [r3]	@ D.6063, *_15
 892 003e D318     		adds	r3, r2, r3	@ tmp274, D.6063, D.6063
 893 0040 9AB2     		uxth	r2, r3	@ D.6063, tmp274
 894 0042 009B     		ldr	r3, [sp]	@ tmp275, vsample
 895 0044 0A33     		adds	r3, r3, #10	@ D.6064,
 896 0046 1B88     		ldrh	r3, [r3]	@ D.6063, *_18
 897 0048 D318     		adds	r3, r2, r3	@ tmp276, D.6063, D.6063
 898 004a 99B2     		uxth	r1, r3	@ D.6063, tmp276
 899 004c 009B     		ldr	r3, [sp]	@ tmp277, vsample
 900 004e 0C33     		adds	r3, r3, #12	@ D.6064,
 901 0050 1A88     		ldrh	r2, [r3]	@ D.6063, *_21
 902 0052 0E23     		movs	r3, #14	@ tmp278,
 903 0054 6B44     		add	r3, r3, sp	@ tmp278,
ARM GAS  /tmp/ccGLq0Q1.s 			page 21


 904 0056 8A18     		adds	r2, r1, r2	@ tmp279, D.6063, D.6063
 905 0058 1A80     		strh	r2, [r3]	@ tmp280, total_ma
 224:src/dsp.c     **** 	total_ma += *(vsample + 7) + *(vsample + 8) + *(vsample + 9) + *(vsample + 10) + *(vsample + 11) +
 906              		.loc 1 224 0
 907 005a 009B     		ldr	r3, [sp]	@ tmp281, vsample
 908 005c 0E33     		adds	r3, r3, #14	@ D.6064,
 909 005e 1A88     		ldrh	r2, [r3]	@ D.6063, *_24
 910 0060 009B     		ldr	r3, [sp]	@ tmp282, vsample
 911 0062 1033     		adds	r3, r3, #16	@ D.6064,
 912 0064 1B88     		ldrh	r3, [r3]	@ D.6063, *_26
 913 0066 D318     		adds	r3, r2, r3	@ tmp283, D.6063, D.6063
 914 0068 9AB2     		uxth	r2, r3	@ D.6063, tmp283
 915 006a 009B     		ldr	r3, [sp]	@ tmp284, vsample
 916 006c 1233     		adds	r3, r3, #18	@ D.6064,
 917 006e 1B88     		ldrh	r3, [r3]	@ D.6063, *_29
 918 0070 D318     		adds	r3, r2, r3	@ tmp285, D.6063, D.6063
 919 0072 9AB2     		uxth	r2, r3	@ D.6063, tmp285
 920 0074 009B     		ldr	r3, [sp]	@ tmp286, vsample
 921 0076 1433     		adds	r3, r3, #20	@ D.6064,
 922 0078 1B88     		ldrh	r3, [r3]	@ D.6063, *_32
 923 007a D318     		adds	r3, r2, r3	@ tmp287, D.6063, D.6063
 924 007c 9AB2     		uxth	r2, r3	@ D.6063, tmp287
 925 007e 009B     		ldr	r3, [sp]	@ tmp288, vsample
 926 0080 1633     		adds	r3, r3, #22	@ D.6064,
 927 0082 1B88     		ldrh	r3, [r3]	@ D.6063, *_35
 928 0084 D318     		adds	r3, r2, r3	@ tmp289, D.6063, D.6063
 929 0086 9AB2     		uxth	r2, r3	@ D.6063, tmp289
 930 0088 009B     		ldr	r3, [sp]	@ tmp290, vsample
 931 008a 1833     		adds	r3, r3, #24	@ D.6064,
 932 008c 1B88     		ldrh	r3, [r3]	@ D.6063, *_38
 933 008e D318     		adds	r3, r2, r3	@ tmp291, D.6063, D.6063
 934 0090 9AB2     		uxth	r2, r3	@ D.6063, tmp291
 935 0092 009B     		ldr	r3, [sp]	@ tmp292, vsample
 936 0094 1A33     		adds	r3, r3, #26	@ D.6064,
 937 0096 1B88     		ldrh	r3, [r3]	@ D.6063, *_41
 938 0098 D318     		adds	r3, r2, r3	@ tmp293, D.6063, D.6063
 939 009a 9AB2     		uxth	r2, r3	@ D.6063, tmp293
 940 009c 009B     		ldr	r3, [sp]	@ tmp294, vsample
 941 009e 1C33     		adds	r3, r3, #28	@ D.6064,
 942 00a0 1B88     		ldrh	r3, [r3]	@ D.6063, *_44
 943 00a2 D318     		adds	r3, r2, r3	@ tmp295, D.6063, D.6063
 944 00a4 99B2     		uxth	r1, r3	@ D.6063, tmp295
 945 00a6 0E23     		movs	r3, #14	@ tmp296,
 946 00a8 6B44     		add	r3, r3, sp	@ tmp296,
 947 00aa 0E22     		movs	r2, #14	@ tmp297,
 948 00ac 6A44     		add	r2, r2, sp	@ tmp297,
 949 00ae 1288     		ldrh	r2, [r2]	@ tmp298, total_ma
 950 00b0 8A18     		adds	r2, r1, r2	@ tmp299, D.6063, tmp298
 951 00b2 1A80     		strh	r2, [r3]	@ tmp300, total_ma
 225:src/dsp.c     **** 	total_ma += *(vsample + 15) + *(vsample + 16) + *(vsample + 17) + *(vsample + 18) + *(vsample + 19
 952              		.loc 1 225 0
 953 00b4 009B     		ldr	r3, [sp]	@ tmp301, vsample
 954 00b6 1E33     		adds	r3, r3, #30	@ D.6064,
 955 00b8 1A88     		ldrh	r2, [r3]	@ D.6063, *_48
 956 00ba 009B     		ldr	r3, [sp]	@ tmp302, vsample
 957 00bc 2033     		adds	r3, r3, #32	@ D.6064,
 958 00be 1B88     		ldrh	r3, [r3]	@ D.6063, *_50
ARM GAS  /tmp/ccGLq0Q1.s 			page 22


 959 00c0 D318     		adds	r3, r2, r3	@ tmp303, D.6063, D.6063
 960 00c2 9AB2     		uxth	r2, r3	@ D.6063, tmp303
 961 00c4 009B     		ldr	r3, [sp]	@ tmp304, vsample
 962 00c6 2233     		adds	r3, r3, #34	@ D.6064,
 963 00c8 1B88     		ldrh	r3, [r3]	@ D.6063, *_53
 964 00ca D318     		adds	r3, r2, r3	@ tmp305, D.6063, D.6063
 965 00cc 9AB2     		uxth	r2, r3	@ D.6063, tmp305
 966 00ce 009B     		ldr	r3, [sp]	@ tmp306, vsample
 967 00d0 2433     		adds	r3, r3, #36	@ D.6064,
 968 00d2 1B88     		ldrh	r3, [r3]	@ D.6063, *_56
 969 00d4 D318     		adds	r3, r2, r3	@ tmp307, D.6063, D.6063
 970 00d6 9AB2     		uxth	r2, r3	@ D.6063, tmp307
 971 00d8 009B     		ldr	r3, [sp]	@ tmp308, vsample
 972 00da 2633     		adds	r3, r3, #38	@ D.6064,
 973 00dc 1B88     		ldrh	r3, [r3]	@ D.6063, *_59
 974 00de D318     		adds	r3, r2, r3	@ tmp309, D.6063, D.6063
 975 00e0 9AB2     		uxth	r2, r3	@ D.6063, tmp309
 976 00e2 009B     		ldr	r3, [sp]	@ tmp310, vsample
 977 00e4 2833     		adds	r3, r3, #40	@ D.6064,
 978 00e6 1B88     		ldrh	r3, [r3]	@ D.6063, *_62
 979 00e8 D318     		adds	r3, r2, r3	@ tmp311, D.6063, D.6063
 980 00ea 9AB2     		uxth	r2, r3	@ D.6063, tmp311
 981 00ec 009B     		ldr	r3, [sp]	@ tmp312, vsample
 982 00ee 2A33     		adds	r3, r3, #42	@ D.6064,
 983 00f0 1B88     		ldrh	r3, [r3]	@ D.6063, *_65
 984 00f2 D318     		adds	r3, r2, r3	@ tmp313, D.6063, D.6063
 985 00f4 9AB2     		uxth	r2, r3	@ D.6063, tmp313
 986 00f6 009B     		ldr	r3, [sp]	@ tmp314, vsample
 987 00f8 2C33     		adds	r3, r3, #44	@ D.6064,
 988 00fa 1B88     		ldrh	r3, [r3]	@ D.6063, *_68
 989 00fc D318     		adds	r3, r2, r3	@ tmp315, D.6063, D.6063
 990 00fe 99B2     		uxth	r1, r3	@ D.6063, tmp315
 991 0100 0E23     		movs	r3, #14	@ tmp316,
 992 0102 6B44     		add	r3, r3, sp	@ tmp316,
 993 0104 0E22     		movs	r2, #14	@ tmp317,
 994 0106 6A44     		add	r2, r2, sp	@ tmp317,
 995 0108 1288     		ldrh	r2, [r2]	@ tmp318, total_ma
 996 010a 8A18     		adds	r2, r1, r2	@ tmp319, D.6063, tmp318
 997 010c 1A80     		strh	r2, [r3]	@ tmp320, total_ma
 226:src/dsp.c     **** 	total_ma += *(vsample + 23) + *(vsample + 24) + *(vsample + 25) + *(vsample + 26) + *(vsample + 27
 998              		.loc 1 226 0
 999 010e 009B     		ldr	r3, [sp]	@ tmp321, vsample
 1000 0110 2E33     		adds	r3, r3, #46	@ D.6064,
 1001 0112 1A88     		ldrh	r2, [r3]	@ D.6063, *_72
 1002 0114 009B     		ldr	r3, [sp]	@ tmp322, vsample
 1003 0116 3033     		adds	r3, r3, #48	@ D.6064,
 1004 0118 1B88     		ldrh	r3, [r3]	@ D.6063, *_74
 1005 011a D318     		adds	r3, r2, r3	@ tmp323, D.6063, D.6063
 1006 011c 9AB2     		uxth	r2, r3	@ D.6063, tmp323
 1007 011e 009B     		ldr	r3, [sp]	@ tmp324, vsample
 1008 0120 3233     		adds	r3, r3, #50	@ D.6064,
 1009 0122 1B88     		ldrh	r3, [r3]	@ D.6063, *_77
 1010 0124 D318     		adds	r3, r2, r3	@ tmp325, D.6063, D.6063
 1011 0126 9AB2     		uxth	r2, r3	@ D.6063, tmp325
 1012 0128 009B     		ldr	r3, [sp]	@ tmp326, vsample
 1013 012a 3433     		adds	r3, r3, #52	@ D.6064,
 1014 012c 1B88     		ldrh	r3, [r3]	@ D.6063, *_80
ARM GAS  /tmp/ccGLq0Q1.s 			page 23


 1015 012e D318     		adds	r3, r2, r3	@ tmp327, D.6063, D.6063
 1016 0130 9AB2     		uxth	r2, r3	@ D.6063, tmp327
 1017 0132 009B     		ldr	r3, [sp]	@ tmp328, vsample
 1018 0134 3633     		adds	r3, r3, #54	@ D.6064,
 1019 0136 1B88     		ldrh	r3, [r3]	@ D.6063, *_83
 1020 0138 D318     		adds	r3, r2, r3	@ tmp329, D.6063, D.6063
 1021 013a 9AB2     		uxth	r2, r3	@ D.6063, tmp329
 1022 013c 009B     		ldr	r3, [sp]	@ tmp330, vsample
 1023 013e 3833     		adds	r3, r3, #56	@ D.6064,
 1024 0140 1B88     		ldrh	r3, [r3]	@ D.6063, *_86
 1025 0142 D318     		adds	r3, r2, r3	@ tmp331, D.6063, D.6063
 1026 0144 9AB2     		uxth	r2, r3	@ D.6063, tmp331
 1027 0146 009B     		ldr	r3, [sp]	@ tmp332, vsample
 1028 0148 3A33     		adds	r3, r3, #58	@ D.6064,
 1029 014a 1B88     		ldrh	r3, [r3]	@ D.6063, *_89
 1030 014c D318     		adds	r3, r2, r3	@ tmp333, D.6063, D.6063
 1031 014e 9AB2     		uxth	r2, r3	@ D.6063, tmp333
 1032 0150 009B     		ldr	r3, [sp]	@ tmp334, vsample
 1033 0152 3C33     		adds	r3, r3, #60	@ D.6064,
 1034 0154 1B88     		ldrh	r3, [r3]	@ D.6063, *_92
 1035 0156 D318     		adds	r3, r2, r3	@ tmp335, D.6063, D.6063
 1036 0158 99B2     		uxth	r1, r3	@ D.6063, tmp335
 1037 015a 0E23     		movs	r3, #14	@ tmp336,
 1038 015c 6B44     		add	r3, r3, sp	@ tmp336,
 1039 015e 0E22     		movs	r2, #14	@ tmp337,
 1040 0160 6A44     		add	r2, r2, sp	@ tmp337,
 1041 0162 1288     		ldrh	r2, [r2]	@ tmp338, total_ma
 1042 0164 8A18     		adds	r2, r1, r2	@ tmp339, D.6063, tmp338
 1043 0166 1A80     		strh	r2, [r3]	@ tmp340, total_ma
 227:src/dsp.c     **** 
 228:src/dsp.c     **** 	*(vsample + 30) = *(vsample + 29);
 1044              		.loc 1 228 0
 1045 0168 009B     		ldr	r3, [sp]	@ tmp341, vsample
 1046 016a 3C33     		adds	r3, r3, #60	@ D.6064,
 1047 016c 009A     		ldr	r2, [sp]	@ tmp342, vsample
 1048 016e 528F     		ldrh	r2, [r2, #58]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 58B]
 1049 0170 1A80     		strh	r2, [r3]	@ tmp343, *_96
 229:src/dsp.c     **** 	*(vsample + 29) = *(vsample + 28);
 1050              		.loc 1 229 0
 1051 0172 009B     		ldr	r3, [sp]	@ tmp344, vsample
 1052 0174 3A33     		adds	r3, r3, #58	@ D.6064,
 1053 0176 009A     		ldr	r2, [sp]	@ tmp345, vsample
 1054 0178 128F     		ldrh	r2, [r2, #56]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 56B]
 1055 017a 1A80     		strh	r2, [r3]	@ tmp346, *_99
 230:src/dsp.c     **** 	*(vsample + 28) = *(vsample + 27);
 1056              		.loc 1 230 0
 1057 017c 009B     		ldr	r3, [sp]	@ tmp347, vsample
 1058 017e 3833     		adds	r3, r3, #56	@ D.6064,
 1059 0180 009A     		ldr	r2, [sp]	@ tmp348, vsample
 1060 0182 D28E     		ldrh	r2, [r2, #54]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 54B]
 1061 0184 1A80     		strh	r2, [r3]	@ tmp349, *_102
 231:src/dsp.c     **** 	*(vsample + 27) = *(vsample + 26);
 1062              		.loc 1 231 0
 1063 0186 009B     		ldr	r3, [sp]	@ tmp350, vsample
 1064 0188 3633     		adds	r3, r3, #54	@ D.6064,
 1065 018a 009A     		ldr	r2, [sp]	@ tmp351, vsample
 1066 018c 928E     		ldrh	r2, [r2, #52]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 52B]
ARM GAS  /tmp/ccGLq0Q1.s 			page 24


 1067 018e 1A80     		strh	r2, [r3]	@ tmp352, *_105
 232:src/dsp.c     **** 	*(vsample + 26) = *(vsample + 25);
 1068              		.loc 1 232 0
 1069 0190 009B     		ldr	r3, [sp]	@ tmp353, vsample
 1070 0192 3433     		adds	r3, r3, #52	@ D.6064,
 1071 0194 009A     		ldr	r2, [sp]	@ tmp354, vsample
 1072 0196 528E     		ldrh	r2, [r2, #50]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 50B]
 1073 0198 1A80     		strh	r2, [r3]	@ tmp355, *_108
 233:src/dsp.c     **** 	*(vsample + 25) = *(vsample + 24);
 1074              		.loc 1 233 0
 1075 019a 009B     		ldr	r3, [sp]	@ tmp356, vsample
 1076 019c 3233     		adds	r3, r3, #50	@ D.6064,
 1077 019e 009A     		ldr	r2, [sp]	@ tmp357, vsample
 1078 01a0 128E     		ldrh	r2, [r2, #48]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 48B]
 1079 01a2 1A80     		strh	r2, [r3]	@ tmp358, *_111
 234:src/dsp.c     **** 	*(vsample + 24) = *(vsample + 23);
 1080              		.loc 1 234 0
 1081 01a4 009B     		ldr	r3, [sp]	@ tmp359, vsample
 1082 01a6 3033     		adds	r3, r3, #48	@ D.6064,
 1083 01a8 009A     		ldr	r2, [sp]	@ tmp360, vsample
 1084 01aa D28D     		ldrh	r2, [r2, #46]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 46B]
 1085 01ac 1A80     		strh	r2, [r3]	@ tmp361, *_114
 235:src/dsp.c     **** 
 236:src/dsp.c     **** 	*(vsample + 23) = *(vsample + 22);
 1086              		.loc 1 236 0
 1087 01ae 009B     		ldr	r3, [sp]	@ tmp362, vsample
 1088 01b0 2E33     		adds	r3, r3, #46	@ D.6064,
 1089 01b2 009A     		ldr	r2, [sp]	@ tmp363, vsample
 1090 01b4 928D     		ldrh	r2, [r2, #44]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 44B]
 1091 01b6 1A80     		strh	r2, [r3]	@ tmp364, *_117
 237:src/dsp.c     **** 	*(vsample + 22) = *(vsample + 21);
 1092              		.loc 1 237 0
 1093 01b8 009B     		ldr	r3, [sp]	@ tmp365, vsample
 1094 01ba 2C33     		adds	r3, r3, #44	@ D.6064,
 1095 01bc 009A     		ldr	r2, [sp]	@ tmp366, vsample
 1096 01be 528D     		ldrh	r2, [r2, #42]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 42B]
 1097 01c0 1A80     		strh	r2, [r3]	@ tmp367, *_120
 238:src/dsp.c     **** 	*(vsample + 21) = *(vsample + 20);
 1098              		.loc 1 238 0
 1099 01c2 009B     		ldr	r3, [sp]	@ tmp368, vsample
 1100 01c4 2A33     		adds	r3, r3, #42	@ D.6064,
 1101 01c6 009A     		ldr	r2, [sp]	@ tmp369, vsample
 1102 01c8 128D     		ldrh	r2, [r2, #40]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 40B]
 1103 01ca 1A80     		strh	r2, [r3]	@ tmp370, *_123
 239:src/dsp.c     **** 	*(vsample + 20) = *(vsample + 19);
 1104              		.loc 1 239 0
 1105 01cc 009B     		ldr	r3, [sp]	@ tmp371, vsample
 1106 01ce 2833     		adds	r3, r3, #40	@ D.6064,
 1107 01d0 009A     		ldr	r2, [sp]	@ tmp372, vsample
 1108 01d2 D28C     		ldrh	r2, [r2, #38]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 38B]
 1109 01d4 1A80     		strh	r2, [r3]	@ tmp373, *_126
 240:src/dsp.c     **** 	*(vsample + 19) = *(vsample + 18);
 1110              		.loc 1 240 0
 1111 01d6 009B     		ldr	r3, [sp]	@ tmp374, vsample
 1112 01d8 2633     		adds	r3, r3, #38	@ D.6064,
 1113 01da 009A     		ldr	r2, [sp]	@ tmp375, vsample
 1114 01dc 928C     		ldrh	r2, [r2, #36]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 36B]
ARM GAS  /tmp/ccGLq0Q1.s 			page 25


 1115 01de 1A80     		strh	r2, [r3]	@ tmp376, *_129
 241:src/dsp.c     **** 	*(vsample + 18) = *(vsample + 17);
 1116              		.loc 1 241 0
 1117 01e0 009B     		ldr	r3, [sp]	@ tmp377, vsample
 1118 01e2 2433     		adds	r3, r3, #36	@ D.6064,
 1119 01e4 009A     		ldr	r2, [sp]	@ tmp378, vsample
 1120 01e6 528C     		ldrh	r2, [r2, #34]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 34B]
 1121 01e8 1A80     		strh	r2, [r3]	@ tmp379, *_132
 242:src/dsp.c     **** 	*(vsample + 17) = *(vsample + 16);
 1122              		.loc 1 242 0
 1123 01ea 009B     		ldr	r3, [sp]	@ tmp380, vsample
 1124 01ec 2233     		adds	r3, r3, #34	@ D.6064,
 1125 01ee 009A     		ldr	r2, [sp]	@ tmp381, vsample
 1126 01f0 128C     		ldrh	r2, [r2, #32]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 32B]
 1127 01f2 1A80     		strh	r2, [r3]	@ tmp382, *_135
 243:src/dsp.c     **** 	*(vsample + 16) = *(vsample + 15);
 1128              		.loc 1 243 0
 1129 01f4 009B     		ldr	r3, [sp]	@ tmp383, vsample
 1130 01f6 2033     		adds	r3, r3, #32	@ D.6064,
 1131 01f8 009A     		ldr	r2, [sp]	@ tmp384, vsample
 1132 01fa D28B     		ldrh	r2, [r2, #30]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 30B]
 1133 01fc 1A80     		strh	r2, [r3]	@ tmp385, *_138
 244:src/dsp.c     **** 
 245:src/dsp.c     **** 	*(vsample + 15) = *(vsample + 14);
 1134              		.loc 1 245 0
 1135 01fe 009B     		ldr	r3, [sp]	@ tmp386, vsample
 1136 0200 1E33     		adds	r3, r3, #30	@ D.6064,
 1137 0202 009A     		ldr	r2, [sp]	@ tmp387, vsample
 1138 0204 928B     		ldrh	r2, [r2, #28]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 28B]
 1139 0206 1A80     		strh	r2, [r3]	@ tmp388, *_141
 246:src/dsp.c     **** 	*(vsample + 14) = *(vsample + 13);
 1140              		.loc 1 246 0
 1141 0208 009B     		ldr	r3, [sp]	@ tmp389, vsample
 1142 020a 1C33     		adds	r3, r3, #28	@ D.6064,
 1143 020c 009A     		ldr	r2, [sp]	@ tmp390, vsample
 1144 020e 528B     		ldrh	r2, [r2, #26]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 26B]
 1145 0210 1A80     		strh	r2, [r3]	@ tmp391, *_144
 247:src/dsp.c     **** 	*(vsample + 13) = *(vsample + 12);
 1146              		.loc 1 247 0
 1147 0212 009B     		ldr	r3, [sp]	@ tmp392, vsample
 1148 0214 1A33     		adds	r3, r3, #26	@ D.6064,
 1149 0216 009A     		ldr	r2, [sp]	@ tmp393, vsample
 1150 0218 128B     		ldrh	r2, [r2, #24]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 24B]
 1151 021a 1A80     		strh	r2, [r3]	@ tmp394, *_147
 248:src/dsp.c     **** 	*(vsample + 12) = *(vsample + 11);
 1152              		.loc 1 248 0
 1153 021c 009B     		ldr	r3, [sp]	@ tmp395, vsample
 1154 021e 1833     		adds	r3, r3, #24	@ D.6064,
 1155 0220 009A     		ldr	r2, [sp]	@ tmp396, vsample
 1156 0222 D28A     		ldrh	r2, [r2, #22]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 22B]
 1157 0224 1A80     		strh	r2, [r3]	@ tmp397, *_150
 249:src/dsp.c     **** 	*(vsample + 11) = *(vsample + 10);
 1158              		.loc 1 249 0
 1159 0226 009B     		ldr	r3, [sp]	@ tmp398, vsample
 1160 0228 1633     		adds	r3, r3, #22	@ D.6064,
 1161 022a 009A     		ldr	r2, [sp]	@ tmp399, vsample
 1162 022c 928A     		ldrh	r2, [r2, #20]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 20B]
ARM GAS  /tmp/ccGLq0Q1.s 			page 26


 1163 022e 1A80     		strh	r2, [r3]	@ tmp400, *_153
 250:src/dsp.c     **** 	*(vsample + 10) = *(vsample + 9);
 1164              		.loc 1 250 0
 1165 0230 009B     		ldr	r3, [sp]	@ tmp401, vsample
 1166 0232 1433     		adds	r3, r3, #20	@ D.6064,
 1167 0234 009A     		ldr	r2, [sp]	@ tmp402, vsample
 1168 0236 528A     		ldrh	r2, [r2, #18]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 18B]
 1169 0238 1A80     		strh	r2, [r3]	@ tmp403, *_156
 251:src/dsp.c     **** 	*(vsample + 9) = *(vsample + 8);
 1170              		.loc 1 251 0
 1171 023a 009B     		ldr	r3, [sp]	@ tmp404, vsample
 1172 023c 1233     		adds	r3, r3, #18	@ D.6064,
 1173 023e 009A     		ldr	r2, [sp]	@ tmp405, vsample
 1174 0240 128A     		ldrh	r2, [r2, #16]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 16B]
 1175 0242 1A80     		strh	r2, [r3]	@ tmp406, *_159
 252:src/dsp.c     **** 	*(vsample + 8) = *(vsample + 7);
 1176              		.loc 1 252 0
 1177 0244 009B     		ldr	r3, [sp]	@ tmp407, vsample
 1178 0246 1033     		adds	r3, r3, #16	@ D.6064,
 1179 0248 009A     		ldr	r2, [sp]	@ tmp408, vsample
 1180 024a D289     		ldrh	r2, [r2, #14]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 14B]
 1181 024c 1A80     		strh	r2, [r3]	@ tmp409, *_162
 253:src/dsp.c     **** 
 254:src/dsp.c     **** 	*(vsample + 7) = *(vsample + 6);
 1182              		.loc 1 254 0
 1183 024e 009B     		ldr	r3, [sp]	@ tmp410, vsample
 1184 0250 0E33     		adds	r3, r3, #14	@ D.6064,
 1185 0252 009A     		ldr	r2, [sp]	@ tmp411, vsample
 1186 0254 9289     		ldrh	r2, [r2, #12]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 12B]
 1187 0256 1A80     		strh	r2, [r3]	@ tmp412, *_165
 255:src/dsp.c     **** 	*(vsample + 6) = *(vsample + 5);
 1188              		.loc 1 255 0
 1189 0258 009B     		ldr	r3, [sp]	@ tmp413, vsample
 1190 025a 0C33     		adds	r3, r3, #12	@ D.6064,
 1191 025c 009A     		ldr	r2, [sp]	@ tmp414, vsample
 1192 025e 5289     		ldrh	r2, [r2, #10]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 10B]
 1193 0260 1A80     		strh	r2, [r3]	@ tmp415, *_168
 256:src/dsp.c     **** 	*(vsample + 5) = *(vsample + 4);
 1194              		.loc 1 256 0
 1195 0262 009B     		ldr	r3, [sp]	@ tmp416, vsample
 1196 0264 0A33     		adds	r3, r3, #10	@ D.6064,
 1197 0266 009A     		ldr	r2, [sp]	@ tmp417, vsample
 1198 0268 1289     		ldrh	r2, [r2, #8]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 8B]
 1199 026a 1A80     		strh	r2, [r3]	@ tmp418, *_171
 257:src/dsp.c     **** 	*(vsample + 4) = *(vsample + 3);
 1200              		.loc 1 257 0
 1201 026c 009B     		ldr	r3, [sp]	@ tmp419, vsample
 1202 026e 0833     		adds	r3, r3, #8	@ D.6064,
 1203 0270 009A     		ldr	r2, [sp]	@ tmp420, vsample
 1204 0272 D288     		ldrh	r2, [r2, #6]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 6B]
 1205 0274 1A80     		strh	r2, [r3]	@ tmp421, *_174
 258:src/dsp.c     **** 	*(vsample + 3) = *(vsample + 2);
 1206              		.loc 1 258 0
 1207 0276 009B     		ldr	r3, [sp]	@ tmp422, vsample
 1208 0278 0633     		adds	r3, r3, #6	@ D.6064,
 1209 027a 009A     		ldr	r2, [sp]	@ tmp423, vsample
 1210 027c 9288     		ldrh	r2, [r2, #4]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 4B]
ARM GAS  /tmp/ccGLq0Q1.s 			page 27


 1211 027e 1A80     		strh	r2, [r3]	@ tmp424, *_177
 259:src/dsp.c     **** 	*(vsample + 2) = *(vsample + 1);
 1212              		.loc 1 259 0
 1213 0280 009B     		ldr	r3, [sp]	@ tmp425, vsample
 1214 0282 0433     		adds	r3, r3, #4	@ D.6064,
 1215 0284 009A     		ldr	r2, [sp]	@ tmp426, vsample
 1216 0286 5288     		ldrh	r2, [r2, #2]	@ D.6063, MEM[(short unsigned int *)vsample_2(D) + 2B]
 1217 0288 1A80     		strh	r2, [r3]	@ tmp427, *_180
 260:src/dsp.c     **** 	*(vsample + 1) = *(vsample);
 1218              		.loc 1 260 0
 1219 028a 009B     		ldr	r3, [sp]	@ tmp428, vsample
 1220 028c 0233     		adds	r3, r3, #2	@ D.6064,
 1221 028e 009A     		ldr	r2, [sp]	@ tmp429, vsample
 1222 0290 1288     		ldrh	r2, [r2]	@ D.6063, *vsample_2(D)
 1223 0292 1A80     		strh	r2, [r3]	@ tmp430, *_183
 261:src/dsp.c     **** 	*(vsample) = new_sample;
 1224              		.loc 1 261 0
 1225 0294 009B     		ldr	r3, [sp]	@ tmp431, vsample
 1226 0296 6A46     		mov	r2, sp	@ tmp447,
 1227 0298 0632     		adds	r2, r2, #6	@ tmp432,
 1228 029a 1288     		ldrh	r2, [r2]	@ tmp433, new_sample
 1229 029c 1A80     		strh	r2, [r3]	@ tmp433, *vsample_2(D)
 262:src/dsp.c     **** 
 263:src/dsp.c     **** 	return total_ma >> 5;
 1230              		.loc 1 263 0
 1231 029e 0E23     		movs	r3, #14	@ tmp434,
 1232 02a0 6B44     		add	r3, r3, sp	@ tmp434,
 1233 02a2 1B88     		ldrh	r3, [r3]	@ tmp435, total_ma
 1234 02a4 5B09     		lsrs	r3, r3, #5	@ tmp436, tmp435,
 1235 02a6 9BB2     		uxth	r3, r3	@ D.6063, tmp436
 264:src/dsp.c     **** }
 1236              		.loc 1 264 0
 1237 02a8 1800     		movs	r0, r3	@, <retval>
 1238 02aa 04B0     		add	sp, sp, #16	@,,
 1239              		@ sp needed	@
 1240 02ac 7047     		bx	lr
 1241              		.cfi_endproc
 1242              	.LFE11:
 1243              		.size	MAFilter32, .-MAFilter32
 1244 02ae C046     		.section	.text.MAFilter32Fast,"ax",%progbits
 1245              		.align	2
 1246              		.global	MAFilter32Fast
 1247              		.code	16
 1248              		.thumb_func
 1249              		.type	MAFilter32Fast, %function
 1250              	MAFilter32Fast:
 1251              	.LFB12:
 265:src/dsp.c     **** 
 266:src/dsp.c     **** unsigned short MAFilter32Fast (unsigned short * vsample)
 267:src/dsp.c     **** {
 1252              		.loc 1 267 0
 1253              		.cfi_startproc
 1254 0000 84B0     		sub	sp, sp, #16	@,,
 1255              	.LCFI13:
 1256              		.cfi_def_cfa_offset 16
 1257 0002 0190     		str	r0, [sp, #4]	@ vsample, vsample
 268:src/dsp.c     **** 	unsigned int total_ma;
ARM GAS  /tmp/ccGLq0Q1.s 			page 28


 269:src/dsp.c     **** 
 270:src/dsp.c     **** 	total_ma = *(vsample) + *(vsample + 1) + *(vsample + 2) + *(vsample + 3) +
 1258              		.loc 1 270 0
 1259 0004 019B     		ldr	r3, [sp, #4]	@ tmp239, vsample
 1260 0006 1B88     		ldrh	r3, [r3]	@ D.6065, *vsample_2(D)
 1261 0008 1A00     		movs	r2, r3	@ D.6066, D.6065
 1262 000a 019B     		ldr	r3, [sp, #4]	@ tmp240, vsample
 1263 000c 0233     		adds	r3, r3, #2	@ D.6067,
 1264 000e 1B88     		ldrh	r3, [r3]	@ D.6065, *_5
 1265 0010 D318     		adds	r3, r2, r3	@ D.6066, D.6066, D.6066
 1266 0012 019A     		ldr	r2, [sp, #4]	@ tmp241, vsample
 1267 0014 0432     		adds	r2, r2, #4	@ D.6067,
 1268 0016 1288     		ldrh	r2, [r2]	@ D.6065, *_9
 1269 0018 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1270 001a 019A     		ldr	r2, [sp, #4]	@ tmp242, vsample
 1271 001c 0632     		adds	r2, r2, #6	@ D.6067,
 1272 001e 1288     		ldrh	r2, [r2]	@ D.6065, *_13
 1273 0020 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 271:src/dsp.c     ****             *(vsample + 4) + *(vsample + 5) + *(vsample + 6) + *(vsample + 7);
 1274              		.loc 1 271 0
 1275 0022 019A     		ldr	r2, [sp, #4]	@ tmp243, vsample
 1276 0024 0832     		adds	r2, r2, #8	@ D.6067,
 1277 0026 1288     		ldrh	r2, [r2]	@ D.6065, *_17
 270:src/dsp.c     ****             *(vsample + 4) + *(vsample + 5) + *(vsample + 6) + *(vsample + 7);
 1278              		.loc 1 270 0
 1279 0028 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1280              		.loc 1 271 0
 1281 002a 019A     		ldr	r2, [sp, #4]	@ tmp244, vsample
 1282 002c 0A32     		adds	r2, r2, #10	@ D.6067,
 1283 002e 1288     		ldrh	r2, [r2]	@ D.6065, *_21
 1284 0030 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1285 0032 019A     		ldr	r2, [sp, #4]	@ tmp245, vsample
 1286 0034 0C32     		adds	r2, r2, #12	@ D.6067,
 1287 0036 1288     		ldrh	r2, [r2]	@ D.6065, *_25
 1288 0038 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1289 003a 019A     		ldr	r2, [sp, #4]	@ tmp246, vsample
 1290 003c 0E32     		adds	r2, r2, #14	@ D.6067,
 1291 003e 1288     		ldrh	r2, [r2]	@ D.6065, *_29
 1292 0040 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 270:src/dsp.c     ****             *(vsample + 4) + *(vsample + 5) + *(vsample + 6) + *(vsample + 7);
 1293              		.loc 1 270 0
 1294 0042 0393     		str	r3, [sp, #12]	@ D.6066, total_ma
 272:src/dsp.c     ****         
 273:src/dsp.c     **** 	total_ma += *(vsample + 8) + *(vsample + 9) + *(vsample + 10) + *(vsample + 11) +
 1295              		.loc 1 273 0
 1296 0044 019B     		ldr	r3, [sp, #4]	@ tmp247, vsample
 1297 0046 1033     		adds	r3, r3, #16	@ D.6067,
 1298 0048 1B88     		ldrh	r3, [r3]	@ D.6065, *_34
 1299 004a 1A00     		movs	r2, r3	@ D.6066, D.6065
 1300 004c 019B     		ldr	r3, [sp, #4]	@ tmp248, vsample
 1301 004e 1233     		adds	r3, r3, #18	@ D.6067,
 1302 0050 1B88     		ldrh	r3, [r3]	@ D.6065, *_37
 1303 0052 D318     		adds	r3, r2, r3	@ D.6066, D.6066, D.6066
 1304 0054 019A     		ldr	r2, [sp, #4]	@ tmp249, vsample
 1305 0056 1432     		adds	r2, r2, #20	@ D.6067,
 1306 0058 1288     		ldrh	r2, [r2]	@ D.6065, *_41
 1307 005a 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
ARM GAS  /tmp/ccGLq0Q1.s 			page 29


 1308 005c 019A     		ldr	r2, [sp, #4]	@ tmp250, vsample
 1309 005e 1632     		adds	r2, r2, #22	@ D.6067,
 1310 0060 1288     		ldrh	r2, [r2]	@ D.6065, *_45
 1311 0062 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 274:src/dsp.c     ****             *(vsample + 12) + *(vsample + 13) + *(vsample + 14) + *(vsample + 15);
 1312              		.loc 1 274 0
 1313 0064 019A     		ldr	r2, [sp, #4]	@ tmp251, vsample
 1314 0066 1832     		adds	r2, r2, #24	@ D.6067,
 1315 0068 1288     		ldrh	r2, [r2]	@ D.6065, *_49
 273:src/dsp.c     ****             *(vsample + 12) + *(vsample + 13) + *(vsample + 14) + *(vsample + 15);
 1316              		.loc 1 273 0
 1317 006a 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1318              		.loc 1 274 0
 1319 006c 019A     		ldr	r2, [sp, #4]	@ tmp252, vsample
 1320 006e 1A32     		adds	r2, r2, #26	@ D.6067,
 1321 0070 1288     		ldrh	r2, [r2]	@ D.6065, *_53
 1322 0072 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1323 0074 019A     		ldr	r2, [sp, #4]	@ tmp253, vsample
 1324 0076 1C32     		adds	r2, r2, #28	@ D.6067,
 1325 0078 1288     		ldrh	r2, [r2]	@ D.6065, *_57
 1326 007a 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1327 007c 019A     		ldr	r2, [sp, #4]	@ tmp254, vsample
 1328 007e 1E32     		adds	r2, r2, #30	@ D.6067,
 1329 0080 1288     		ldrh	r2, [r2]	@ D.6065, *_61
 1330 0082 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 273:src/dsp.c     ****             *(vsample + 12) + *(vsample + 13) + *(vsample + 14) + *(vsample + 15);
 1331              		.loc 1 273 0
 1332 0084 1A00     		movs	r2, r3	@ D.6068, D.6066
 1333 0086 039B     		ldr	r3, [sp, #12]	@ tmp256, total_ma
 1334 0088 9B18     		adds	r3, r3, r2	@ tmp255, tmp256, D.6068
 1335 008a 0393     		str	r3, [sp, #12]	@ tmp255, total_ma
 275:src/dsp.c     ****         
 276:src/dsp.c     **** 	total_ma += *(vsample + 16) + *(vsample + 17) + *(vsample + 18) + *(vsample + 19) +
 1336              		.loc 1 276 0
 1337 008c 019B     		ldr	r3, [sp, #4]	@ tmp257, vsample
 1338 008e 2033     		adds	r3, r3, #32	@ D.6067,
 1339 0090 1B88     		ldrh	r3, [r3]	@ D.6065, *_67
 1340 0092 1A00     		movs	r2, r3	@ D.6066, D.6065
 1341 0094 019B     		ldr	r3, [sp, #4]	@ tmp258, vsample
 1342 0096 2233     		adds	r3, r3, #34	@ D.6067,
 1343 0098 1B88     		ldrh	r3, [r3]	@ D.6065, *_70
 1344 009a D318     		adds	r3, r2, r3	@ D.6066, D.6066, D.6066
 1345 009c 019A     		ldr	r2, [sp, #4]	@ tmp259, vsample
 1346 009e 2432     		adds	r2, r2, #36	@ D.6067,
 1347 00a0 1288     		ldrh	r2, [r2]	@ D.6065, *_74
 1348 00a2 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1349 00a4 019A     		ldr	r2, [sp, #4]	@ tmp260, vsample
 1350 00a6 2632     		adds	r2, r2, #38	@ D.6067,
 1351 00a8 1288     		ldrh	r2, [r2]	@ D.6065, *_78
 1352 00aa 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 277:src/dsp.c     ****             *(vsample + 20) + *(vsample + 21) + *(vsample + 22) + *(vsample + 23);
 1353              		.loc 1 277 0
 1354 00ac 019A     		ldr	r2, [sp, #4]	@ tmp261, vsample
 1355 00ae 2832     		adds	r2, r2, #40	@ D.6067,
 1356 00b0 1288     		ldrh	r2, [r2]	@ D.6065, *_82
 276:src/dsp.c     ****             *(vsample + 20) + *(vsample + 21) + *(vsample + 22) + *(vsample + 23);
 1357              		.loc 1 276 0
ARM GAS  /tmp/ccGLq0Q1.s 			page 30


 1358 00b2 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1359              		.loc 1 277 0
 1360 00b4 019A     		ldr	r2, [sp, #4]	@ tmp262, vsample
 1361 00b6 2A32     		adds	r2, r2, #42	@ D.6067,
 1362 00b8 1288     		ldrh	r2, [r2]	@ D.6065, *_86
 1363 00ba 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1364 00bc 019A     		ldr	r2, [sp, #4]	@ tmp263, vsample
 1365 00be 2C32     		adds	r2, r2, #44	@ D.6067,
 1366 00c0 1288     		ldrh	r2, [r2]	@ D.6065, *_90
 1367 00c2 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1368 00c4 019A     		ldr	r2, [sp, #4]	@ tmp264, vsample
 1369 00c6 2E32     		adds	r2, r2, #46	@ D.6067,
 1370 00c8 1288     		ldrh	r2, [r2]	@ D.6065, *_94
 1371 00ca 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 276:src/dsp.c     ****             *(vsample + 20) + *(vsample + 21) + *(vsample + 22) + *(vsample + 23);
 1372              		.loc 1 276 0
 1373 00cc 1A00     		movs	r2, r3	@ D.6068, D.6066
 1374 00ce 039B     		ldr	r3, [sp, #12]	@ tmp266, total_ma
 1375 00d0 9B18     		adds	r3, r3, r2	@ tmp265, tmp266, D.6068
 1376 00d2 0393     		str	r3, [sp, #12]	@ tmp265, total_ma
 278:src/dsp.c     ****         
 279:src/dsp.c     **** 	total_ma += *(vsample + 24) + *(vsample + 25) + *(vsample + 26) + *(vsample + 27) +
 1377              		.loc 1 279 0
 1378 00d4 019B     		ldr	r3, [sp, #4]	@ tmp267, vsample
 1379 00d6 3033     		adds	r3, r3, #48	@ D.6067,
 1380 00d8 1B88     		ldrh	r3, [r3]	@ D.6065, *_100
 1381 00da 1A00     		movs	r2, r3	@ D.6066, D.6065
 1382 00dc 019B     		ldr	r3, [sp, #4]	@ tmp268, vsample
 1383 00de 3233     		adds	r3, r3, #50	@ D.6067,
 1384 00e0 1B88     		ldrh	r3, [r3]	@ D.6065, *_103
 1385 00e2 D318     		adds	r3, r2, r3	@ D.6066, D.6066, D.6066
 1386 00e4 019A     		ldr	r2, [sp, #4]	@ tmp269, vsample
 1387 00e6 3432     		adds	r2, r2, #52	@ D.6067,
 1388 00e8 1288     		ldrh	r2, [r2]	@ D.6065, *_107
 1389 00ea 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1390 00ec 019A     		ldr	r2, [sp, #4]	@ tmp270, vsample
 1391 00ee 3632     		adds	r2, r2, #54	@ D.6067,
 1392 00f0 1288     		ldrh	r2, [r2]	@ D.6065, *_111
 1393 00f2 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 280:src/dsp.c     ****             *(vsample + 28) + *(vsample + 29) + *(vsample + 30) + *(vsample + 31);
 1394              		.loc 1 280 0
 1395 00f4 019A     		ldr	r2, [sp, #4]	@ tmp271, vsample
 1396 00f6 3832     		adds	r2, r2, #56	@ D.6067,
 1397 00f8 1288     		ldrh	r2, [r2]	@ D.6065, *_115
 279:src/dsp.c     ****             *(vsample + 28) + *(vsample + 29) + *(vsample + 30) + *(vsample + 31);
 1398              		.loc 1 279 0
 1399 00fa 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1400              		.loc 1 280 0
 1401 00fc 019A     		ldr	r2, [sp, #4]	@ tmp272, vsample
 1402 00fe 3A32     		adds	r2, r2, #58	@ D.6067,
 1403 0100 1288     		ldrh	r2, [r2]	@ D.6065, *_119
 1404 0102 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1405 0104 019A     		ldr	r2, [sp, #4]	@ tmp273, vsample
 1406 0106 3C32     		adds	r2, r2, #60	@ D.6067,
 1407 0108 1288     		ldrh	r2, [r2]	@ D.6065, *_123
 1408 010a 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 1409 010c 019A     		ldr	r2, [sp, #4]	@ tmp274, vsample
ARM GAS  /tmp/ccGLq0Q1.s 			page 31


 1410 010e 3E32     		adds	r2, r2, #62	@ D.6067,
 1411 0110 1288     		ldrh	r2, [r2]	@ D.6065, *_127
 1412 0112 9B18     		adds	r3, r3, r2	@ D.6066, D.6066, D.6066
 279:src/dsp.c     ****             *(vsample + 28) + *(vsample + 29) + *(vsample + 30) + *(vsample + 31);
 1413              		.loc 1 279 0
 1414 0114 1A00     		movs	r2, r3	@ D.6068, D.6066
 1415 0116 039B     		ldr	r3, [sp, #12]	@ tmp276, total_ma
 1416 0118 9B18     		adds	r3, r3, r2	@ tmp275, tmp276, D.6068
 1417 011a 0393     		str	r3, [sp, #12]	@ tmp275, total_ma
 281:src/dsp.c     **** 
 282:src/dsp.c     **** 	return (unsigned short) (total_ma >> 5);
 1418              		.loc 1 282 0
 1419 011c 039B     		ldr	r3, [sp, #12]	@ tmp277, total_ma
 1420 011e 5B09     		lsrs	r3, r3, #5	@ D.6068, tmp277,
 1421 0120 9BB2     		uxth	r3, r3	@ D.6065, D.6068
 283:src/dsp.c     **** }
 1422              		.loc 1 283 0
 1423 0122 1800     		movs	r0, r3	@, <retval>
 1424 0124 04B0     		add	sp, sp, #16	@,,
 1425              		@ sp needed	@
 1426 0126 7047     		bx	lr
 1427              		.cfi_endproc
 1428              	.LFE12:
 1429              		.size	MAFilter32Fast, .-MAFilter32Fast
 1430              		.section	.text.MAFilter32Circular,"ax",%progbits
 1431              		.align	2
 1432              		.global	MAFilter32Circular
 1433              		.code	16
 1434              		.thumb_func
 1435              		.type	MAFilter32Circular, %function
 1436              	MAFilter32Circular:
 1437              	.LFB13:
 284:src/dsp.c     **** 
 285:src/dsp.c     **** //Filtro circular, recibe
 286:src/dsp.c     **** //new_sample, p_vec_samples: vector donde se guardan todas las muestras
 287:src/dsp.c     **** //p_vector: puntero que recorre el vector de muestras, p_sum: puntero al valor de la sumatoria de m
 288:src/dsp.c     **** //devuelve resultado del filtro
 289:src/dsp.c     **** unsigned short MAFilter32Circular (unsigned short new_sample, unsigned short * p_vec_samples, unsig
 290:src/dsp.c     **** {
 1438              		.loc 1 290 0
 1439              		.cfi_startproc
 1440 0000 86B0     		sub	sp, sp, #24	@,,
 1441              	.LCFI14:
 1442              		.cfi_def_cfa_offset 24
 1443 0002 0291     		str	r1, [sp, #8]	@ p_vec_samples, p_vec_samples
 1444 0004 0192     		str	r2, [sp, #4]	@ index, index
 1445 0006 0093     		str	r3, [sp]	@ p_sum, p_sum
 1446 0008 0E23     		movs	r3, #14	@ tmp125,
 1447 000a 6B44     		add	r3, r3, sp	@ tmp125,
 1448 000c 021C     		adds	r2, r0, #0	@ tmp126, tmp124
 1449 000e 1A80     		strh	r2, [r3]	@ tmp126, new_sample
 291:src/dsp.c     **** 	unsigned int total_ma;
 292:src/dsp.c     **** 	unsigned short * p_vector;
 293:src/dsp.c     **** 
 294:src/dsp.c     **** 	p_vector = (p_vec_samples + *index);
 1450              		.loc 1 294 0
 1451 0010 019B     		ldr	r3, [sp, #4]	@ tmp127, index
ARM GAS  /tmp/ccGLq0Q1.s 			page 32


 1452 0012 1B78     		ldrb	r3, [r3]	@ D.6069, *index_4(D)
 1453 0014 5B00     		lsls	r3, r3, #1	@ D.6070, D.6070,
 1454 0016 029A     		ldr	r2, [sp, #8]	@ tmp129, p_vec_samples
 1455 0018 D318     		adds	r3, r2, r3	@ tmp128, tmp129, D.6070
 1456 001a 0593     		str	r3, [sp, #20]	@ tmp128, p_vector
 295:src/dsp.c     **** 
 296:src/dsp.c     **** 	//agrego la nueva muestra al total guardado
 297:src/dsp.c     **** 	total_ma = *p_sum + new_sample;
 1457              		.loc 1 297 0
 1458 001c 009B     		ldr	r3, [sp]	@ tmp130, p_sum
 1459 001e 1A68     		ldr	r2, [r3]	@ D.6070, *p_sum_10(D)
 1460 0020 0E23     		movs	r3, #14	@ tmp131,
 1461 0022 6B44     		add	r3, r3, sp	@ tmp131,
 1462 0024 1B88     		ldrh	r3, [r3]	@ D.6070, new_sample
 1463 0026 D318     		adds	r3, r2, r3	@ tmp132, D.6070, D.6070
 1464 0028 0493     		str	r3, [sp, #16]	@ tmp132, total_ma
 298:src/dsp.c     **** 
 299:src/dsp.c     **** 	//guardo el nuevo sample y actualizo el puntero
 300:src/dsp.c     **** 	*p_vector = new_sample;
 1465              		.loc 1 300 0
 1466 002a 059B     		ldr	r3, [sp, #20]	@ tmp133, p_vector
 1467 002c 0E22     		movs	r2, #14	@ tmp134,
 1468 002e 6A44     		add	r2, r2, sp	@ tmp134,
 1469 0030 1288     		ldrh	r2, [r2]	@ tmp135, new_sample
 1470 0032 1A80     		strh	r2, [r3]	@ tmp135, *p_vector_9
 301:src/dsp.c     **** 	if (p_vector < (p_vec_samples + 31))
 1471              		.loc 1 301 0
 1472 0034 029B     		ldr	r3, [sp, #8]	@ tmp136, p_vec_samples
 1473 0036 3E33     		adds	r3, r3, #62	@ D.6071,
 1474 0038 1A1E     		subs	r2, r3, #0	@ D.6071, D.6071,
 1475 003a 059B     		ldr	r3, [sp, #20]	@ tmp137, p_vector
 1476 003c 9A42     		cmp	r2, r3	@ D.6071, tmp137
 1477 003e 09D9     		bls	.L51	@,
 302:src/dsp.c     **** 	{
 303:src/dsp.c     **** 		p_vector++;
 1478              		.loc 1 303 0
 1479 0040 059B     		ldr	r3, [sp, #20]	@ tmp139, p_vector
 1480 0042 0233     		adds	r3, r3, #2	@ tmp138,
 1481 0044 0593     		str	r3, [sp, #20]	@ tmp138, p_vector
 304:src/dsp.c     **** 		*index += 1;
 1482              		.loc 1 304 0
 1483 0046 019B     		ldr	r3, [sp, #4]	@ tmp140, index
 1484 0048 1B78     		ldrb	r3, [r3]	@ D.6069, *index_4(D)
 1485 004a 0133     		adds	r3, r3, #1	@ tmp141,
 1486 004c DAB2     		uxtb	r2, r3	@ D.6069, tmp141
 1487 004e 019B     		ldr	r3, [sp, #4]	@ tmp142, index
 1488 0050 1A70     		strb	r2, [r3]	@ tmp143, *index_4(D)
 1489 0052 04E0     		b	.L52	@
 1490              	.L51:
 305:src/dsp.c     **** 	}
 306:src/dsp.c     **** 	else
 307:src/dsp.c     **** 	{
 308:src/dsp.c     **** 		p_vector = p_vec_samples;
 1491              		.loc 1 308 0
 1492 0054 029B     		ldr	r3, [sp, #8]	@ tmp144, p_vec_samples
 1493 0056 0593     		str	r3, [sp, #20]	@ tmp144, p_vector
 309:src/dsp.c     **** 		*index = 0;
ARM GAS  /tmp/ccGLq0Q1.s 			page 33


 1494              		.loc 1 309 0
 1495 0058 019B     		ldr	r3, [sp, #4]	@ tmp145, index
 1496 005a 0022     		movs	r2, #0	@ tmp146,
 1497 005c 1A70     		strb	r2, [r3]	@ tmp147, *index_4(D)
 1498              	.L52:
 310:src/dsp.c     **** 	}
 311:src/dsp.c     **** 
 312:src/dsp.c     **** 	//resto la muestra - 32 (es la apuntada por el puntero porque es circular)
 313:src/dsp.c     **** 	total_ma -= *p_vector;
 1499              		.loc 1 313 0
 1500 005e 059B     		ldr	r3, [sp, #20]	@ tmp148, p_vector
 1501 0060 1B88     		ldrh	r3, [r3]	@ D.6072, *p_vector_1
 1502 0062 1A00     		movs	r2, r3	@ D.6070, D.6072
 1503 0064 049B     		ldr	r3, [sp, #16]	@ tmp150, total_ma
 1504 0066 9B1A     		subs	r3, r3, r2	@ tmp149, tmp150, D.6070
 1505 0068 0493     		str	r3, [sp, #16]	@ tmp149, total_ma
 314:src/dsp.c     **** 	*p_sum = (unsigned short) total_ma;
 1506              		.loc 1 314 0
 1507 006a 049B     		ldr	r3, [sp, #16]	@ tmp151, total_ma
 1508 006c 1B04     		lsls	r3, r3, #16	@ tmp152, tmp151,
 1509 006e 1A0C     		lsrs	r2, r3, #16	@ D.6070, tmp152,
 1510 0070 009B     		ldr	r3, [sp]	@ tmp153, p_sum
 1511 0072 1A60     		str	r2, [r3]	@ D.6070, *p_sum_10(D)
 315:src/dsp.c     **** 
 316:src/dsp.c     **** 	return total_ma >> 5;
 1512              		.loc 1 316 0
 1513 0074 049B     		ldr	r3, [sp, #16]	@ tmp154, total_ma
 1514 0076 5B09     		lsrs	r3, r3, #5	@ D.6070, tmp154,
 1515 0078 9BB2     		uxth	r3, r3	@ D.6072, D.6070
 317:src/dsp.c     **** }
 1516              		.loc 1 317 0
 1517 007a 1800     		movs	r0, r3	@, <retval>
 1518 007c 06B0     		add	sp, sp, #24	@,,
 1519              		@ sp needed	@
 1520 007e 7047     		bx	lr
 1521              		.cfi_endproc
 1522              	.LFE13:
 1523              		.size	MAFilter32Circular, .-MAFilter32Circular
 1524              		.section	.text.PID,"ax",%progbits
 1525              		.align	2
 1526              		.global	PID
 1527              		.code	16
 1528              		.thumb_func
 1529              		.type	PID, %function
 1530              	PID:
 1531              	.LFB14:
 318:src/dsp.c     **** 
 319:src/dsp.c     **** #ifdef USE_PID_CONTROLLERS
 320:src/dsp.c     **** short PID (short setpoint, short sample)
 321:src/dsp.c     **** {
 1532              		.loc 1 321 0
 1533              		.cfi_startproc
 1534 0000 86B0     		sub	sp, sp, #24	@,,
 1535              	.LCFI15:
 1536              		.cfi_def_cfa_offset 24
 1537 0002 0200     		movs	r2, r0	@ tmp135, setpoint
 1538 0004 6B46     		mov	r3, sp	@ tmp201,
ARM GAS  /tmp/ccGLq0Q1.s 			page 34


 1539 0006 0633     		adds	r3, r3, #6	@ tmp136,
 1540 0008 1A80     		strh	r2, [r3]	@ tmp137, setpoint
 1541 000a 01AB     		add	r3, sp, #4	@ tmp139,,
 1542 000c 0A1C     		adds	r2, r1, #0	@ tmp140, tmp138
 1543 000e 1A80     		strh	r2, [r3]	@ tmp140, sample
 322:src/dsp.c     ****     short error = 0;
 1544              		.loc 1 322 0
 1545 0010 1623     		movs	r3, #22	@ tmp141,
 1546 0012 6B44     		add	r3, r3, sp	@ tmp141,
 1547 0014 0022     		movs	r2, #0	@ tmp142,
 1548 0016 1A80     		strh	r2, [r3]	@ tmp143, error
 323:src/dsp.c     ****     short d = 0;
 1549              		.loc 1 323 0
 1550 0018 05AB     		add	r3, sp, #20	@ tmp144,,
 1551 001a 0022     		movs	r2, #0	@ tmp145,
 1552 001c 1A80     		strh	r2, [r3]	@ tmp146, d
 324:src/dsp.c     **** 
 325:src/dsp.c     ****     short val_k1 = 0;
 1553              		.loc 1 325 0
 1554 001e 1223     		movs	r3, #18	@ tmp147,
 1555 0020 6B44     		add	r3, r3, sp	@ tmp147,
 1556 0022 0022     		movs	r2, #0	@ tmp148,
 1557 0024 1A80     		strh	r2, [r3]	@ tmp149, val_k1
 326:src/dsp.c     ****     short val_k2 = 0;
 1558              		.loc 1 326 0
 1559 0026 04AB     		add	r3, sp, #16	@ tmp150,,
 1560 0028 0022     		movs	r2, #0	@ tmp151,
 1561 002a 1A80     		strh	r2, [r3]	@ tmp152, val_k2
 327:src/dsp.c     ****     short val_k3 = 0;
 1562              		.loc 1 327 0
 1563 002c 0E23     		movs	r3, #14	@ tmp153,
 1564 002e 6B44     		add	r3, r3, sp	@ tmp153,
 1565 0030 0022     		movs	r2, #0	@ tmp154,
 1566 0032 1A80     		strh	r2, [r3]	@ tmp155, val_k3
 328:src/dsp.c     **** 
 329:src/dsp.c     ****     error = setpoint - sample;
 1567              		.loc 1 329 0
 1568 0034 6B46     		mov	r3, sp	@ tmp205,
 1569 0036 0633     		adds	r3, r3, #6	@ tmp156,
 1570 0038 1A88     		ldrh	r2, [r3]	@ D.6073, setpoint
 1571 003a 01AB     		add	r3, sp, #4	@ tmp157,,
 1572 003c 1B88     		ldrh	r3, [r3]	@ D.6073, sample
 1573 003e D31A     		subs	r3, r2, r3	@ tmp158, D.6073, D.6073
 1574 0040 9AB2     		uxth	r2, r3	@ D.6073, tmp158
 1575 0042 1623     		movs	r3, #22	@ tmp159,
 1576 0044 6B44     		add	r3, r3, sp	@ tmp159,
 1577 0046 1A80     		strh	r2, [r3]	@ tmp160, error
 330:src/dsp.c     **** 
 331:src/dsp.c     ****     //K1
 332:src/dsp.c     ****     acc = K1V * error;		//5500 / 32768 = 0.167 errores de hasta 6 puntos
 1578              		.loc 1 332 0
 1579 0048 1623     		movs	r3, #22	@ tmp161,
 1580 004a 6B44     		add	r3, r3, sp	@ tmp161,
 1581 004c 0022     		movs	r2, #0	@ tmp198,
 1582 004e 9B5E     		ldrsh	r3, [r3, r2]	@ D.6074, tmp161, tmp198
 1583 0050 DA00     		lsls	r2, r3, #3	@ D.6074, D.6074,
 1584 0052 224B     		ldr	r3, .L56	@ tmp162,
ARM GAS  /tmp/ccGLq0Q1.s 			page 35


 1585 0054 1A60     		str	r2, [r3]	@ D.6074, acc
 333:src/dsp.c     ****     val_k1 = acc >> PID_CONSTANT_DIVIDER;
 1586              		.loc 1 333 0
 1587 0056 214B     		ldr	r3, .L56	@ tmp163,
 1588 0058 1B68     		ldr	r3, [r3]	@ D.6074, acc
 1589 005a DA11     		asrs	r2, r3, #7	@ D.6074, D.6074,
 1590 005c 1223     		movs	r3, #18	@ tmp164,
 1591 005e 6B44     		add	r3, r3, sp	@ tmp164,
 1592 0060 1A80     		strh	r2, [r3]	@ tmp165, val_k1
 334:src/dsp.c     **** 
 335:src/dsp.c     ****     //K2
 336:src/dsp.c     ****     acc = K2V * error_z1;		//K2 = no llega pruebo con 1
 1593              		.loc 1 336 0
 1594 0062 1F4B     		ldr	r3, .L56+4	@ tmp166,
 1595 0064 1B88     		ldrh	r3, [r3]	@ D.6075, error_z1
 1596 0066 1AB2     		sxth	r2, r3	@ D.6074, D.6075
 1597 0068 1300     		movs	r3, r2	@ tmp167, D.6074
 1598 006a 9B00     		lsls	r3, r3, #2	@ tmp167, tmp167,
 1599 006c 9A18     		adds	r2, r3, r2	@ D.6074, tmp167, D.6074
 1600 006e 1B4B     		ldr	r3, .L56	@ tmp168,
 1601 0070 1A60     		str	r2, [r3]	@ D.6074, acc
 337:src/dsp.c     ****     val_k2 = acc >> PID_CONSTANT_DIVIDER;    //si es mas grande que K1 + K3 no lo deja arrancar
 1602              		.loc 1 337 0
 1603 0072 1A4B     		ldr	r3, .L56	@ tmp169,
 1604 0074 1B68     		ldr	r3, [r3]	@ D.6074, acc
 1605 0076 DA11     		asrs	r2, r3, #7	@ D.6074, D.6074,
 1606 0078 04AB     		add	r3, sp, #16	@ tmp170,,
 1607 007a 1A80     		strh	r2, [r3]	@ tmp171, val_k2
 338:src/dsp.c     **** 
 339:src/dsp.c     ****     //K3
 340:src/dsp.c     ****     acc = K3V * error_z2;		//K3 = 0.4
 1608              		.loc 1 340 0
 1609 007c 174B     		ldr	r3, .L56	@ tmp172,
 1610 007e 0022     		movs	r2, #0	@ tmp173,
 1611 0080 1A60     		str	r2, [r3]	@ tmp173, acc
 341:src/dsp.c     ****     val_k3 = acc >> PID_CONSTANT_DIVIDER;
 1612              		.loc 1 341 0
 1613 0082 164B     		ldr	r3, .L56	@ tmp174,
 1614 0084 1B68     		ldr	r3, [r3]	@ D.6074, acc
 1615 0086 DA11     		asrs	r2, r3, #7	@ D.6074, D.6074,
 1616 0088 0E23     		movs	r3, #14	@ tmp175,
 1617 008a 6B44     		add	r3, r3, sp	@ tmp175,
 1618 008c 1A80     		strh	r2, [r3]	@ tmp176, val_k3
 342:src/dsp.c     **** 
 343:src/dsp.c     ****     d = d_last + val_k1 - val_k2 + val_k3;
 1619              		.loc 1 343 0
 1620 008e 154B     		ldr	r3, .L56+8	@ tmp177,
 1621 0090 1B88     		ldrh	r3, [r3]	@ D.6075, d_last
 1622 0092 9AB2     		uxth	r2, r3	@ D.6073, D.6075
 1623 0094 1223     		movs	r3, #18	@ tmp178,
 1624 0096 6B44     		add	r3, r3, sp	@ tmp178,
 1625 0098 1B88     		ldrh	r3, [r3]	@ D.6073, val_k1
 1626 009a D318     		adds	r3, r2, r3	@ tmp179, D.6073, D.6073
 1627 009c 9AB2     		uxth	r2, r3	@ D.6073, tmp179
 1628 009e 04AB     		add	r3, sp, #16	@ tmp180,,
 1629 00a0 1B88     		ldrh	r3, [r3]	@ D.6073, val_k2
 1630 00a2 D31A     		subs	r3, r2, r3	@ tmp181, D.6073, D.6073
ARM GAS  /tmp/ccGLq0Q1.s 			page 36


 1631 00a4 9AB2     		uxth	r2, r3	@ D.6073, tmp181
 1632 00a6 0E23     		movs	r3, #14	@ tmp182,
 1633 00a8 6B44     		add	r3, r3, sp	@ tmp182,
 1634 00aa 1B88     		ldrh	r3, [r3]	@ D.6073, val_k3
 1635 00ac D318     		adds	r3, r2, r3	@ tmp183, D.6073, D.6073
 1636 00ae 9AB2     		uxth	r2, r3	@ D.6073, tmp183
 1637 00b0 05AB     		add	r3, sp, #20	@ tmp184,,
 1638 00b2 1A80     		strh	r2, [r3]	@ tmp185, d
 344:src/dsp.c     **** 
 345:src/dsp.c     ****     //Update variables PID
 346:src/dsp.c     ****     error_z2 = error_z1;
 1639              		.loc 1 346 0
 1640 00b4 0A4B     		ldr	r3, .L56+4	@ tmp186,
 1641 00b6 1A88     		ldrh	r2, [r3]	@ D.6075, error_z1
 1642 00b8 0B4B     		ldr	r3, .L56+12	@ tmp187,
 1643 00ba 1A80     		strh	r2, [r3]	@ tmp188, error_z2
 347:src/dsp.c     ****     error_z1 = error;
 1644              		.loc 1 347 0
 1645 00bc 084B     		ldr	r3, .L56+4	@ tmp189,
 1646 00be 1622     		movs	r2, #22	@ tmp190,
 1647 00c0 6A44     		add	r2, r2, sp	@ tmp190,
 1648 00c2 1288     		ldrh	r2, [r2]	@ tmp191, error
 1649 00c4 1A80     		strh	r2, [r3]	@ tmp191, error_z1
 348:src/dsp.c     ****     d_last = d;
 1650              		.loc 1 348 0
 1651 00c6 074B     		ldr	r3, .L56+8	@ tmp192,
 1652 00c8 05AA     		add	r2, sp, #20	@ tmp193,,
 1653 00ca 1288     		ldrh	r2, [r2]	@ tmp194, d
 1654 00cc 1A80     		strh	r2, [r3]	@ tmp194, d_last
 349:src/dsp.c     **** 
 350:src/dsp.c     ****     return d;
 1655              		.loc 1 350 0
 1656 00ce 05AB     		add	r3, sp, #20	@ tmp195,,
 1657 00d0 1B88     		ldrh	r3, [r3]	@ D.6075, d
 1658 00d2 1BB2     		sxth	r3, r3	@ tmp197, D.6075
 351:src/dsp.c     **** }
 1659              		.loc 1 351 0
 1660 00d4 1800     		movs	r0, r3	@, <retval>
 1661 00d6 06B0     		add	sp, sp, #24	@,,
 1662              		@ sp needed	@
 1663 00d8 7047     		bx	lr
 1664              	.L57:
 1665 00da C046     		.align	2
 1666              	.L56:
 1667 00dc 00000000 		.word	acc
 1668 00e0 00000000 		.word	error_z1
 1669 00e4 00000000 		.word	d_last
 1670 00e8 00000000 		.word	error_z2
 1671              		.cfi_endproc
 1672              	.LFE14:
 1673              		.size	PID, .-PID
 1674              		.section	.text.PID_roof,"ax",%progbits
 1675              		.align	2
 1676              		.global	PID_roof
 1677              		.code	16
 1678              		.thumb_func
 1679              		.type	PID_roof, %function
ARM GAS  /tmp/ccGLq0Q1.s 			page 37


 1680              	PID_roof:
 1681              	.LFB15:
 352:src/dsp.c     **** 
 353:src/dsp.c     **** #if (defined USE_PID_UPDATED_CONSTANTS)
 354:src/dsp.c     **** #define K1    (pid_param_p + pid_param_i + pid_param_d)
 355:src/dsp.c     **** #define K2    (pid_param_p + pid_param_d + pid_param_d)
 356:src/dsp.c     **** #define K3    (pid_param_d)
 357:src/dsp.c     **** 
 358:src/dsp.c     **** void PID_update_constants (unsigned short kp, unsigned short ki, unsigned short kd)
 359:src/dsp.c     **** {
 360:src/dsp.c     ****     pid_param_p = kp;
 361:src/dsp.c     ****     pid_param_i = ki;
 362:src/dsp.c     ****     pid_param_d = kd;
 363:src/dsp.c     **** }
 364:src/dsp.c     **** #elif (defined USE_PID_FIXED_CONSTANTS)
 365:src/dsp.c     **** #define K1    K1V
 366:src/dsp.c     **** #define K2    K2V
 367:src/dsp.c     **** #define K3    K3V
 368:src/dsp.c     **** #else
 369:src/dsp.c     **** #error "Select the PID constants mode on dsp.h"
 370:src/dsp.c     **** #endif
 371:src/dsp.c     **** 
 372:src/dsp.c     **** short PID_roof (short setpoint, short sample, short local_last_d, short * e_z1, short * e_z2)
 373:src/dsp.c     **** {
 1682              		.loc 1 373 0
 1683              		.cfi_startproc
 1684 0000 10B5     		push	{r4, lr}	@
 1685              	.LCFI16:
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 4, -8
 1688              		.cfi_offset 14, -4
 1689 0002 88B0     		sub	sp, sp, #32	@,,
 1690              	.LCFI17:
 1691              		.cfi_def_cfa_offset 40
 1692 0004 0400     		movs	r4, r0	@ tmp134, setpoint
 1693 0006 0800     		movs	r0, r1	@ tmp137, sample
 1694 0008 1100     		movs	r1, r2	@ tmp140, local_last_d
 1695 000a 0193     		str	r3, [sp, #4]	@ e_z1, e_z1
 1696 000c 0E23     		movs	r3, #14	@ tmp135,
 1697 000e 6B44     		add	r3, r3, sp	@ tmp135,
 1698 0010 221C     		adds	r2, r4, #0	@ tmp136, tmp134
 1699 0012 1A80     		strh	r2, [r3]	@ tmp136, setpoint
 1700 0014 03AB     		add	r3, sp, #12	@ tmp138,,
 1701 0016 021C     		adds	r2, r0, #0	@ tmp139, tmp137
 1702 0018 1A80     		strh	r2, [r3]	@ tmp139, sample
 1703 001a 0A23     		movs	r3, #10	@ tmp141,
 1704 001c 6B44     		add	r3, r3, sp	@ tmp141,
 1705 001e 0A1C     		adds	r2, r1, #0	@ tmp142, tmp140
 1706 0020 1A80     		strh	r2, [r3]	@ tmp142, local_last_d
 374:src/dsp.c     ****     short error = 0;
 1707              		.loc 1 374 0
 1708 0022 1E23     		movs	r3, #30	@ tmp143,
 1709 0024 6B44     		add	r3, r3, sp	@ tmp143,
 1710 0026 0022     		movs	r2, #0	@ tmp144,
 1711 0028 1A80     		strh	r2, [r3]	@ tmp145, error
 375:src/dsp.c     ****     short d = 0;
 1712              		.loc 1 375 0
ARM GAS  /tmp/ccGLq0Q1.s 			page 38


 1713 002a 07AB     		add	r3, sp, #28	@ tmp146,,
 1714 002c 0022     		movs	r2, #0	@ tmp147,
 1715 002e 1A80     		strh	r2, [r3]	@ tmp148, d
 376:src/dsp.c     **** 
 377:src/dsp.c     ****     short val_k1 = 0;
 1716              		.loc 1 377 0
 1717 0030 1A23     		movs	r3, #26	@ tmp149,
 1718 0032 6B44     		add	r3, r3, sp	@ tmp149,
 1719 0034 0022     		movs	r2, #0	@ tmp150,
 1720 0036 1A80     		strh	r2, [r3]	@ tmp151, val_k1
 378:src/dsp.c     ****     short val_k2 = 0;
 1721              		.loc 1 378 0
 1722 0038 06AB     		add	r3, sp, #24	@ tmp152,,
 1723 003a 0022     		movs	r2, #0	@ tmp153,
 1724 003c 1A80     		strh	r2, [r3]	@ tmp154, val_k2
 379:src/dsp.c     ****     short val_k3 = 0;
 1725              		.loc 1 379 0
 1726 003e 1623     		movs	r3, #22	@ tmp155,
 1727 0040 6B44     		add	r3, r3, sp	@ tmp155,
 1728 0042 0022     		movs	r2, #0	@ tmp156,
 1729 0044 1A80     		strh	r2, [r3]	@ tmp157, val_k3
 380:src/dsp.c     **** 
 381:src/dsp.c     ****     error = setpoint - sample;
 1730              		.loc 1 381 0
 1731 0046 0E23     		movs	r3, #14	@ tmp158,
 1732 0048 6B44     		add	r3, r3, sp	@ tmp158,
 1733 004a 1A88     		ldrh	r2, [r3]	@ D.6076, setpoint
 1734 004c 03AB     		add	r3, sp, #12	@ tmp159,,
 1735 004e 1B88     		ldrh	r3, [r3]	@ D.6076, sample
 1736 0050 D31A     		subs	r3, r2, r3	@ tmp160, D.6076, D.6076
 1737 0052 9AB2     		uxth	r2, r3	@ D.6076, tmp160
 1738 0054 1E23     		movs	r3, #30	@ tmp161,
 1739 0056 6B44     		add	r3, r3, sp	@ tmp161,
 1740 0058 1A80     		strh	r2, [r3]	@ tmp162, error
 382:src/dsp.c     **** 
 383:src/dsp.c     ****     //K1
 384:src/dsp.c     ****     acc = K1 * error;
 1741              		.loc 1 384 0
 1742 005a 1E23     		movs	r3, #30	@ tmp163,
 1743 005c 6B44     		add	r3, r3, sp	@ tmp163,
 1744 005e 0022     		movs	r2, #0	@ tmp197,
 1745 0060 9B5E     		ldrsh	r3, [r3, r2]	@ D.6077, tmp163, tmp197
 1746 0062 DA00     		lsls	r2, r3, #3	@ D.6077, D.6077,
 1747 0064 1F4B     		ldr	r3, .L60	@ tmp164,
 1748 0066 1A60     		str	r2, [r3]	@ D.6077, acc
 385:src/dsp.c     ****     val_k1 = acc >> PID_CONSTANT_DIVIDER;
 1749              		.loc 1 385 0
 1750 0068 1E4B     		ldr	r3, .L60	@ tmp165,
 1751 006a 1B68     		ldr	r3, [r3]	@ D.6077, acc
 1752 006c DA11     		asrs	r2, r3, #7	@ D.6077, D.6077,
 1753 006e 1A23     		movs	r3, #26	@ tmp166,
 1754 0070 6B44     		add	r3, r3, sp	@ tmp166,
 1755 0072 1A80     		strh	r2, [r3]	@ tmp167, val_k1
 386:src/dsp.c     **** 
 387:src/dsp.c     ****     //K2
 388:src/dsp.c     ****     acc = K2 * *e_z1;
 1756              		.loc 1 388 0
ARM GAS  /tmp/ccGLq0Q1.s 			page 39


 1757 0074 019B     		ldr	r3, [sp, #4]	@ tmp168, e_z1
 1758 0076 1B88     		ldrh	r3, [r3]	@ D.6078, *e_z1_19(D)
 1759 0078 1AB2     		sxth	r2, r3	@ D.6077, D.6078
 1760 007a 1300     		movs	r3, r2	@ tmp169, D.6077
 1761 007c 9B00     		lsls	r3, r3, #2	@ tmp169, tmp169,
 1762 007e 9A18     		adds	r2, r3, r2	@ D.6077, tmp169, D.6077
 1763 0080 184B     		ldr	r3, .L60	@ tmp170,
 1764 0082 1A60     		str	r2, [r3]	@ D.6077, acc
 389:src/dsp.c     ****     val_k2 = acc >> PID_CONSTANT_DIVIDER;    //si es mas grande que K1 + K3 no lo deja arrancar
 1765              		.loc 1 389 0
 1766 0084 174B     		ldr	r3, .L60	@ tmp171,
 1767 0086 1B68     		ldr	r3, [r3]	@ D.6077, acc
 1768 0088 DA11     		asrs	r2, r3, #7	@ D.6077, D.6077,
 1769 008a 06AB     		add	r3, sp, #24	@ tmp172,,
 1770 008c 1A80     		strh	r2, [r3]	@ tmp173, val_k2
 390:src/dsp.c     **** 
 391:src/dsp.c     ****     //K3
 392:src/dsp.c     ****     acc = K3 * *e_z2;
 1771              		.loc 1 392 0
 1772 008e 154B     		ldr	r3, .L60	@ tmp174,
 1773 0090 0022     		movs	r2, #0	@ tmp175,
 1774 0092 1A60     		str	r2, [r3]	@ tmp175, acc
 393:src/dsp.c     ****     val_k3 = acc >> PID_CONSTANT_DIVIDER;
 1775              		.loc 1 393 0
 1776 0094 134B     		ldr	r3, .L60	@ tmp176,
 1777 0096 1B68     		ldr	r3, [r3]	@ D.6077, acc
 1778 0098 DA11     		asrs	r2, r3, #7	@ D.6077, D.6077,
 1779 009a 1623     		movs	r3, #22	@ tmp177,
 1780 009c 6B44     		add	r3, r3, sp	@ tmp177,
 1781 009e 1A80     		strh	r2, [r3]	@ tmp178, val_k3
 394:src/dsp.c     **** 
 395:src/dsp.c     ****     d = local_last_d + val_k1 - val_k2 + val_k3;
 1782              		.loc 1 395 0
 1783 00a0 0A23     		movs	r3, #10	@ tmp179,
 1784 00a2 6B44     		add	r3, r3, sp	@ tmp179,
 1785 00a4 1A88     		ldrh	r2, [r3]	@ D.6076, local_last_d
 1786 00a6 1A23     		movs	r3, #26	@ tmp180,
 1787 00a8 6B44     		add	r3, r3, sp	@ tmp180,
 1788 00aa 1B88     		ldrh	r3, [r3]	@ D.6076, val_k1
 1789 00ac D318     		adds	r3, r2, r3	@ tmp181, D.6076, D.6076
 1790 00ae 9AB2     		uxth	r2, r3	@ D.6076, tmp181
 1791 00b0 06AB     		add	r3, sp, #24	@ tmp182,,
 1792 00b2 1B88     		ldrh	r3, [r3]	@ D.6076, val_k2
 1793 00b4 D31A     		subs	r3, r2, r3	@ tmp183, D.6076, D.6076
 1794 00b6 9AB2     		uxth	r2, r3	@ D.6076, tmp183
 1795 00b8 1623     		movs	r3, #22	@ tmp184,
 1796 00ba 6B44     		add	r3, r3, sp	@ tmp184,
 1797 00bc 1B88     		ldrh	r3, [r3]	@ D.6076, val_k3
 1798 00be D318     		adds	r3, r2, r3	@ tmp185, D.6076, D.6076
 1799 00c0 9AB2     		uxth	r2, r3	@ D.6076, tmp185
 1800 00c2 07AB     		add	r3, sp, #28	@ tmp186,,
 1801 00c4 1A80     		strh	r2, [r3]	@ tmp187, d
 396:src/dsp.c     **** 
 397:src/dsp.c     ****     //Update variables PID
 398:src/dsp.c     ****     *e_z2 = *e_z1;
 1802              		.loc 1 398 0
 1803 00c6 019B     		ldr	r3, [sp, #4]	@ tmp188, e_z1
ARM GAS  /tmp/ccGLq0Q1.s 			page 40


 1804 00c8 1A88     		ldrh	r2, [r3]	@ D.6078, *e_z1_19(D)
 1805 00ca 0A9B     		ldr	r3, [sp, #40]	@ tmp189, e_z2
 1806 00cc 1A80     		strh	r2, [r3]	@ tmp190, *e_z2_41(D)
 399:src/dsp.c     ****     *e_z1 = error;
 1807              		.loc 1 399 0
 1808 00ce 019B     		ldr	r3, [sp, #4]	@ tmp191, e_z1
 1809 00d0 1E22     		movs	r2, #30	@ tmp192,
 1810 00d2 6A44     		add	r2, r2, sp	@ tmp192,
 1811 00d4 1288     		ldrh	r2, [r2]	@ tmp193, error
 1812 00d6 1A80     		strh	r2, [r3]	@ tmp193, *e_z1_19(D)
 400:src/dsp.c     **** 
 401:src/dsp.c     ****     return d;
 1813              		.loc 1 401 0
 1814 00d8 07AB     		add	r3, sp, #28	@ tmp194,,
 1815 00da 1B88     		ldrh	r3, [r3]	@ D.6078, d
 1816 00dc 1BB2     		sxth	r3, r3	@ tmp196, D.6078
 402:src/dsp.c     **** }
 1817              		.loc 1 402 0
 1818 00de 1800     		movs	r0, r3	@, <retval>
 1819 00e0 08B0     		add	sp, sp, #32	@,,
 1820              		@ sp needed	@
 1821 00e2 10BD     		pop	{r4, pc}
 1822              	.L61:
 1823              		.align	2
 1824              	.L60:
 1825 00e4 00000000 		.word	acc
 1826              		.cfi_endproc
 1827              	.LFE15:
 1828              		.size	PID_roof, .-PID_roof
 1829              		.text
 1830              	.Letext0:
 1831              		.section	.debug_info,"",%progbits
 1832              	.Ldebug_info0:
 1833 0000 A0050000 		.4byte	0x5a0
 1834 0004 0200     		.2byte	0x2
 1835 0006 00000000 		.4byte	.Ldebug_abbrev0
 1836 000a 04       		.byte	0x4
 1837 000b 01       		.uleb128 0x1
 1838 000c AA010000 		.4byte	.LASF54
 1839 0010 0C       		.byte	0xc
 1840 0011 3F000000 		.4byte	.LASF55
 1841 0015 00000000 		.4byte	.LASF56
 1842 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1843 001d 00000000 		.4byte	0
 1844 0021 00000000 		.4byte	0
 1845 0025 00000000 		.4byte	.Ldebug_line0
 1846 0029 02       		.uleb128 0x2
 1847 002a 04       		.byte	0x4
 1848 002b 07       		.byte	0x7
 1849 002c 6A010000 		.4byte	.LASF0
 1850 0030 03       		.uleb128 0x3
 1851 0031 04       		.byte	0x4
 1852 0032 05       		.byte	0x5
 1853 0033 696E7400 		.ascii	"int\000"
 1854 0037 02       		.uleb128 0x2
 1855 0038 08       		.byte	0x8
 1856 0039 05       		.byte	0x5
ARM GAS  /tmp/ccGLq0Q1.s 			page 41


 1857 003a 76020000 		.4byte	.LASF1
 1858 003e 02       		.uleb128 0x2
 1859 003f 08       		.byte	0x8
 1860 0040 04       		.byte	0x4
 1861 0041 F6020000 		.4byte	.LASF2
 1862 0045 02       		.uleb128 0x2
 1863 0046 01       		.byte	0x1
 1864 0047 06       		.byte	0x6
 1865 0048 02030000 		.4byte	.LASF3
 1866 004c 02       		.uleb128 0x2
 1867 004d 01       		.byte	0x1
 1868 004e 08       		.byte	0x8
 1869 004f 91000000 		.4byte	.LASF4
 1870 0053 02       		.uleb128 0x2
 1871 0054 02       		.byte	0x2
 1872 0055 05       		.byte	0x5
 1873 0056 C8020000 		.4byte	.LASF5
 1874 005a 02       		.uleb128 0x2
 1875 005b 02       		.byte	0x2
 1876 005c 07       		.byte	0x7
 1877 005d E2000000 		.4byte	.LASF6
 1878 0061 02       		.uleb128 0x2
 1879 0062 04       		.byte	0x4
 1880 0063 05       		.byte	0x5
 1881 0064 4F000000 		.4byte	.LASF7
 1882 0068 02       		.uleb128 0x2
 1883 0069 04       		.byte	0x4
 1884 006a 07       		.byte	0x7
 1885 006b D0000000 		.4byte	.LASF8
 1886 006f 02       		.uleb128 0x2
 1887 0070 08       		.byte	0x8
 1888 0071 07       		.byte	0x7
 1889 0072 85010000 		.4byte	.LASF9
 1890 0076 02       		.uleb128 0x2
 1891 0077 04       		.byte	0x4
 1892 0078 07       		.byte	0x7
 1893 0079 55020000 		.4byte	.LASF10
 1894 007d 04       		.uleb128 0x4
 1895 007e 04       		.byte	0x4
 1896 007f 4C000000 		.4byte	0x4c
 1897 0083 02       		.uleb128 0x2
 1898 0084 01       		.byte	0x1
 1899 0085 08       		.byte	0x8
 1900 0086 F1020000 		.4byte	.LASF11
 1901 008a 02       		.uleb128 0x2
 1902 008b 08       		.byte	0x8
 1903 008c 04       		.byte	0x4
 1904 008d 58000000 		.4byte	.LASF12
 1905 0091 02       		.uleb128 0x2
 1906 0092 04       		.byte	0x4
 1907 0093 04       		.byte	0x4
 1908 0094 70000000 		.4byte	.LASF13
 1909 0098 05       		.uleb128 0x5
 1910 0099 01       		.byte	0x1
 1911 009a 60010000 		.4byte	.LASF19
 1912 009e 01       		.byte	0x1
 1913 009f 4C       		.byte	0x4c
ARM GAS  /tmp/ccGLq0Q1.s 			page 42


 1914 00a0 01       		.byte	0x1
 1915 00a1 5A000000 		.4byte	0x5a
 1916 00a5 00000000 		.4byte	.LFB0
 1917 00a9 20000000 		.4byte	.LFE0
 1918 00ad 00000000 		.4byte	.LLST0
 1919 00b1 01       		.byte	0x1
 1920 00b2 D3000000 		.4byte	0xd3
 1921 00b6 06       		.uleb128 0x6
 1922 00b7 D8020000 		.4byte	.LASF17
 1923 00bb 01       		.byte	0x1
 1924 00bc 4C       		.byte	0x4c
 1925 00bd 29000000 		.4byte	0x29
 1926 00c1 02       		.byte	0x2
 1927 00c2 91       		.byte	0x91
 1928 00c3 6C       		.sleb128 -20
 1929 00c4 07       		.uleb128 0x7
 1930 00c5 5F000000 		.4byte	.LASF14
 1931 00c9 01       		.byte	0x1
 1932 00ca 4E       		.byte	0x4e
 1933 00cb 29000000 		.4byte	0x29
 1934 00cf 02       		.byte	0x2
 1935 00d0 91       		.byte	0x91
 1936 00d1 74       		.sleb128 -12
 1937 00d2 00       		.byte	0
 1938 00d3 08       		.uleb128 0x8
 1939 00d4 01       		.byte	0x1
 1940 00d5 2A010000 		.4byte	.LASF57
 1941 00d9 01       		.byte	0x1
 1942 00da 5A       		.byte	0x5a
 1943 00db 01       		.byte	0x1
 1944 00dc 00000000 		.4byte	.LFB1
 1945 00e0 14000000 		.4byte	.LFE1
 1946 00e4 02       		.byte	0x2
 1947 00e5 7D       		.byte	0x7d
 1948 00e6 00       		.sleb128 0
 1949 00e7 01       		.byte	0x1
 1950 00e8 09       		.uleb128 0x9
 1951 00e9 01       		.byte	0x1
 1952 00ea F5000000 		.4byte	.LASF15
 1953 00ee 01       		.byte	0x1
 1954 00ef 60       		.byte	0x60
 1955 00f0 01       		.byte	0x1
 1956 00f1 00000000 		.4byte	.LFB2
 1957 00f5 44000000 		.4byte	.LFE2
 1958 00f9 2C000000 		.4byte	.LLST1
 1959 00fd 01       		.byte	0x1
 1960 00fe 0F010000 		.4byte	0x10f
 1961 0102 0A       		.uleb128 0xa
 1962 0103 6900     		.ascii	"i\000"
 1963 0105 01       		.byte	0x1
 1964 0106 62       		.byte	0x62
 1965 0107 4C000000 		.4byte	0x4c
 1966 010b 02       		.byte	0x2
 1967 010c 91       		.byte	0x91
 1968 010d 77       		.sleb128 -9
 1969 010e 00       		.byte	0
 1970 010f 0B       		.uleb128 0xb
ARM GAS  /tmp/ccGLq0Q1.s 			page 43


 1971 0110 01       		.byte	0x1
 1972 0111 5E020000 		.4byte	.LASF16
 1973 0115 01       		.byte	0x1
 1974 0116 69       		.byte	0x69
 1975 0117 01       		.byte	0x1
 1976 0118 00000000 		.4byte	.LFB3
 1977 011c 44000000 		.4byte	.LFE3
 1978 0120 58000000 		.4byte	.LLST2
 1979 0124 01       		.byte	0x1
 1980 0125 38010000 		.4byte	0x138
 1981 0129 06       		.uleb128 0x6
 1982 012a 24030000 		.4byte	.LASF18
 1983 012e 01       		.byte	0x1
 1984 012f 69       		.byte	0x69
 1985 0130 5A000000 		.4byte	0x5a
 1986 0134 02       		.byte	0x2
 1987 0135 91       		.byte	0x91
 1988 0136 7E       		.sleb128 -2
 1989 0137 00       		.byte	0
 1990 0138 0C       		.uleb128 0xc
 1991 0139 01       		.byte	0x1
 1992 013a 84020000 		.4byte	.LASF20
 1993 013e 01       		.byte	0x1
 1994 013f 74       		.byte	0x74
 1995 0140 01       		.byte	0x1
 1996 0141 5A000000 		.4byte	0x5a
 1997 0145 00000000 		.4byte	.LFB4
 1998 0149 D4000000 		.4byte	.LFE4
 1999 014d 78000000 		.4byte	.LLST3
 2000 0151 01       		.byte	0x1
 2001 0152 65010000 		.4byte	0x165
 2002 0156 07       		.uleb128 0x7
 2003 0157 2F000000 		.4byte	.LASF21
 2004 015b 01       		.byte	0x1
 2005 015c 76       		.byte	0x76
 2006 015d 29000000 		.4byte	0x29
 2007 0161 02       		.byte	0x2
 2008 0162 91       		.byte	0x91
 2009 0163 7C       		.sleb128 -4
 2010 0164 00       		.byte	0
 2011 0165 0B       		.uleb128 0xb
 2012 0166 01       		.byte	0x1
 2013 0167 B6000000 		.4byte	.LASF22
 2014 016b 01       		.byte	0x1
 2015 016c 88       		.byte	0x88
 2016 016d 01       		.byte	0x1
 2017 016e 00000000 		.4byte	.LFB5
 2018 0172 50000000 		.4byte	.LFE5
 2019 0176 98000000 		.4byte	.LLST4
 2020 017a 01       		.byte	0x1
 2021 017b 8C010000 		.4byte	0x18c
 2022 017f 0A       		.uleb128 0xa
 2023 0180 6900     		.ascii	"i\000"
 2024 0182 01       		.byte	0x1
 2025 0183 8A       		.byte	0x8a
 2026 0184 4C000000 		.4byte	0x4c
 2027 0188 02       		.byte	0x2
ARM GAS  /tmp/ccGLq0Q1.s 			page 44


 2028 0189 91       		.byte	0x91
 2029 018a 7F       		.sleb128 -1
 2030 018b 00       		.byte	0
 2031 018c 0C       		.uleb128 0xc
 2032 018d 01       		.byte	0x1
 2033 018e 85000000 		.4byte	.LASF23
 2034 0192 01       		.byte	0x1
 2035 0193 97       		.byte	0x97
 2036 0194 01       		.byte	0x1
 2037 0195 5A000000 		.4byte	0x5a
 2038 0199 00000000 		.4byte	.LFB6
 2039 019d 70000000 		.4byte	.LFE6
 2040 01a1 B8000000 		.4byte	.LLST5
 2041 01a5 01       		.byte	0x1
 2042 01a6 B9010000 		.4byte	0x1b9
 2043 01aa 06       		.uleb128 0x6
 2044 01ab 24030000 		.4byte	.LASF18
 2045 01af 01       		.byte	0x1
 2046 01b0 97       		.byte	0x97
 2047 01b1 5A000000 		.4byte	0x5a
 2048 01b5 02       		.byte	0x2
 2049 01b6 91       		.byte	0x91
 2050 01b7 7E       		.sleb128 -2
 2051 01b8 00       		.byte	0
 2052 01b9 0B       		.uleb128 0xb
 2053 01ba 01       		.byte	0x1
 2054 01bb 0E030000 		.4byte	.LASF24
 2055 01bf 01       		.byte	0x1
 2056 01c0 A5       		.byte	0xa5
 2057 01c1 01       		.byte	0x1
 2058 01c2 00000000 		.4byte	.LFB7
 2059 01c6 44000000 		.4byte	.LFE7
 2060 01ca D8000000 		.4byte	.LLST6
 2061 01ce 01       		.byte	0x1
 2062 01cf E2010000 		.4byte	0x1e2
 2063 01d3 06       		.uleb128 0x6
 2064 01d4 24030000 		.4byte	.LASF18
 2065 01d8 01       		.byte	0x1
 2066 01d9 A5       		.byte	0xa5
 2067 01da 5A000000 		.4byte	0x5a
 2068 01de 02       		.byte	0x2
 2069 01df 91       		.byte	0x91
 2070 01e0 7E       		.sleb128 -2
 2071 01e1 00       		.byte	0
 2072 01e2 0C       		.uleb128 0xc
 2073 01e3 01       		.byte	0x1
 2074 01e4 2F030000 		.4byte	.LASF25
 2075 01e8 01       		.byte	0x1
 2076 01e9 AF       		.byte	0xaf
 2077 01ea 01       		.byte	0x1
 2078 01eb 5A000000 		.4byte	0x5a
 2079 01ef 00000000 		.4byte	.LFB8
 2080 01f3 44000000 		.4byte	.LFE8
 2081 01f7 F8000000 		.4byte	.LLST7
 2082 01fb 01       		.byte	0x1
 2083 01fc 0F020000 		.4byte	0x20f
 2084 0200 07       		.uleb128 0x7
ARM GAS  /tmp/ccGLq0Q1.s 			page 45


 2085 0201 2F000000 		.4byte	.LASF21
 2086 0205 01       		.byte	0x1
 2087 0206 B1       		.byte	0xb1
 2088 0207 29000000 		.4byte	0x29
 2089 020b 02       		.byte	0x2
 2090 020c 91       		.byte	0x91
 2091 020d 7C       		.sleb128 -4
 2092 020e 00       		.byte	0
 2093 020f 0C       		.uleb128 0xc
 2094 0210 01       		.byte	0x1
 2095 0211 DD020000 		.4byte	.LASF26
 2096 0215 01       		.byte	0x1
 2097 0216 B8       		.byte	0xb8
 2098 0217 01       		.byte	0x1
 2099 0218 5A000000 		.4byte	0x5a
 2100 021c 00000000 		.4byte	.LFB9
 2101 0220 54000000 		.4byte	.LFE9
 2102 0224 18010000 		.4byte	.LLST8
 2103 0228 01       		.byte	0x1
 2104 0229 58020000 		.4byte	0x258
 2105 022d 06       		.uleb128 0x6
 2106 022e 24030000 		.4byte	.LASF18
 2107 0232 01       		.byte	0x1
 2108 0233 B8       		.byte	0xb8
 2109 0234 5A000000 		.4byte	0x5a
 2110 0238 02       		.byte	0x2
 2111 0239 91       		.byte	0x91
 2112 023a 76       		.sleb128 -10
 2113 023b 06       		.uleb128 0x6
 2114 023c C8000000 		.4byte	.LASF27
 2115 0240 01       		.byte	0x1
 2116 0241 B8       		.byte	0xb8
 2117 0242 58020000 		.4byte	0x258
 2118 0246 02       		.byte	0x2
 2119 0247 91       		.byte	0x91
 2120 0248 70       		.sleb128 -16
 2121 0249 07       		.uleb128 0x7
 2122 024a 2F000000 		.4byte	.LASF21
 2123 024e 01       		.byte	0x1
 2124 024f BA       		.byte	0xba
 2125 0250 29000000 		.4byte	0x29
 2126 0254 02       		.byte	0x2
 2127 0255 91       		.byte	0x91
 2128 0256 7C       		.sleb128 -4
 2129 0257 00       		.byte	0
 2130 0258 04       		.uleb128 0x4
 2131 0259 04       		.byte	0x4
 2132 025a 5A000000 		.4byte	0x5a
 2133 025e 0C       		.uleb128 0xc
 2134 025f 01       		.byte	0x1
 2135 0260 66000000 		.4byte	.LASF28
 2136 0264 01       		.byte	0x1
 2137 0265 C8       		.byte	0xc8
 2138 0266 01       		.byte	0x1
 2139 0267 5A000000 		.4byte	0x5a
 2140 026b 00000000 		.4byte	.LFB10
 2141 026f 96000000 		.4byte	.LFE10
ARM GAS  /tmp/ccGLq0Q1.s 			page 46


 2142 0273 38010000 		.4byte	.LLST9
 2143 0277 01       		.byte	0x1
 2144 0278 99020000 		.4byte	0x299
 2145 027c 06       		.uleb128 0x6
 2146 027d C8000000 		.4byte	.LASF27
 2147 0281 01       		.byte	0x1
 2148 0282 C8       		.byte	0xc8
 2149 0283 58020000 		.4byte	0x258
 2150 0287 02       		.byte	0x2
 2151 0288 91       		.byte	0x91
 2152 0289 74       		.sleb128 -12
 2153 028a 07       		.uleb128 0x7
 2154 028b 2F000000 		.4byte	.LASF21
 2155 028f 01       		.byte	0x1
 2156 0290 CA       		.byte	0xca
 2157 0291 29000000 		.4byte	0x29
 2158 0295 02       		.byte	0x2
 2159 0296 91       		.byte	0x91
 2160 0297 7C       		.sleb128 -4
 2161 0298 00       		.byte	0
 2162 0299 0C       		.uleb128 0xc
 2163 029a 01       		.byte	0x1
 2164 029b 96020000 		.4byte	.LASF29
 2165 029f 01       		.byte	0x1
 2166 02a0 DB       		.byte	0xdb
 2167 02a1 01       		.byte	0x1
 2168 02a2 5A000000 		.4byte	0x5a
 2169 02a6 00000000 		.4byte	.LFB11
 2170 02aa AE020000 		.4byte	.LFE11
 2171 02ae 58010000 		.4byte	.LLST10
 2172 02b2 01       		.byte	0x1
 2173 02b3 E2020000 		.4byte	0x2e2
 2174 02b7 06       		.uleb128 0x6
 2175 02b8 24030000 		.4byte	.LASF18
 2176 02bc 01       		.byte	0x1
 2177 02bd DB       		.byte	0xdb
 2178 02be 5A000000 		.4byte	0x5a
 2179 02c2 02       		.byte	0x2
 2180 02c3 91       		.byte	0x91
 2181 02c4 76       		.sleb128 -10
 2182 02c5 06       		.uleb128 0x6
 2183 02c6 C8000000 		.4byte	.LASF27
 2184 02ca 01       		.byte	0x1
 2185 02cb DB       		.byte	0xdb
 2186 02cc 58020000 		.4byte	0x258
 2187 02d0 02       		.byte	0x2
 2188 02d1 91       		.byte	0x91
 2189 02d2 70       		.sleb128 -16
 2190 02d3 07       		.uleb128 0x7
 2191 02d4 2F000000 		.4byte	.LASF21
 2192 02d8 01       		.byte	0x1
 2193 02d9 DD       		.byte	0xdd
 2194 02da 5A000000 		.4byte	0x5a
 2195 02de 02       		.byte	0x2
 2196 02df 91       		.byte	0x91
 2197 02e0 7E       		.sleb128 -2
 2198 02e1 00       		.byte	0
ARM GAS  /tmp/ccGLq0Q1.s 			page 47


 2199 02e2 0D       		.uleb128 0xd
 2200 02e3 01       		.byte	0x1
 2201 02e4 76000000 		.4byte	.LASF30
 2202 02e8 01       		.byte	0x1
 2203 02e9 0A01     		.2byte	0x10a
 2204 02eb 01       		.byte	0x1
 2205 02ec 5A000000 		.4byte	0x5a
 2206 02f0 00000000 		.4byte	.LFB12
 2207 02f4 28010000 		.4byte	.LFE12
 2208 02f8 78010000 		.4byte	.LLST11
 2209 02fc 01       		.byte	0x1
 2210 02fd 20030000 		.4byte	0x320
 2211 0301 0E       		.uleb128 0xe
 2212 0302 C8000000 		.4byte	.LASF27
 2213 0306 01       		.byte	0x1
 2214 0307 0A01     		.2byte	0x10a
 2215 0309 58020000 		.4byte	0x258
 2216 030d 02       		.byte	0x2
 2217 030e 91       		.byte	0x91
 2218 030f 74       		.sleb128 -12
 2219 0310 0F       		.uleb128 0xf
 2220 0311 2F000000 		.4byte	.LASF21
 2221 0315 01       		.byte	0x1
 2222 0316 0C01     		.2byte	0x10c
 2223 0318 29000000 		.4byte	0x29
 2224 031c 02       		.byte	0x2
 2225 031d 91       		.byte	0x91
 2226 031e 7C       		.sleb128 -4
 2227 031f 00       		.byte	0
 2228 0320 0D       		.uleb128 0xd
 2229 0321 01       		.byte	0x1
 2230 0322 AE020000 		.4byte	.LASF31
 2231 0326 01       		.byte	0x1
 2232 0327 2101     		.2byte	0x121
 2233 0329 01       		.byte	0x1
 2234 032a 5A000000 		.4byte	0x5a
 2235 032e 00000000 		.4byte	.LFB13
 2236 0332 80000000 		.4byte	.LFE13
 2237 0336 98010000 		.4byte	.LLST12
 2238 033a 01       		.byte	0x1
 2239 033b 9A030000 		.4byte	0x39a
 2240 033f 0E       		.uleb128 0xe
 2241 0340 24030000 		.4byte	.LASF18
 2242 0344 01       		.byte	0x1
 2243 0345 2101     		.2byte	0x121
 2244 0347 5A000000 		.4byte	0x5a
 2245 034b 02       		.byte	0x2
 2246 034c 91       		.byte	0x91
 2247 034d 76       		.sleb128 -10
 2248 034e 0E       		.uleb128 0xe
 2249 034f 16010000 		.4byte	.LASF32
 2250 0353 01       		.byte	0x1
 2251 0354 2101     		.2byte	0x121
 2252 0356 58020000 		.4byte	0x258
 2253 035a 02       		.byte	0x2
 2254 035b 91       		.byte	0x91
 2255 035c 70       		.sleb128 -16
ARM GAS  /tmp/ccGLq0Q1.s 			page 48


 2256 035d 0E       		.uleb128 0xe
 2257 035e A1020000 		.4byte	.LASF33
 2258 0362 01       		.byte	0x1
 2259 0363 2101     		.2byte	0x121
 2260 0365 7D000000 		.4byte	0x7d
 2261 0369 02       		.byte	0x2
 2262 036a 91       		.byte	0x91
 2263 036b 6C       		.sleb128 -20
 2264 036c 0E       		.uleb128 0xe
 2265 036d D2020000 		.4byte	.LASF34
 2266 0371 01       		.byte	0x1
 2267 0372 2101     		.2byte	0x121
 2268 0374 9A030000 		.4byte	0x39a
 2269 0378 02       		.byte	0x2
 2270 0379 91       		.byte	0x91
 2271 037a 68       		.sleb128 -24
 2272 037b 0F       		.uleb128 0xf
 2273 037c 2F000000 		.4byte	.LASF21
 2274 0380 01       		.byte	0x1
 2275 0381 2301     		.2byte	0x123
 2276 0383 29000000 		.4byte	0x29
 2277 0387 02       		.byte	0x2
 2278 0388 91       		.byte	0x91
 2279 0389 78       		.sleb128 -8
 2280 038a 0F       		.uleb128 0xf
 2281 038b AD000000 		.4byte	.LASF35
 2282 038f 01       		.byte	0x1
 2283 0390 2401     		.2byte	0x124
 2284 0392 58020000 		.4byte	0x258
 2285 0396 02       		.byte	0x2
 2286 0397 91       		.byte	0x91
 2287 0398 7C       		.sleb128 -4
 2288 0399 00       		.byte	0
 2289 039a 04       		.uleb128 0x4
 2290 039b 04       		.byte	0x4
 2291 039c 29000000 		.4byte	0x29
 2292 03a0 10       		.uleb128 0x10
 2293 03a1 01       		.byte	0x1
 2294 03a2 50494400 		.ascii	"PID\000"
 2295 03a6 01       		.byte	0x1
 2296 03a7 4001     		.2byte	0x140
 2297 03a9 01       		.byte	0x1
 2298 03aa 53000000 		.4byte	0x53
 2299 03ae 00000000 		.4byte	.LFB14
 2300 03b2 EC000000 		.4byte	.LFE14
 2301 03b6 B8010000 		.4byte	.LLST13
 2302 03ba 01       		.byte	0x1
 2303 03bb 27040000 		.4byte	0x427
 2304 03bf 0E       		.uleb128 0xe
 2305 03c0 77010000 		.4byte	.LASF36
 2306 03c4 01       		.byte	0x1
 2307 03c5 4001     		.2byte	0x140
 2308 03c7 53000000 		.4byte	0x53
 2309 03cb 02       		.byte	0x2
 2310 03cc 91       		.byte	0x91
 2311 03cd 6E       		.sleb128 -18
 2312 03ce 0E       		.uleb128 0xe
ARM GAS  /tmp/ccGLq0Q1.s 			page 49


 2313 03cf EA020000 		.4byte	.LASF37
 2314 03d3 01       		.byte	0x1
 2315 03d4 4001     		.2byte	0x140
 2316 03d6 53000000 		.4byte	0x53
 2317 03da 02       		.byte	0x2
 2318 03db 91       		.byte	0x91
 2319 03dc 6C       		.sleb128 -20
 2320 03dd 0F       		.uleb128 0xf
 2321 03de 70020000 		.4byte	.LASF38
 2322 03e2 01       		.byte	0x1
 2323 03e3 4201     		.2byte	0x142
 2324 03e5 53000000 		.4byte	0x53
 2325 03e9 02       		.byte	0x2
 2326 03ea 91       		.byte	0x91
 2327 03eb 7E       		.sleb128 -2
 2328 03ec 11       		.uleb128 0x11
 2329 03ed 6400     		.ascii	"d\000"
 2330 03ef 01       		.byte	0x1
 2331 03f0 4301     		.2byte	0x143
 2332 03f2 53000000 		.4byte	0x53
 2333 03f6 02       		.byte	0x2
 2334 03f7 91       		.byte	0x91
 2335 03f8 7C       		.sleb128 -4
 2336 03f9 0F       		.uleb128 0xf
 2337 03fa A7020000 		.4byte	.LASF39
 2338 03fe 01       		.byte	0x1
 2339 03ff 4501     		.2byte	0x145
 2340 0401 53000000 		.4byte	0x53
 2341 0405 02       		.byte	0x2
 2342 0406 91       		.byte	0x91
 2343 0407 7A       		.sleb128 -6
 2344 0408 0F       		.uleb128 0xf
 2345 0409 4F010000 		.4byte	.LASF40
 2346 040d 01       		.byte	0x1
 2347 040e 4601     		.2byte	0x146
 2348 0410 53000000 		.4byte	0x53
 2349 0414 02       		.byte	0x2
 2350 0415 91       		.byte	0x91
 2351 0416 78       		.sleb128 -8
 2352 0417 0F       		.uleb128 0xf
 2353 0418 C1020000 		.4byte	.LASF41
 2354 041c 01       		.byte	0x1
 2355 041d 4701     		.2byte	0x147
 2356 041f 53000000 		.4byte	0x53
 2357 0423 02       		.byte	0x2
 2358 0424 91       		.byte	0x91
 2359 0425 76       		.sleb128 -10
 2360 0426 00       		.byte	0
 2361 0427 0D       		.uleb128 0xd
 2362 0428 01       		.byte	0x1
 2363 0429 A1010000 		.4byte	.LASF42
 2364 042d 01       		.byte	0x1
 2365 042e 7401     		.2byte	0x174
 2366 0430 01       		.byte	0x1
 2367 0431 53000000 		.4byte	0x53
 2368 0435 00000000 		.4byte	.LFB15
 2369 0439 E8000000 		.4byte	.LFE15
ARM GAS  /tmp/ccGLq0Q1.s 			page 50


 2370 043d D8010000 		.4byte	.LLST14
 2371 0441 01       		.byte	0x1
 2372 0442 DB040000 		.4byte	0x4db
 2373 0446 0E       		.uleb128 0xe
 2374 0447 77010000 		.4byte	.LASF36
 2375 044b 01       		.byte	0x1
 2376 044c 7401     		.2byte	0x174
 2377 044e 53000000 		.4byte	0x53
 2378 0452 02       		.byte	0x2
 2379 0453 91       		.byte	0x91
 2380 0454 66       		.sleb128 -26
 2381 0455 0E       		.uleb128 0xe
 2382 0456 EA020000 		.4byte	.LASF37
 2383 045a 01       		.byte	0x1
 2384 045b 7401     		.2byte	0x174
 2385 045d 53000000 		.4byte	0x53
 2386 0461 02       		.byte	0x2
 2387 0462 91       		.byte	0x91
 2388 0463 64       		.sleb128 -28
 2389 0464 0E       		.uleb128 0xe
 2390 0465 45030000 		.4byte	.LASF43
 2391 0469 01       		.byte	0x1
 2392 046a 7401     		.2byte	0x174
 2393 046c 53000000 		.4byte	0x53
 2394 0470 02       		.byte	0x2
 2395 0471 91       		.byte	0x91
 2396 0472 62       		.sleb128 -30
 2397 0473 0E       		.uleb128 0xe
 2398 0474 9C010000 		.4byte	.LASF44
 2399 0478 01       		.byte	0x1
 2400 0479 7401     		.2byte	0x174
 2401 047b DB040000 		.4byte	0x4db
 2402 047f 02       		.byte	0x2
 2403 0480 91       		.byte	0x91
 2404 0481 5C       		.sleb128 -36
 2405 0482 0E       		.uleb128 0xe
 2406 0483 80010000 		.4byte	.LASF45
 2407 0487 01       		.byte	0x1
 2408 0488 7401     		.2byte	0x174
 2409 048a DB040000 		.4byte	0x4db
 2410 048e 02       		.byte	0x2
 2411 048f 91       		.byte	0x91
 2412 0490 00       		.sleb128 0
 2413 0491 0F       		.uleb128 0xf
 2414 0492 70020000 		.4byte	.LASF38
 2415 0496 01       		.byte	0x1
 2416 0497 7601     		.2byte	0x176
 2417 0499 53000000 		.4byte	0x53
 2418 049d 02       		.byte	0x2
 2419 049e 91       		.byte	0x91
 2420 049f 76       		.sleb128 -10
 2421 04a0 11       		.uleb128 0x11
 2422 04a1 6400     		.ascii	"d\000"
 2423 04a3 01       		.byte	0x1
 2424 04a4 7701     		.2byte	0x177
 2425 04a6 53000000 		.4byte	0x53
 2426 04aa 02       		.byte	0x2
ARM GAS  /tmp/ccGLq0Q1.s 			page 51


 2427 04ab 91       		.byte	0x91
 2428 04ac 74       		.sleb128 -12
 2429 04ad 0F       		.uleb128 0xf
 2430 04ae A7020000 		.4byte	.LASF39
 2431 04b2 01       		.byte	0x1
 2432 04b3 7901     		.2byte	0x179
 2433 04b5 53000000 		.4byte	0x53
 2434 04b9 02       		.byte	0x2
 2435 04ba 91       		.byte	0x91
 2436 04bb 72       		.sleb128 -14
 2437 04bc 0F       		.uleb128 0xf
 2438 04bd 4F010000 		.4byte	.LASF40
 2439 04c1 01       		.byte	0x1
 2440 04c2 7A01     		.2byte	0x17a
 2441 04c4 53000000 		.4byte	0x53
 2442 04c8 02       		.byte	0x2
 2443 04c9 91       		.byte	0x91
 2444 04ca 70       		.sleb128 -16
 2445 04cb 0F       		.uleb128 0xf
 2446 04cc C1020000 		.4byte	.LASF41
 2447 04d0 01       		.byte	0x1
 2448 04d1 7B01     		.2byte	0x17b
 2449 04d3 53000000 		.4byte	0x53
 2450 04d7 02       		.byte	0x2
 2451 04d8 91       		.byte	0x91
 2452 04d9 6E       		.sleb128 -18
 2453 04da 00       		.byte	0
 2454 04db 04       		.uleb128 0x4
 2455 04dc 04       		.byte	0x4
 2456 04dd 53000000 		.4byte	0x53
 2457 04e1 12       		.uleb128 0x12
 2458 04e2 61636300 		.ascii	"acc\000"
 2459 04e6 01       		.byte	0x1
 2460 04e7 1A       		.byte	0x1a
 2461 04e8 30000000 		.4byte	0x30
 2462 04ec 01       		.byte	0x1
 2463 04ed 05       		.byte	0x5
 2464 04ee 03       		.byte	0x3
 2465 04ef 00000000 		.4byte	acc
 2466 04f3 13       		.uleb128 0x13
 2467 04f4 3D010000 		.4byte	.LASF46
 2468 04f8 01       		.byte	0x1
 2469 04f9 1B       		.byte	0x1b
 2470 04fa 53000000 		.4byte	0x53
 2471 04fe 01       		.byte	0x1
 2472 04ff 05       		.byte	0x5
 2473 0500 03       		.byte	0x3
 2474 0501 00000000 		.4byte	error_z1
 2475 0505 13       		.uleb128 0x13
 2476 0506 46010000 		.4byte	.LASF47
 2477 050a 01       		.byte	0x1
 2478 050b 1C       		.byte	0x1c
 2479 050c 53000000 		.4byte	0x53
 2480 0510 01       		.byte	0x1
 2481 0511 05       		.byte	0x5
 2482 0512 03       		.byte	0x3
 2483 0513 00000000 		.4byte	error_z2
ARM GAS  /tmp/ccGLq0Q1.s 			page 52


 2484 0517 13       		.uleb128 0x13
 2485 0518 38000000 		.4byte	.LASF48
 2486 051c 01       		.byte	0x1
 2487 051d 1D       		.byte	0x1d
 2488 051e 53000000 		.4byte	0x53
 2489 0522 01       		.byte	0x1
 2490 0523 05       		.byte	0x5
 2491 0524 03       		.byte	0x3
 2492 0525 00000000 		.4byte	d_last
 2493 0529 14       		.uleb128 0x14
 2494 052a 5A000000 		.4byte	0x5a
 2495 052e 39050000 		.4byte	0x539
 2496 0532 15       		.uleb128 0x15
 2497 0533 76000000 		.4byte	0x76
 2498 0537 07       		.byte	0x7
 2499 0538 00       		.byte	0
 2500 0539 13       		.uleb128 0x13
 2501 053a 49000000 		.4byte	.LASF49
 2502 053e 01       		.byte	0x1
 2503 053f 21       		.byte	0x21
 2504 0540 29050000 		.4byte	0x529
 2505 0544 01       		.byte	0x1
 2506 0545 05       		.byte	0x5
 2507 0546 03       		.byte	0x3
 2508 0547 00000000 		.4byte	v_ma8
 2509 054b 13       		.uleb128 0x13
 2510 054c 24010000 		.4byte	.LASF50
 2511 0550 01       		.byte	0x1
 2512 0551 22       		.byte	0x22
 2513 0552 58020000 		.4byte	0x258
 2514 0556 01       		.byte	0x1
 2515 0557 05       		.byte	0x5
 2516 0558 03       		.byte	0x3
 2517 0559 00000000 		.4byte	p_ma8
 2518 055d 13       		.uleb128 0x13
 2519 055e 56010000 		.4byte	.LASF51
 2520 0562 01       		.byte	0x1
 2521 0563 23       		.byte	0x23
 2522 0564 29000000 		.4byte	0x29
 2523 0568 01       		.byte	0x1
 2524 0569 05       		.byte	0x5
 2525 056a 03       		.byte	0x3
 2526 056b 00000000 		.4byte	total_ma8
 2527 056f 14       		.uleb128 0x14
 2528 0570 5A000000 		.4byte	0x5a
 2529 0574 7F050000 		.4byte	0x57f
 2530 0578 15       		.uleb128 0x15
 2531 0579 76000000 		.4byte	0x76
 2532 057d 1F       		.byte	0x1f
 2533 057e 00       		.byte	0
 2534 057f 13       		.uleb128 0x13
 2535 0580 9F000000 		.4byte	.LASF52
 2536 0584 01       		.byte	0x1
 2537 0585 26       		.byte	0x26
 2538 0586 6F050000 		.4byte	0x56f
 2539 058a 01       		.byte	0x1
 2540 058b 05       		.byte	0x5
ARM GAS  /tmp/ccGLq0Q1.s 			page 53


 2541 058c 03       		.byte	0x3
 2542 058d 00000000 		.4byte	v_ma_circular
 2543 0591 13       		.uleb128 0x13
 2544 0592 08010000 		.4byte	.LASF53
 2545 0596 01       		.byte	0x1
 2546 0597 27       		.byte	0x27
 2547 0598 58020000 		.4byte	0x258
 2548 059c 01       		.byte	0x1
 2549 059d 05       		.byte	0x5
 2550 059e 03       		.byte	0x3
 2551 059f 00000000 		.4byte	p_ma_circular
 2552 05a3 00       		.byte	0
 2553              		.section	.debug_abbrev,"",%progbits
 2554              	.Ldebug_abbrev0:
 2555 0000 01       		.uleb128 0x1
 2556 0001 11       		.uleb128 0x11
 2557 0002 01       		.byte	0x1
 2558 0003 25       		.uleb128 0x25
 2559 0004 0E       		.uleb128 0xe
 2560 0005 13       		.uleb128 0x13
 2561 0006 0B       		.uleb128 0xb
 2562 0007 03       		.uleb128 0x3
 2563 0008 0E       		.uleb128 0xe
 2564 0009 1B       		.uleb128 0x1b
 2565 000a 0E       		.uleb128 0xe
 2566 000b 55       		.uleb128 0x55
 2567 000c 06       		.uleb128 0x6
 2568 000d 11       		.uleb128 0x11
 2569 000e 01       		.uleb128 0x1
 2570 000f 52       		.uleb128 0x52
 2571 0010 01       		.uleb128 0x1
 2572 0011 10       		.uleb128 0x10
 2573 0012 06       		.uleb128 0x6
 2574 0013 00       		.byte	0
 2575 0014 00       		.byte	0
 2576 0015 02       		.uleb128 0x2
 2577 0016 24       		.uleb128 0x24
 2578 0017 00       		.byte	0
 2579 0018 0B       		.uleb128 0xb
 2580 0019 0B       		.uleb128 0xb
 2581 001a 3E       		.uleb128 0x3e
 2582 001b 0B       		.uleb128 0xb
 2583 001c 03       		.uleb128 0x3
 2584 001d 0E       		.uleb128 0xe
 2585 001e 00       		.byte	0
 2586 001f 00       		.byte	0
 2587 0020 03       		.uleb128 0x3
 2588 0021 24       		.uleb128 0x24
 2589 0022 00       		.byte	0
 2590 0023 0B       		.uleb128 0xb
 2591 0024 0B       		.uleb128 0xb
 2592 0025 3E       		.uleb128 0x3e
 2593 0026 0B       		.uleb128 0xb
 2594 0027 03       		.uleb128 0x3
 2595 0028 08       		.uleb128 0x8
 2596 0029 00       		.byte	0
 2597 002a 00       		.byte	0
ARM GAS  /tmp/ccGLq0Q1.s 			page 54


 2598 002b 04       		.uleb128 0x4
 2599 002c 0F       		.uleb128 0xf
 2600 002d 00       		.byte	0
 2601 002e 0B       		.uleb128 0xb
 2602 002f 0B       		.uleb128 0xb
 2603 0030 49       		.uleb128 0x49
 2604 0031 13       		.uleb128 0x13
 2605 0032 00       		.byte	0
 2606 0033 00       		.byte	0
 2607 0034 05       		.uleb128 0x5
 2608 0035 2E       		.uleb128 0x2e
 2609 0036 01       		.byte	0x1
 2610 0037 3F       		.uleb128 0x3f
 2611 0038 0C       		.uleb128 0xc
 2612 0039 03       		.uleb128 0x3
 2613 003a 0E       		.uleb128 0xe
 2614 003b 3A       		.uleb128 0x3a
 2615 003c 0B       		.uleb128 0xb
 2616 003d 3B       		.uleb128 0x3b
 2617 003e 0B       		.uleb128 0xb
 2618 003f 27       		.uleb128 0x27
 2619 0040 0C       		.uleb128 0xc
 2620 0041 49       		.uleb128 0x49
 2621 0042 13       		.uleb128 0x13
 2622 0043 11       		.uleb128 0x11
 2623 0044 01       		.uleb128 0x1
 2624 0045 12       		.uleb128 0x12
 2625 0046 01       		.uleb128 0x1
 2626 0047 40       		.uleb128 0x40
 2627 0048 06       		.uleb128 0x6
 2628 0049 9642     		.uleb128 0x2116
 2629 004b 0C       		.uleb128 0xc
 2630 004c 01       		.uleb128 0x1
 2631 004d 13       		.uleb128 0x13
 2632 004e 00       		.byte	0
 2633 004f 00       		.byte	0
 2634 0050 06       		.uleb128 0x6
 2635 0051 05       		.uleb128 0x5
 2636 0052 00       		.byte	0
 2637 0053 03       		.uleb128 0x3
 2638 0054 0E       		.uleb128 0xe
 2639 0055 3A       		.uleb128 0x3a
 2640 0056 0B       		.uleb128 0xb
 2641 0057 3B       		.uleb128 0x3b
 2642 0058 0B       		.uleb128 0xb
 2643 0059 49       		.uleb128 0x49
 2644 005a 13       		.uleb128 0x13
 2645 005b 02       		.uleb128 0x2
 2646 005c 0A       		.uleb128 0xa
 2647 005d 00       		.byte	0
 2648 005e 00       		.byte	0
 2649 005f 07       		.uleb128 0x7
 2650 0060 34       		.uleb128 0x34
 2651 0061 00       		.byte	0
 2652 0062 03       		.uleb128 0x3
 2653 0063 0E       		.uleb128 0xe
 2654 0064 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccGLq0Q1.s 			page 55


 2655 0065 0B       		.uleb128 0xb
 2656 0066 3B       		.uleb128 0x3b
 2657 0067 0B       		.uleb128 0xb
 2658 0068 49       		.uleb128 0x49
 2659 0069 13       		.uleb128 0x13
 2660 006a 02       		.uleb128 0x2
 2661 006b 0A       		.uleb128 0xa
 2662 006c 00       		.byte	0
 2663 006d 00       		.byte	0
 2664 006e 08       		.uleb128 0x8
 2665 006f 2E       		.uleb128 0x2e
 2666 0070 00       		.byte	0
 2667 0071 3F       		.uleb128 0x3f
 2668 0072 0C       		.uleb128 0xc
 2669 0073 03       		.uleb128 0x3
 2670 0074 0E       		.uleb128 0xe
 2671 0075 3A       		.uleb128 0x3a
 2672 0076 0B       		.uleb128 0xb
 2673 0077 3B       		.uleb128 0x3b
 2674 0078 0B       		.uleb128 0xb
 2675 0079 27       		.uleb128 0x27
 2676 007a 0C       		.uleb128 0xc
 2677 007b 11       		.uleb128 0x11
 2678 007c 01       		.uleb128 0x1
 2679 007d 12       		.uleb128 0x12
 2680 007e 01       		.uleb128 0x1
 2681 007f 40       		.uleb128 0x40
 2682 0080 0A       		.uleb128 0xa
 2683 0081 9742     		.uleb128 0x2117
 2684 0083 0C       		.uleb128 0xc
 2685 0084 00       		.byte	0
 2686 0085 00       		.byte	0
 2687 0086 09       		.uleb128 0x9
 2688 0087 2E       		.uleb128 0x2e
 2689 0088 01       		.byte	0x1
 2690 0089 3F       		.uleb128 0x3f
 2691 008a 0C       		.uleb128 0xc
 2692 008b 03       		.uleb128 0x3
 2693 008c 0E       		.uleb128 0xe
 2694 008d 3A       		.uleb128 0x3a
 2695 008e 0B       		.uleb128 0xb
 2696 008f 3B       		.uleb128 0x3b
 2697 0090 0B       		.uleb128 0xb
 2698 0091 27       		.uleb128 0x27
 2699 0092 0C       		.uleb128 0xc
 2700 0093 11       		.uleb128 0x11
 2701 0094 01       		.uleb128 0x1
 2702 0095 12       		.uleb128 0x12
 2703 0096 01       		.uleb128 0x1
 2704 0097 40       		.uleb128 0x40
 2705 0098 06       		.uleb128 0x6
 2706 0099 9642     		.uleb128 0x2116
 2707 009b 0C       		.uleb128 0xc
 2708 009c 01       		.uleb128 0x1
 2709 009d 13       		.uleb128 0x13
 2710 009e 00       		.byte	0
 2711 009f 00       		.byte	0
ARM GAS  /tmp/ccGLq0Q1.s 			page 56


 2712 00a0 0A       		.uleb128 0xa
 2713 00a1 34       		.uleb128 0x34
 2714 00a2 00       		.byte	0
 2715 00a3 03       		.uleb128 0x3
 2716 00a4 08       		.uleb128 0x8
 2717 00a5 3A       		.uleb128 0x3a
 2718 00a6 0B       		.uleb128 0xb
 2719 00a7 3B       		.uleb128 0x3b
 2720 00a8 0B       		.uleb128 0xb
 2721 00a9 49       		.uleb128 0x49
 2722 00aa 13       		.uleb128 0x13
 2723 00ab 02       		.uleb128 0x2
 2724 00ac 0A       		.uleb128 0xa
 2725 00ad 00       		.byte	0
 2726 00ae 00       		.byte	0
 2727 00af 0B       		.uleb128 0xb
 2728 00b0 2E       		.uleb128 0x2e
 2729 00b1 01       		.byte	0x1
 2730 00b2 3F       		.uleb128 0x3f
 2731 00b3 0C       		.uleb128 0xc
 2732 00b4 03       		.uleb128 0x3
 2733 00b5 0E       		.uleb128 0xe
 2734 00b6 3A       		.uleb128 0x3a
 2735 00b7 0B       		.uleb128 0xb
 2736 00b8 3B       		.uleb128 0x3b
 2737 00b9 0B       		.uleb128 0xb
 2738 00ba 27       		.uleb128 0x27
 2739 00bb 0C       		.uleb128 0xc
 2740 00bc 11       		.uleb128 0x11
 2741 00bd 01       		.uleb128 0x1
 2742 00be 12       		.uleb128 0x12
 2743 00bf 01       		.uleb128 0x1
 2744 00c0 40       		.uleb128 0x40
 2745 00c1 06       		.uleb128 0x6
 2746 00c2 9742     		.uleb128 0x2117
 2747 00c4 0C       		.uleb128 0xc
 2748 00c5 01       		.uleb128 0x1
 2749 00c6 13       		.uleb128 0x13
 2750 00c7 00       		.byte	0
 2751 00c8 00       		.byte	0
 2752 00c9 0C       		.uleb128 0xc
 2753 00ca 2E       		.uleb128 0x2e
 2754 00cb 01       		.byte	0x1
 2755 00cc 3F       		.uleb128 0x3f
 2756 00cd 0C       		.uleb128 0xc
 2757 00ce 03       		.uleb128 0x3
 2758 00cf 0E       		.uleb128 0xe
 2759 00d0 3A       		.uleb128 0x3a
 2760 00d1 0B       		.uleb128 0xb
 2761 00d2 3B       		.uleb128 0x3b
 2762 00d3 0B       		.uleb128 0xb
 2763 00d4 27       		.uleb128 0x27
 2764 00d5 0C       		.uleb128 0xc
 2765 00d6 49       		.uleb128 0x49
 2766 00d7 13       		.uleb128 0x13
 2767 00d8 11       		.uleb128 0x11
 2768 00d9 01       		.uleb128 0x1
ARM GAS  /tmp/ccGLq0Q1.s 			page 57


 2769 00da 12       		.uleb128 0x12
 2770 00db 01       		.uleb128 0x1
 2771 00dc 40       		.uleb128 0x40
 2772 00dd 06       		.uleb128 0x6
 2773 00de 9742     		.uleb128 0x2117
 2774 00e0 0C       		.uleb128 0xc
 2775 00e1 01       		.uleb128 0x1
 2776 00e2 13       		.uleb128 0x13
 2777 00e3 00       		.byte	0
 2778 00e4 00       		.byte	0
 2779 00e5 0D       		.uleb128 0xd
 2780 00e6 2E       		.uleb128 0x2e
 2781 00e7 01       		.byte	0x1
 2782 00e8 3F       		.uleb128 0x3f
 2783 00e9 0C       		.uleb128 0xc
 2784 00ea 03       		.uleb128 0x3
 2785 00eb 0E       		.uleb128 0xe
 2786 00ec 3A       		.uleb128 0x3a
 2787 00ed 0B       		.uleb128 0xb
 2788 00ee 3B       		.uleb128 0x3b
 2789 00ef 05       		.uleb128 0x5
 2790 00f0 27       		.uleb128 0x27
 2791 00f1 0C       		.uleb128 0xc
 2792 00f2 49       		.uleb128 0x49
 2793 00f3 13       		.uleb128 0x13
 2794 00f4 11       		.uleb128 0x11
 2795 00f5 01       		.uleb128 0x1
 2796 00f6 12       		.uleb128 0x12
 2797 00f7 01       		.uleb128 0x1
 2798 00f8 40       		.uleb128 0x40
 2799 00f9 06       		.uleb128 0x6
 2800 00fa 9742     		.uleb128 0x2117
 2801 00fc 0C       		.uleb128 0xc
 2802 00fd 01       		.uleb128 0x1
 2803 00fe 13       		.uleb128 0x13
 2804 00ff 00       		.byte	0
 2805 0100 00       		.byte	0
 2806 0101 0E       		.uleb128 0xe
 2807 0102 05       		.uleb128 0x5
 2808 0103 00       		.byte	0
 2809 0104 03       		.uleb128 0x3
 2810 0105 0E       		.uleb128 0xe
 2811 0106 3A       		.uleb128 0x3a
 2812 0107 0B       		.uleb128 0xb
 2813 0108 3B       		.uleb128 0x3b
 2814 0109 05       		.uleb128 0x5
 2815 010a 49       		.uleb128 0x49
 2816 010b 13       		.uleb128 0x13
 2817 010c 02       		.uleb128 0x2
 2818 010d 0A       		.uleb128 0xa
 2819 010e 00       		.byte	0
 2820 010f 00       		.byte	0
 2821 0110 0F       		.uleb128 0xf
 2822 0111 34       		.uleb128 0x34
 2823 0112 00       		.byte	0
 2824 0113 03       		.uleb128 0x3
 2825 0114 0E       		.uleb128 0xe
ARM GAS  /tmp/ccGLq0Q1.s 			page 58


 2826 0115 3A       		.uleb128 0x3a
 2827 0116 0B       		.uleb128 0xb
 2828 0117 3B       		.uleb128 0x3b
 2829 0118 05       		.uleb128 0x5
 2830 0119 49       		.uleb128 0x49
 2831 011a 13       		.uleb128 0x13
 2832 011b 02       		.uleb128 0x2
 2833 011c 0A       		.uleb128 0xa
 2834 011d 00       		.byte	0
 2835 011e 00       		.byte	0
 2836 011f 10       		.uleb128 0x10
 2837 0120 2E       		.uleb128 0x2e
 2838 0121 01       		.byte	0x1
 2839 0122 3F       		.uleb128 0x3f
 2840 0123 0C       		.uleb128 0xc
 2841 0124 03       		.uleb128 0x3
 2842 0125 08       		.uleb128 0x8
 2843 0126 3A       		.uleb128 0x3a
 2844 0127 0B       		.uleb128 0xb
 2845 0128 3B       		.uleb128 0x3b
 2846 0129 05       		.uleb128 0x5
 2847 012a 27       		.uleb128 0x27
 2848 012b 0C       		.uleb128 0xc
 2849 012c 49       		.uleb128 0x49
 2850 012d 13       		.uleb128 0x13
 2851 012e 11       		.uleb128 0x11
 2852 012f 01       		.uleb128 0x1
 2853 0130 12       		.uleb128 0x12
 2854 0131 01       		.uleb128 0x1
 2855 0132 40       		.uleb128 0x40
 2856 0133 06       		.uleb128 0x6
 2857 0134 9742     		.uleb128 0x2117
 2858 0136 0C       		.uleb128 0xc
 2859 0137 01       		.uleb128 0x1
 2860 0138 13       		.uleb128 0x13
 2861 0139 00       		.byte	0
 2862 013a 00       		.byte	0
 2863 013b 11       		.uleb128 0x11
 2864 013c 34       		.uleb128 0x34
 2865 013d 00       		.byte	0
 2866 013e 03       		.uleb128 0x3
 2867 013f 08       		.uleb128 0x8
 2868 0140 3A       		.uleb128 0x3a
 2869 0141 0B       		.uleb128 0xb
 2870 0142 3B       		.uleb128 0x3b
 2871 0143 05       		.uleb128 0x5
 2872 0144 49       		.uleb128 0x49
 2873 0145 13       		.uleb128 0x13
 2874 0146 02       		.uleb128 0x2
 2875 0147 0A       		.uleb128 0xa
 2876 0148 00       		.byte	0
 2877 0149 00       		.byte	0
 2878 014a 12       		.uleb128 0x12
 2879 014b 34       		.uleb128 0x34
 2880 014c 00       		.byte	0
 2881 014d 03       		.uleb128 0x3
 2882 014e 08       		.uleb128 0x8
ARM GAS  /tmp/ccGLq0Q1.s 			page 59


 2883 014f 3A       		.uleb128 0x3a
 2884 0150 0B       		.uleb128 0xb
 2885 0151 3B       		.uleb128 0x3b
 2886 0152 0B       		.uleb128 0xb
 2887 0153 49       		.uleb128 0x49
 2888 0154 13       		.uleb128 0x13
 2889 0155 3F       		.uleb128 0x3f
 2890 0156 0C       		.uleb128 0xc
 2891 0157 02       		.uleb128 0x2
 2892 0158 0A       		.uleb128 0xa
 2893 0159 00       		.byte	0
 2894 015a 00       		.byte	0
 2895 015b 13       		.uleb128 0x13
 2896 015c 34       		.uleb128 0x34
 2897 015d 00       		.byte	0
 2898 015e 03       		.uleb128 0x3
 2899 015f 0E       		.uleb128 0xe
 2900 0160 3A       		.uleb128 0x3a
 2901 0161 0B       		.uleb128 0xb
 2902 0162 3B       		.uleb128 0x3b
 2903 0163 0B       		.uleb128 0xb
 2904 0164 49       		.uleb128 0x49
 2905 0165 13       		.uleb128 0x13
 2906 0166 3F       		.uleb128 0x3f
 2907 0167 0C       		.uleb128 0xc
 2908 0168 02       		.uleb128 0x2
 2909 0169 0A       		.uleb128 0xa
 2910 016a 00       		.byte	0
 2911 016b 00       		.byte	0
 2912 016c 14       		.uleb128 0x14
 2913 016d 01       		.uleb128 0x1
 2914 016e 01       		.byte	0x1
 2915 016f 49       		.uleb128 0x49
 2916 0170 13       		.uleb128 0x13
 2917 0171 01       		.uleb128 0x1
 2918 0172 13       		.uleb128 0x13
 2919 0173 00       		.byte	0
 2920 0174 00       		.byte	0
 2921 0175 15       		.uleb128 0x15
 2922 0176 21       		.uleb128 0x21
 2923 0177 00       		.byte	0
 2924 0178 49       		.uleb128 0x49
 2925 0179 13       		.uleb128 0x13
 2926 017a 2F       		.uleb128 0x2f
 2927 017b 0B       		.uleb128 0xb
 2928 017c 00       		.byte	0
 2929 017d 00       		.byte	0
 2930 017e 00       		.byte	0
 2931              		.section	.debug_loc,"",%progbits
 2932              	.Ldebug_loc0:
 2933              	.LLST0:
 2934 0000 00000000 		.4byte	.LFB0
 2935 0004 02000000 		.4byte	.LCFI0
 2936 0008 0200     		.2byte	0x2
 2937 000a 7D       		.byte	0x7d
 2938 000b 00       		.sleb128 0
 2939 000c 02000000 		.4byte	.LCFI0
ARM GAS  /tmp/ccGLq0Q1.s 			page 60


 2940 0010 04000000 		.4byte	.LCFI1
 2941 0014 0200     		.2byte	0x2
 2942 0016 7D       		.byte	0x7d
 2943 0017 04       		.sleb128 4
 2944 0018 04000000 		.4byte	.LCFI1
 2945 001c 20000000 		.4byte	.LFE0
 2946 0020 0200     		.2byte	0x2
 2947 0022 7D       		.byte	0x7d
 2948 0023 18       		.sleb128 24
 2949 0024 00000000 		.4byte	0
 2950 0028 00000000 		.4byte	0
 2951              	.LLST1:
 2952 002c 00000000 		.4byte	.LFB2
 2953 0030 02000000 		.4byte	.LCFI2
 2954 0034 0200     		.2byte	0x2
 2955 0036 7D       		.byte	0x7d
 2956 0037 00       		.sleb128 0
 2957 0038 02000000 		.4byte	.LCFI2
 2958 003c 04000000 		.4byte	.LCFI3
 2959 0040 0200     		.2byte	0x2
 2960 0042 7D       		.byte	0x7d
 2961 0043 04       		.sleb128 4
 2962 0044 04000000 		.4byte	.LCFI3
 2963 0048 44000000 		.4byte	.LFE2
 2964 004c 0200     		.2byte	0x2
 2965 004e 7D       		.byte	0x7d
 2966 004f 10       		.sleb128 16
 2967 0050 00000000 		.4byte	0
 2968 0054 00000000 		.4byte	0
 2969              	.LLST2:
 2970 0058 00000000 		.4byte	.LFB3
 2971 005c 02000000 		.4byte	.LCFI4
 2972 0060 0200     		.2byte	0x2
 2973 0062 7D       		.byte	0x7d
 2974 0063 00       		.sleb128 0
 2975 0064 02000000 		.4byte	.LCFI4
 2976 0068 44000000 		.4byte	.LFE3
 2977 006c 0200     		.2byte	0x2
 2978 006e 7D       		.byte	0x7d
 2979 006f 08       		.sleb128 8
 2980 0070 00000000 		.4byte	0
 2981 0074 00000000 		.4byte	0
 2982              	.LLST3:
 2983 0078 00000000 		.4byte	.LFB4
 2984 007c 02000000 		.4byte	.LCFI5
 2985 0080 0200     		.2byte	0x2
 2986 0082 7D       		.byte	0x7d
 2987 0083 00       		.sleb128 0
 2988 0084 02000000 		.4byte	.LCFI5
 2989 0088 D4000000 		.4byte	.LFE4
 2990 008c 0200     		.2byte	0x2
 2991 008e 7D       		.byte	0x7d
 2992 008f 08       		.sleb128 8
 2993 0090 00000000 		.4byte	0
 2994 0094 00000000 		.4byte	0
 2995              	.LLST4:
 2996 0098 00000000 		.4byte	.LFB5
ARM GAS  /tmp/ccGLq0Q1.s 			page 61


 2997 009c 02000000 		.4byte	.LCFI6
 2998 00a0 0200     		.2byte	0x2
 2999 00a2 7D       		.byte	0x7d
 3000 00a3 00       		.sleb128 0
 3001 00a4 02000000 		.4byte	.LCFI6
 3002 00a8 50000000 		.4byte	.LFE5
 3003 00ac 0200     		.2byte	0x2
 3004 00ae 7D       		.byte	0x7d
 3005 00af 08       		.sleb128 8
 3006 00b0 00000000 		.4byte	0
 3007 00b4 00000000 		.4byte	0
 3008              	.LLST5:
 3009 00b8 00000000 		.4byte	.LFB6
 3010 00bc 02000000 		.4byte	.LCFI7
 3011 00c0 0200     		.2byte	0x2
 3012 00c2 7D       		.byte	0x7d
 3013 00c3 00       		.sleb128 0
 3014 00c4 02000000 		.4byte	.LCFI7
 3015 00c8 70000000 		.4byte	.LFE6
 3016 00cc 0200     		.2byte	0x2
 3017 00ce 7D       		.byte	0x7d
 3018 00cf 08       		.sleb128 8
 3019 00d0 00000000 		.4byte	0
 3020 00d4 00000000 		.4byte	0
 3021              	.LLST6:
 3022 00d8 00000000 		.4byte	.LFB7
 3023 00dc 02000000 		.4byte	.LCFI8
 3024 00e0 0200     		.2byte	0x2
 3025 00e2 7D       		.byte	0x7d
 3026 00e3 00       		.sleb128 0
 3027 00e4 02000000 		.4byte	.LCFI8
 3028 00e8 44000000 		.4byte	.LFE7
 3029 00ec 0200     		.2byte	0x2
 3030 00ee 7D       		.byte	0x7d
 3031 00ef 08       		.sleb128 8
 3032 00f0 00000000 		.4byte	0
 3033 00f4 00000000 		.4byte	0
 3034              	.LLST7:
 3035 00f8 00000000 		.4byte	.LFB8
 3036 00fc 02000000 		.4byte	.LCFI9
 3037 0100 0200     		.2byte	0x2
 3038 0102 7D       		.byte	0x7d
 3039 0103 00       		.sleb128 0
 3040 0104 02000000 		.4byte	.LCFI9
 3041 0108 44000000 		.4byte	.LFE8
 3042 010c 0200     		.2byte	0x2
 3043 010e 7D       		.byte	0x7d
 3044 010f 08       		.sleb128 8
 3045 0110 00000000 		.4byte	0
 3046 0114 00000000 		.4byte	0
 3047              	.LLST8:
 3048 0118 00000000 		.4byte	.LFB9
 3049 011c 02000000 		.4byte	.LCFI10
 3050 0120 0200     		.2byte	0x2
 3051 0122 7D       		.byte	0x7d
 3052 0123 00       		.sleb128 0
 3053 0124 02000000 		.4byte	.LCFI10
ARM GAS  /tmp/ccGLq0Q1.s 			page 62


 3054 0128 54000000 		.4byte	.LFE9
 3055 012c 0200     		.2byte	0x2
 3056 012e 7D       		.byte	0x7d
 3057 012f 10       		.sleb128 16
 3058 0130 00000000 		.4byte	0
 3059 0134 00000000 		.4byte	0
 3060              	.LLST9:
 3061 0138 00000000 		.4byte	.LFB10
 3062 013c 02000000 		.4byte	.LCFI11
 3063 0140 0200     		.2byte	0x2
 3064 0142 7D       		.byte	0x7d
 3065 0143 00       		.sleb128 0
 3066 0144 02000000 		.4byte	.LCFI11
 3067 0148 96000000 		.4byte	.LFE10
 3068 014c 0200     		.2byte	0x2
 3069 014e 7D       		.byte	0x7d
 3070 014f 10       		.sleb128 16
 3071 0150 00000000 		.4byte	0
 3072 0154 00000000 		.4byte	0
 3073              	.LLST10:
 3074 0158 00000000 		.4byte	.LFB11
 3075 015c 02000000 		.4byte	.LCFI12
 3076 0160 0200     		.2byte	0x2
 3077 0162 7D       		.byte	0x7d
 3078 0163 00       		.sleb128 0
 3079 0164 02000000 		.4byte	.LCFI12
 3080 0168 AE020000 		.4byte	.LFE11
 3081 016c 0200     		.2byte	0x2
 3082 016e 7D       		.byte	0x7d
 3083 016f 10       		.sleb128 16
 3084 0170 00000000 		.4byte	0
 3085 0174 00000000 		.4byte	0
 3086              	.LLST11:
 3087 0178 00000000 		.4byte	.LFB12
 3088 017c 02000000 		.4byte	.LCFI13
 3089 0180 0200     		.2byte	0x2
 3090 0182 7D       		.byte	0x7d
 3091 0183 00       		.sleb128 0
 3092 0184 02000000 		.4byte	.LCFI13
 3093 0188 28010000 		.4byte	.LFE12
 3094 018c 0200     		.2byte	0x2
 3095 018e 7D       		.byte	0x7d
 3096 018f 10       		.sleb128 16
 3097 0190 00000000 		.4byte	0
 3098 0194 00000000 		.4byte	0
 3099              	.LLST12:
 3100 0198 00000000 		.4byte	.LFB13
 3101 019c 02000000 		.4byte	.LCFI14
 3102 01a0 0200     		.2byte	0x2
 3103 01a2 7D       		.byte	0x7d
 3104 01a3 00       		.sleb128 0
 3105 01a4 02000000 		.4byte	.LCFI14
 3106 01a8 80000000 		.4byte	.LFE13
 3107 01ac 0200     		.2byte	0x2
 3108 01ae 7D       		.byte	0x7d
 3109 01af 18       		.sleb128 24
 3110 01b0 00000000 		.4byte	0
ARM GAS  /tmp/ccGLq0Q1.s 			page 63


 3111 01b4 00000000 		.4byte	0
 3112              	.LLST13:
 3113 01b8 00000000 		.4byte	.LFB14
 3114 01bc 02000000 		.4byte	.LCFI15
 3115 01c0 0200     		.2byte	0x2
 3116 01c2 7D       		.byte	0x7d
 3117 01c3 00       		.sleb128 0
 3118 01c4 02000000 		.4byte	.LCFI15
 3119 01c8 EC000000 		.4byte	.LFE14
 3120 01cc 0200     		.2byte	0x2
 3121 01ce 7D       		.byte	0x7d
 3122 01cf 18       		.sleb128 24
 3123 01d0 00000000 		.4byte	0
 3124 01d4 00000000 		.4byte	0
 3125              	.LLST14:
 3126 01d8 00000000 		.4byte	.LFB15
 3127 01dc 02000000 		.4byte	.LCFI16
 3128 01e0 0200     		.2byte	0x2
 3129 01e2 7D       		.byte	0x7d
 3130 01e3 00       		.sleb128 0
 3131 01e4 02000000 		.4byte	.LCFI16
 3132 01e8 04000000 		.4byte	.LCFI17
 3133 01ec 0200     		.2byte	0x2
 3134 01ee 7D       		.byte	0x7d
 3135 01ef 08       		.sleb128 8
 3136 01f0 04000000 		.4byte	.LCFI17
 3137 01f4 E8000000 		.4byte	.LFE15
 3138 01f8 0200     		.2byte	0x2
 3139 01fa 7D       		.byte	0x7d
 3140 01fb 28       		.sleb128 40
 3141 01fc 00000000 		.4byte	0
 3142 0200 00000000 		.4byte	0
 3143              		.section	.debug_aranges,"",%progbits
 3144 0000 94000000 		.4byte	0x94
 3145 0004 0200     		.2byte	0x2
 3146 0006 00000000 		.4byte	.Ldebug_info0
 3147 000a 04       		.byte	0x4
 3148 000b 00       		.byte	0
 3149 000c 0000     		.2byte	0
 3150 000e 0000     		.2byte	0
 3151 0010 00000000 		.4byte	.LFB0
 3152 0014 20000000 		.4byte	.LFE0-.LFB0
 3153 0018 00000000 		.4byte	.LFB1
 3154 001c 14000000 		.4byte	.LFE1-.LFB1
 3155 0020 00000000 		.4byte	.LFB2
 3156 0024 44000000 		.4byte	.LFE2-.LFB2
 3157 0028 00000000 		.4byte	.LFB3
 3158 002c 44000000 		.4byte	.LFE3-.LFB3
 3159 0030 00000000 		.4byte	.LFB4
 3160 0034 D4000000 		.4byte	.LFE4-.LFB4
 3161 0038 00000000 		.4byte	.LFB5
 3162 003c 50000000 		.4byte	.LFE5-.LFB5
 3163 0040 00000000 		.4byte	.LFB6
 3164 0044 70000000 		.4byte	.LFE6-.LFB6
 3165 0048 00000000 		.4byte	.LFB7
 3166 004c 44000000 		.4byte	.LFE7-.LFB7
 3167 0050 00000000 		.4byte	.LFB8
ARM GAS  /tmp/ccGLq0Q1.s 			page 64


 3168 0054 44000000 		.4byte	.LFE8-.LFB8
 3169 0058 00000000 		.4byte	.LFB9
 3170 005c 54000000 		.4byte	.LFE9-.LFB9
 3171 0060 00000000 		.4byte	.LFB10
 3172 0064 96000000 		.4byte	.LFE10-.LFB10
 3173 0068 00000000 		.4byte	.LFB11
 3174 006c AE020000 		.4byte	.LFE11-.LFB11
 3175 0070 00000000 		.4byte	.LFB12
 3176 0074 28010000 		.4byte	.LFE12-.LFB12
 3177 0078 00000000 		.4byte	.LFB13
 3178 007c 80000000 		.4byte	.LFE13-.LFB13
 3179 0080 00000000 		.4byte	.LFB14
 3180 0084 EC000000 		.4byte	.LFE14-.LFB14
 3181 0088 00000000 		.4byte	.LFB15
 3182 008c E8000000 		.4byte	.LFE15-.LFB15
 3183 0090 00000000 		.4byte	0
 3184 0094 00000000 		.4byte	0
 3185              		.section	.debug_ranges,"",%progbits
 3186              	.Ldebug_ranges0:
 3187 0000 00000000 		.4byte	.LFB0
 3188 0004 20000000 		.4byte	.LFE0
 3189 0008 00000000 		.4byte	.LFB1
 3190 000c 14000000 		.4byte	.LFE1
 3191 0010 00000000 		.4byte	.LFB2
 3192 0014 44000000 		.4byte	.LFE2
 3193 0018 00000000 		.4byte	.LFB3
 3194 001c 44000000 		.4byte	.LFE3
 3195 0020 00000000 		.4byte	.LFB4
 3196 0024 D4000000 		.4byte	.LFE4
 3197 0028 00000000 		.4byte	.LFB5
 3198 002c 50000000 		.4byte	.LFE5
 3199 0030 00000000 		.4byte	.LFB6
 3200 0034 70000000 		.4byte	.LFE6
 3201 0038 00000000 		.4byte	.LFB7
 3202 003c 44000000 		.4byte	.LFE7
 3203 0040 00000000 		.4byte	.LFB8
 3204 0044 44000000 		.4byte	.LFE8
 3205 0048 00000000 		.4byte	.LFB9
 3206 004c 54000000 		.4byte	.LFE9
 3207 0050 00000000 		.4byte	.LFB10
 3208 0054 96000000 		.4byte	.LFE10
 3209 0058 00000000 		.4byte	.LFB11
 3210 005c AE020000 		.4byte	.LFE11
 3211 0060 00000000 		.4byte	.LFB12
 3212 0064 28010000 		.4byte	.LFE12
 3213 0068 00000000 		.4byte	.LFB13
 3214 006c 80000000 		.4byte	.LFE13
 3215 0070 00000000 		.4byte	.LFB14
 3216 0074 EC000000 		.4byte	.LFE14
 3217 0078 00000000 		.4byte	.LFB15
 3218 007c E8000000 		.4byte	.LFE15
 3219 0080 00000000 		.4byte	0
 3220 0084 00000000 		.4byte	0
 3221              		.section	.debug_line,"",%progbits
 3222              	.Ldebug_line0:
 3223 0000 10020000 		.section	.debug_str,"MS",%progbits,1
 3223      02002000 
ARM GAS  /tmp/ccGLq0Q1.s 			page 65


 3223      00000201 
 3223      FB0E0D00 
 3223      01010101 
 3224              	.LASF56:
 3225 0000 2F686F6D 		.ascii	"/home/med/Documents/stm32_proj/emacs_dexel_pfc\000"
 3225      652F6D65 
 3225      642F446F 
 3225      63756D65 
 3225      6E74732F 
 3226              	.LASF21:
 3227 002f 746F7461 		.ascii	"total_ma\000"
 3227      6C5F6D61 
 3227      00
 3228              	.LASF48:
 3229 0038 645F6C61 		.ascii	"d_last\000"
 3229      737400
 3230              	.LASF55:
 3231 003f 7372632F 		.ascii	"src/dsp.c\000"
 3231      6473702E 
 3231      6300
 3232              	.LASF49:
 3233 0049 765F6D61 		.ascii	"v_ma8\000"
 3233      3800
 3234              	.LASF7:
 3235 004f 6C6F6E67 		.ascii	"long int\000"
 3235      20696E74 
 3235      00
 3236              	.LASF12:
 3237 0058 646F7562 		.ascii	"double\000"
 3237      6C6500
 3238              	.LASF14:
 3239 005f 72616E64 		.ascii	"random\000"
 3239      6F6D00
 3240              	.LASF28:
 3241 0066 4D414669 		.ascii	"MAFilter8\000"
 3241      6C746572 
 3241      3800
 3242              	.LASF13:
 3243 0070 666C6F61 		.ascii	"float\000"
 3243      7400
 3244              	.LASF30:
 3245 0076 4D414669 		.ascii	"MAFilter32Fast\000"
 3245      6C746572 
 3245      33324661 
 3245      737400
 3246              	.LASF23:
 3247 0085 4D413843 		.ascii	"MA8Circular\000"
 3247      69726375 
 3247      6C617200 
 3248              	.LASF4:
 3249 0091 756E7369 		.ascii	"unsigned char\000"
 3249      676E6564 
 3249      20636861 
 3249      7200
 3250              	.LASF52:
 3251 009f 765F6D61 		.ascii	"v_ma_circular\000"
 3251      5F636972 
ARM GAS  /tmp/ccGLq0Q1.s 			page 66


 3251      63756C61 
 3251      7200
 3252              	.LASF35:
 3253 00ad 705F7665 		.ascii	"p_vector\000"
 3253      63746F72 
 3253      00
 3254              	.LASF22:
 3255 00b6 4D413843 		.ascii	"MA8Circular_Reset\000"
 3255      69726375 
 3255      6C61725F 
 3255      52657365 
 3255      7400
 3256              	.LASF27:
 3257 00c8 7673616D 		.ascii	"vsample\000"
 3257      706C6500 
 3258              	.LASF8:
 3259 00d0 6C6F6E67 		.ascii	"long unsigned int\000"
 3259      20756E73 
 3259      69676E65 
 3259      6420696E 
 3259      7400
 3260              	.LASF6:
 3261 00e2 73686F72 		.ascii	"short unsigned int\000"
 3261      7420756E 
 3261      7369676E 
 3261      65642069 
 3261      6E7400
 3262              	.LASF15:
 3263 00f5 4D413332 		.ascii	"MA32Circular_Reset\000"
 3263      43697263 
 3263      756C6172 
 3263      5F526573 
 3263      657400
 3264              	.LASF53:
 3265 0108 705F6D61 		.ascii	"p_ma_circular\000"
 3265      5F636972 
 3265      63756C61 
 3265      7200
 3266              	.LASF32:
 3267 0116 705F7665 		.ascii	"p_vec_samples\000"
 3267      635F7361 
 3267      6D706C65 
 3267      7300
 3268              	.LASF50:
 3269 0124 705F6D61 		.ascii	"p_ma8\000"
 3269      3800
 3270              	.LASF57:
 3271 012a 4D413332 		.ascii	"MA32Circular_Start\000"
 3271      43697263 
 3271      756C6172 
 3271      5F537461 
 3271      727400
 3272              	.LASF46:
 3273 013d 6572726F 		.ascii	"error_z1\000"
 3273      725F7A31 
 3273      00
 3274              	.LASF47:
ARM GAS  /tmp/ccGLq0Q1.s 			page 67


 3275 0146 6572726F 		.ascii	"error_z2\000"
 3275      725F7A32 
 3275      00
 3276              	.LASF40:
 3277 014f 76616C5F 		.ascii	"val_k2\000"
 3277      6B3200
 3278              	.LASF51:
 3279 0156 746F7461 		.ascii	"total_ma8\000"
 3279      6C5F6D61 
 3279      3800
 3280              	.LASF19:
 3281 0160 52616E64 		.ascii	"RandomGen\000"
 3281      6F6D4765 
 3281      6E00
 3282              	.LASF0:
 3283 016a 756E7369 		.ascii	"unsigned int\000"
 3283      676E6564 
 3283      20696E74 
 3283      00
 3284              	.LASF36:
 3285 0177 73657470 		.ascii	"setpoint\000"
 3285      6F696E74 
 3285      00
 3286              	.LASF45:
 3287 0180 655F7A32 		.ascii	"e_z2\000"
 3287      00
 3288              	.LASF9:
 3289 0185 6C6F6E67 		.ascii	"long long unsigned int\000"
 3289      206C6F6E 
 3289      6720756E 
 3289      7369676E 
 3289      65642069 
 3290              	.LASF44:
 3291 019c 655F7A31 		.ascii	"e_z1\000"
 3291      00
 3292              	.LASF42:
 3293 01a1 5049445F 		.ascii	"PID_roof\000"
 3293      726F6F66 
 3293      00
 3294              	.LASF54:
 3295 01aa 474E5520 		.ascii	"GNU C11 5.2.1 20151202 (release) [ARM/embedded-5-br"
 3295      43313120 
 3295      352E322E 
 3295      31203230 
 3295      31353132 
 3296 01dd 616E6368 		.ascii	"anch revision 231848] -mcpu=cortex-m0 -mthumb -g -g"
 3296      20726576 
 3296      6973696F 
 3296      6E203233 
 3296      31383438 
 3297 0210 64776172 		.ascii	"dwarf-2 -O0 -fomit-frame-pointer -fdata-sections -f"
 3297      662D3220 
 3297      2D4F3020 
 3297      2D666F6D 
 3297      69742D66 
 3298 0243 66756E63 		.ascii	"function-sections\000"
 3298      74696F6E 
ARM GAS  /tmp/ccGLq0Q1.s 			page 68


 3298      2D736563 
 3298      74696F6E 
 3298      7300
 3299              	.LASF10:
 3300 0255 73697A65 		.ascii	"sizetype\000"
 3300      74797065 
 3300      00
 3301              	.LASF16:
 3302 025e 4D413332 		.ascii	"MA32Circular_Load\000"
 3302      43697263 
 3302      756C6172 
 3302      5F4C6F61 
 3302      6400
 3303              	.LASF38:
 3304 0270 6572726F 		.ascii	"error\000"
 3304      7200
 3305              	.LASF1:
 3306 0276 6C6F6E67 		.ascii	"long long int\000"
 3306      206C6F6E 
 3306      6720696E 
 3306      7400
 3307              	.LASF20:
 3308 0284 4D413332 		.ascii	"MA32Circular_Calc\000"
 3308      43697263 
 3308      756C6172 
 3308      5F43616C 
 3308      6300
 3309              	.LASF29:
 3310 0296 4D414669 		.ascii	"MAFilter32\000"
 3310      6C746572 
 3310      333200
 3311              	.LASF33:
 3312 02a1 696E6465 		.ascii	"index\000"
 3312      7800
 3313              	.LASF39:
 3314 02a7 76616C5F 		.ascii	"val_k1\000"
 3314      6B3100
 3315              	.LASF31:
 3316 02ae 4D414669 		.ascii	"MAFilter32Circular\000"
 3316      6C746572 
 3316      33324369 
 3316      7263756C 
 3316      617200
 3317              	.LASF41:
 3318 02c1 76616C5F 		.ascii	"val_k3\000"
 3318      6B3300
 3319              	.LASF5:
 3320 02c8 73686F72 		.ascii	"short int\000"
 3320      7420696E 
 3320      7400
 3321              	.LASF34:
 3322 02d2 705F7375 		.ascii	"p_sum\000"
 3322      6D00
 3323              	.LASF17:
 3324 02d8 73656564 		.ascii	"seed\000"
 3324      00
 3325              	.LASF26:
ARM GAS  /tmp/ccGLq0Q1.s 			page 69


 3326 02dd 4D414669 		.ascii	"MAFilterFast\000"
 3326      6C746572 
 3326      46617374 
 3326      00
 3327              	.LASF37:
 3328 02ea 73616D70 		.ascii	"sample\000"
 3328      6C6500
 3329              	.LASF11:
 3330 02f1 63686172 		.ascii	"char\000"
 3330      00
 3331              	.LASF2:
 3332 02f6 6C6F6E67 		.ascii	"long double\000"
 3332      20646F75 
 3332      626C6500 
 3333              	.LASF3:
 3334 0302 7369676E 		.ascii	"signed char\000"
 3334      65642063 
 3334      68617200 
 3335              	.LASF24:
 3336 030e 4D413843 		.ascii	"MA8Circular_Only_Load\000"
 3336      69726375 
 3336      6C61725F 
 3336      4F6E6C79 
 3336      5F4C6F61 
 3337              	.LASF18:
 3338 0324 6E65775F 		.ascii	"new_sample\000"
 3338      73616D70 
 3338      6C6500
 3339              	.LASF25:
 3340 032f 4D413843 		.ascii	"MA8Circular_Only_Calc\000"
 3340      69726375 
 3340      6C61725F 
 3340      4F6E6C79 
 3340      5F43616C 
 3341              	.LASF43:
 3342 0345 6C6F6361 		.ascii	"local_last_d\000"
 3342      6C5F6C61 
 3342      73745F64 
 3342      00
 3343              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/ccGLq0Q1.s 			page 70


DEFINED SYMBOLS
                            *ABS*:00000000 dsp.c
     /tmp/ccGLq0Q1.s:58     .bss.acc:00000000 acc
     /tmp/ccGLq0Q1.s:55     .bss.acc:00000000 $d
     /tmp/ccGLq0Q1.s:65     .bss.error_z1:00000000 error_z1
     /tmp/ccGLq0Q1.s:62     .bss.error_z1:00000000 $d
     /tmp/ccGLq0Q1.s:72     .bss.error_z2:00000000 error_z2
     /tmp/ccGLq0Q1.s:69     .bss.error_z2:00000000 $d
     /tmp/ccGLq0Q1.s:79     .bss.d_last:00000000 d_last
     /tmp/ccGLq0Q1.s:76     .bss.d_last:00000000 $d
                            *COM*:00000010 v_ma8
                            *COM*:00000004 p_ma8
     /tmp/ccGLq0Q1.s:88     .bss.total_ma8:00000000 total_ma8
     /tmp/ccGLq0Q1.s:85     .bss.total_ma8:00000000 $d
                            *COM*:00000040 v_ma_circular
                            *COM*:00000004 p_ma_circular
     /tmp/ccGLq0Q1.s:93     .text.RandomGen:00000000 $t
     /tmp/ccGLq0Q1.s:98     .text.RandomGen:00000000 RandomGen
     /tmp/ccGLq0Q1.s:131    .text.MA32Circular_Start:00000000 $t
     /tmp/ccGLq0Q1.s:136    .text.MA32Circular_Start:00000000 MA32Circular_Start
     /tmp/ccGLq0Q1.s:151    .text.MA32Circular_Start:0000000c $d
     /tmp/ccGLq0Q1.s:157    .text.MA32Circular_Reset:00000000 $t
     /tmp/ccGLq0Q1.s:162    .text.MA32Circular_Reset:00000000 MA32Circular_Reset
     /tmp/ccGLq0Q1.s:213    .text.MA32Circular_Reset:00000040 $d
     /tmp/ccGLq0Q1.s:218    .text.MA32Circular_Load:00000000 $t
     /tmp/ccGLq0Q1.s:223    .text.MA32Circular_Load:00000000 MA32Circular_Load
     /tmp/ccGLq0Q1.s:269    .text.MA32Circular_Load:00000038 $d
     /tmp/ccGLq0Q1.s:276    .text.MA32Circular_Calc:00000000 $t
     /tmp/ccGLq0Q1.s:281    .text.MA32Circular_Calc:00000000 MA32Circular_Calc
     /tmp/ccGLq0Q1.s:420    .text.MA32Circular_Calc:000000d0 $d
     /tmp/ccGLq0Q1.s:425    .text.MA8Circular_Reset:00000000 $t
     /tmp/ccGLq0Q1.s:430    .text.MA8Circular_Reset:00000000 MA8Circular_Reset
     /tmp/ccGLq0Q1.s:483    .text.MA8Circular_Reset:00000044 $d
     /tmp/ccGLq0Q1.s:490    .text.MA8Circular:00000000 $t
     /tmp/ccGLq0Q1.s:495    .text.MA8Circular:00000000 MA8Circular
     /tmp/ccGLq0Q1.s:563    .text.MA8Circular:00000060 $d
     /tmp/ccGLq0Q1.s:571    .text.MA8Circular_Only_Load:00000000 $t
     /tmp/ccGLq0Q1.s:576    .text.MA8Circular_Only_Load:00000000 MA8Circular_Only_Load
     /tmp/ccGLq0Q1.s:622    .text.MA8Circular_Only_Load:00000038 $d
     /tmp/ccGLq0Q1.s:629    .text.MA8Circular_Only_Calc:00000000 $t
     /tmp/ccGLq0Q1.s:634    .text.MA8Circular_Only_Calc:00000000 MA8Circular_Only_Calc
     /tmp/ccGLq0Q1.s:679    .text.MA8Circular_Only_Calc:00000040 $d
     /tmp/ccGLq0Q1.s:684    .text.MAFilterFast:00000000 $t
     /tmp/ccGLq0Q1.s:689    .text.MAFilterFast:00000000 MAFilterFast
     /tmp/ccGLq0Q1.s:748    .text.MAFilter8:00000000 $t
     /tmp/ccGLq0Q1.s:753    .text.MAFilter8:00000000 MAFilter8
     /tmp/ccGLq0Q1.s:849    .text.MAFilter32:00000000 $t
     /tmp/ccGLq0Q1.s:854    .text.MAFilter32:00000000 MAFilter32
     /tmp/ccGLq0Q1.s:1245   .text.MAFilter32Fast:00000000 $t
     /tmp/ccGLq0Q1.s:1250   .text.MAFilter32Fast:00000000 MAFilter32Fast
     /tmp/ccGLq0Q1.s:1431   .text.MAFilter32Circular:00000000 $t
     /tmp/ccGLq0Q1.s:1436   .text.MAFilter32Circular:00000000 MAFilter32Circular
     /tmp/ccGLq0Q1.s:1525   .text.PID:00000000 $t
     /tmp/ccGLq0Q1.s:1530   .text.PID:00000000 PID
     /tmp/ccGLq0Q1.s:1667   .text.PID:000000dc $d
     /tmp/ccGLq0Q1.s:1675   .text.PID_roof:00000000 $t
     /tmp/ccGLq0Q1.s:1680   .text.PID_roof:00000000 PID_roof
ARM GAS  /tmp/ccGLq0Q1.s 			page 71


     /tmp/ccGLq0Q1.s:1825   .text.PID_roof:000000e4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
srand
rand
