ARM GAS  /tmp/cc4f1svg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"it.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.2.1 20151202 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./src -I ./cmsis_boot -I ./cmsis_core
  18              	@ -imultilib armv6-m
  19              	@ -iprefix /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/
  20              	@ -isysroot /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../arm-none-eabi
  21              	@ -D__USES_INITFINI__ -D STM32F030 src/it.c -mcpu=cortex-m0 -mthumb
  22              	@ -auxbase-strip src/it.o -g -gdwarf-2 -O0 -Wall -fomit-frame-pointer
  23              	@ -fdata-sections -ffunction-sections -fverbose-asm
  24              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  25              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  26              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  27              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  28              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  29              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  30              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  31              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  32              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  33              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  34              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  35              	@ -fmerge-debug-strings -fomit-frame-pointer -fpeephole
  36              	@ -fprefetch-loop-arrays -freg-struct-return
  37              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  38              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  39              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  40              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  41              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstdarg-opt
  42              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
  43              	@ -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  44              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  45              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  46              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  47              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  48              	@ -mvectorize-with-neon-quad
  49              	
  50              		.text
  51              	.Ltext0:
  52              		.cfi_sections	.debug_frame
  53              		.section	.text.NMI_Handler,"ax",%progbits
  54              		.align	2
  55              		.global	NMI_Handler
  56              		.code	16
  57              		.thumb_func
ARM GAS  /tmp/cc4f1svg.s 			page 2


  58              		.type	NMI_Handler, %function
  59              	NMI_Handler:
  60              	.LFB20:
  61              		.file 1 "src/it.c"
   1:src/it.c      **** //---------------------------------------------
   2:src/it.c      **** // ##
   3:src/it.c      **** // ## @Author: Med
   4:src/it.c      **** // ## @Editor: Emacs - ggtags
   5:src/it.c      **** // ## @TAGS:   Global
   6:src/it.c      **** // ## @CPU:    STM32F030
   7:src/it.c      **** // ##
   8:src/it.c      **** // #### IT.C ##################################
   9:src/it.c      **** //---------------------------------------------
  10:src/it.c      **** 
  11:src/it.c      **** /* Includes ------------------------------------------------------------------*/
  12:src/it.c      **** #include "it.h"
  13:src/it.c      **** 
  14:src/it.c      **** extern void TimingDelay_Decrement(void);
  15:src/it.c      **** /* Private typedef -----------------------------------------------------------*/
  16:src/it.c      **** /* Private define ------------------------------------------------------------*/
  17:src/it.c      **** /* Private macro -------------------------------------------------------------*/
  18:src/it.c      **** /* Private variables ---------------------------------------------------------*/
  19:src/it.c      **** /* Private function prototypes -----------------------------------------------*/
  20:src/it.c      **** /* Private functions ---------------------------------------------------------*/
  21:src/it.c      **** 
  22:src/it.c      **** /******************************************************************************/
  23:src/it.c      **** /*            Cortex-M0 Processor Exceptions Handlers                         */
  24:src/it.c      **** /******************************************************************************/
  25:src/it.c      **** 
  26:src/it.c      **** /**
  27:src/it.c      ****   * @brief  This function handles NMI exception.
  28:src/it.c      ****   * @param  None
  29:src/it.c      ****   * @retval None
  30:src/it.c      ****   */
  31:src/it.c      **** void NMI_Handler(void)
  32:src/it.c      **** {
  62              		.loc 1 32 0
  63              		.cfi_startproc
  33:src/it.c      **** }
  64              		.loc 1 33 0
  65 0000 C046     		nop
  66              		@ sp needed	@
  67 0002 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE20:
  70              		.size	NMI_Handler, .-NMI_Handler
  71              		.section	.text.HardFault_Handler,"ax",%progbits
  72              		.align	2
  73              		.global	HardFault_Handler
  74              		.code	16
  75              		.thumb_func
  76              		.type	HardFault_Handler, %function
  77              	HardFault_Handler:
  78              	.LFB21:
  34:src/it.c      **** 
  35:src/it.c      **** /**
  36:src/it.c      ****   * @brief  This function handles Hard Fault exception.
ARM GAS  /tmp/cc4f1svg.s 			page 3


  37:src/it.c      ****   * @param  None
  38:src/it.c      ****   * @retval None
  39:src/it.c      ****   */
  40:src/it.c      **** void HardFault_Handler(void)
  41:src/it.c      **** {
  79              		.loc 1 41 0
  80              		.cfi_startproc
  81              	.L3:
  42:src/it.c      ****   /* Go to infinite loop when Hard Fault exception occurs */
  43:src/it.c      ****   while (1)
  44:src/it.c      ****   {
  45:src/it.c      ****   }
  82              		.loc 1 45 0 discriminator 1
  83 0000 FEE7     		b	.L3	@
  84              		.cfi_endproc
  85              	.LFE21:
  86              		.size	HardFault_Handler, .-HardFault_Handler
  87 0002 C046     		.section	.text.SVC_Handler,"ax",%progbits
  88              		.align	2
  89              		.global	SVC_Handler
  90              		.code	16
  91              		.thumb_func
  92              		.type	SVC_Handler, %function
  93              	SVC_Handler:
  94              	.LFB22:
  46:src/it.c      **** }
  47:src/it.c      **** 
  48:src/it.c      **** /**
  49:src/it.c      ****   * @brief  This function handles SVCall exception.
  50:src/it.c      ****   * @param  None
  51:src/it.c      ****   * @retval None
  52:src/it.c      ****   */
  53:src/it.c      **** void SVC_Handler(void)
  54:src/it.c      **** {
  95              		.loc 1 54 0
  96              		.cfi_startproc
  55:src/it.c      **** }
  97              		.loc 1 55 0
  98 0000 C046     		nop
  99              		@ sp needed	@
 100 0002 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE22:
 103              		.size	SVC_Handler, .-SVC_Handler
 104              		.section	.text.PendSV_Handler,"ax",%progbits
 105              		.align	2
 106              		.global	PendSV_Handler
 107              		.code	16
 108              		.thumb_func
 109              		.type	PendSV_Handler, %function
 110              	PendSV_Handler:
 111              	.LFB23:
  56:src/it.c      **** 
  57:src/it.c      **** /**
  58:src/it.c      ****   * @brief  This function handles PendSVC exception.
  59:src/it.c      ****   * @param  None
  60:src/it.c      ****   * @retval None
ARM GAS  /tmp/cc4f1svg.s 			page 4


  61:src/it.c      ****   */
  62:src/it.c      **** void PendSV_Handler(void)
  63:src/it.c      **** {
 112              		.loc 1 63 0
 113              		.cfi_startproc
  64:src/it.c      **** }
 114              		.loc 1 64 0
 115 0000 C046     		nop
 116              		@ sp needed	@
 117 0002 7047     		bx	lr
 118              		.cfi_endproc
 119              	.LFE23:
 120              		.size	PendSV_Handler, .-PendSV_Handler
 121              		.section	.text.SysTick_Handler,"ax",%progbits
 122              		.align	2
 123              		.global	SysTick_Handler
 124              		.code	16
 125              		.thumb_func
 126              		.type	SysTick_Handler, %function
 127              	SysTick_Handler:
 128              	.LFB24:
  65:src/it.c      **** 
  66:src/it.c      **** /**
  67:src/it.c      ****   * @brief  This function handles SysTick Handler.
  68:src/it.c      ****   * @param  None
  69:src/it.c      ****   * @retval None
  70:src/it.c      ****   */
  71:src/it.c      **** void SysTick_Handler(void)
  72:src/it.c      **** {
 129              		.loc 1 72 0
 130              		.cfi_startproc
 131 0000 10B5     		push	{r4, lr}	@
 132              	.LCFI0:
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
  73:src/it.c      **** 	TimingDelay_Decrement();
 136              		.loc 1 73 0
 137 0002 FFF7FEFF 		bl	TimingDelay_Decrement	@
  74:src/it.c      **** }
 138              		.loc 1 74 0
 139 0006 C046     		nop
 140              		@ sp needed	@
 141 0008 10BD     		pop	{r4, pc}
 142              		.cfi_endproc
 143              	.LFE24:
 144              		.size	SysTick_Handler, .-SysTick_Handler
 145 000a C046     		.text
 146              	.Letext0:
 147              		.section	.debug_info,"",%progbits
 148              	.Ldebug_info0:
 149 0000 DD000000 		.4byte	0xdd
 150 0004 0200     		.2byte	0x2
 151 0006 00000000 		.4byte	.Ldebug_abbrev0
 152 000a 04       		.byte	0x4
 153 000b 01       		.uleb128 0x1
 154 000c 52000000 		.4byte	.LASF15
ARM GAS  /tmp/cc4f1svg.s 			page 5


 155 0010 0C       		.byte	0xc
 156 0011 A7010000 		.4byte	.LASF16
 157 0015 43010000 		.4byte	.LASF17
 158 0019 00000000 		.4byte	.Ldebug_ranges0+0
 159 001d 00000000 		.4byte	0
 160 0021 00000000 		.4byte	0
 161 0025 00000000 		.4byte	.Ldebug_line0
 162 0029 02       		.uleb128 0x2
 163 002a 01       		.byte	0x1
 164 002b 06       		.byte	0x6
 165 002c 85010000 		.4byte	.LASF0
 166 0030 02       		.uleb128 0x2
 167 0031 01       		.byte	0x1
 168 0032 08       		.byte	0x8
 169 0033 1B000000 		.4byte	.LASF1
 170 0037 02       		.uleb128 0x2
 171 0038 02       		.byte	0x2
 172 0039 05       		.byte	0x5
 173 003a 9D010000 		.4byte	.LASF2
 174 003e 02       		.uleb128 0x2
 175 003f 02       		.byte	0x2
 176 0040 07       		.byte	0x7
 177 0041 72010000 		.4byte	.LASF3
 178 0045 02       		.uleb128 0x2
 179 0046 04       		.byte	0x4
 180 0047 05       		.byte	0x5
 181 0048 3A010000 		.4byte	.LASF4
 182 004c 02       		.uleb128 0x2
 183 004d 04       		.byte	0x4
 184 004e 07       		.byte	0x7
 185 004f 29000000 		.4byte	.LASF5
 186 0053 02       		.uleb128 0x2
 187 0054 08       		.byte	0x8
 188 0055 05       		.byte	0x5
 189 0056 00000000 		.4byte	.LASF6
 190 005a 02       		.uleb128 0x2
 191 005b 08       		.byte	0x8
 192 005c 07       		.byte	0x7
 193 005d 3B000000 		.4byte	.LASF7
 194 0061 03       		.uleb128 0x3
 195 0062 04       		.byte	0x4
 196 0063 05       		.byte	0x5
 197 0064 696E7400 		.ascii	"int\000"
 198 0068 02       		.uleb128 0x2
 199 0069 04       		.byte	0x4
 200 006a 07       		.byte	0x7
 201 006b 0E000000 		.4byte	.LASF8
 202 006f 02       		.uleb128 0x2
 203 0070 04       		.byte	0x4
 204 0071 07       		.byte	0x7
 205 0072 B0010000 		.4byte	.LASF9
 206 0076 04       		.uleb128 0x4
 207 0077 01       		.byte	0x1
 208 0078 0F010000 		.4byte	.LASF10
 209 007c 01       		.byte	0x1
 210 007d 1F       		.byte	0x1f
 211 007e 01       		.byte	0x1
ARM GAS  /tmp/cc4f1svg.s 			page 6


 212 007f 00000000 		.4byte	.LFB20
 213 0083 04000000 		.4byte	.LFE20
 214 0087 02       		.byte	0x2
 215 0088 7D       		.byte	0x7d
 216 0089 00       		.sleb128 0
 217 008a 01       		.byte	0x1
 218 008b 04       		.uleb128 0x4
 219 008c 01       		.byte	0x1
 220 008d FD000000 		.4byte	.LASF11
 221 0091 01       		.byte	0x1
 222 0092 28       		.byte	0x28
 223 0093 01       		.byte	0x1
 224 0094 00000000 		.4byte	.LFB21
 225 0098 02000000 		.4byte	.LFE21
 226 009c 02       		.byte	0x2
 227 009d 7D       		.byte	0x7d
 228 009e 00       		.sleb128 0
 229 009f 01       		.byte	0x1
 230 00a0 04       		.uleb128 0x4
 231 00a1 01       		.byte	0x1
 232 00a2 91010000 		.4byte	.LASF12
 233 00a6 01       		.byte	0x1
 234 00a7 35       		.byte	0x35
 235 00a8 01       		.byte	0x1
 236 00a9 00000000 		.4byte	.LFB22
 237 00ad 04000000 		.4byte	.LFE22
 238 00b1 02       		.byte	0x2
 239 00b2 7D       		.byte	0x7d
 240 00b3 00       		.sleb128 0
 241 00b4 01       		.byte	0x1
 242 00b5 04       		.uleb128 0x4
 243 00b6 01       		.byte	0x1
 244 00b7 1B010000 		.4byte	.LASF13
 245 00bb 01       		.byte	0x1
 246 00bc 3E       		.byte	0x3e
 247 00bd 01       		.byte	0x1
 248 00be 00000000 		.4byte	.LFB23
 249 00c2 04000000 		.4byte	.LFE23
 250 00c6 02       		.byte	0x2
 251 00c7 7D       		.byte	0x7d
 252 00c8 00       		.sleb128 0
 253 00c9 01       		.byte	0x1
 254 00ca 05       		.uleb128 0x5
 255 00cb 01       		.byte	0x1
 256 00cc 2A010000 		.4byte	.LASF14
 257 00d0 01       		.byte	0x1
 258 00d1 47       		.byte	0x47
 259 00d2 01       		.byte	0x1
 260 00d3 00000000 		.4byte	.LFB24
 261 00d7 0A000000 		.4byte	.LFE24
 262 00db 00000000 		.4byte	.LLST0
 263 00df 01       		.byte	0x1
 264 00e0 00       		.byte	0
 265              		.section	.debug_abbrev,"",%progbits
 266              	.Ldebug_abbrev0:
 267 0000 01       		.uleb128 0x1
 268 0001 11       		.uleb128 0x11
ARM GAS  /tmp/cc4f1svg.s 			page 7


 269 0002 01       		.byte	0x1
 270 0003 25       		.uleb128 0x25
 271 0004 0E       		.uleb128 0xe
 272 0005 13       		.uleb128 0x13
 273 0006 0B       		.uleb128 0xb
 274 0007 03       		.uleb128 0x3
 275 0008 0E       		.uleb128 0xe
 276 0009 1B       		.uleb128 0x1b
 277 000a 0E       		.uleb128 0xe
 278 000b 55       		.uleb128 0x55
 279 000c 06       		.uleb128 0x6
 280 000d 11       		.uleb128 0x11
 281 000e 01       		.uleb128 0x1
 282 000f 52       		.uleb128 0x52
 283 0010 01       		.uleb128 0x1
 284 0011 10       		.uleb128 0x10
 285 0012 06       		.uleb128 0x6
 286 0013 00       		.byte	0
 287 0014 00       		.byte	0
 288 0015 02       		.uleb128 0x2
 289 0016 24       		.uleb128 0x24
 290 0017 00       		.byte	0
 291 0018 0B       		.uleb128 0xb
 292 0019 0B       		.uleb128 0xb
 293 001a 3E       		.uleb128 0x3e
 294 001b 0B       		.uleb128 0xb
 295 001c 03       		.uleb128 0x3
 296 001d 0E       		.uleb128 0xe
 297 001e 00       		.byte	0
 298 001f 00       		.byte	0
 299 0020 03       		.uleb128 0x3
 300 0021 24       		.uleb128 0x24
 301 0022 00       		.byte	0
 302 0023 0B       		.uleb128 0xb
 303 0024 0B       		.uleb128 0xb
 304 0025 3E       		.uleb128 0x3e
 305 0026 0B       		.uleb128 0xb
 306 0027 03       		.uleb128 0x3
 307 0028 08       		.uleb128 0x8
 308 0029 00       		.byte	0
 309 002a 00       		.byte	0
 310 002b 04       		.uleb128 0x4
 311 002c 2E       		.uleb128 0x2e
 312 002d 00       		.byte	0
 313 002e 3F       		.uleb128 0x3f
 314 002f 0C       		.uleb128 0xc
 315 0030 03       		.uleb128 0x3
 316 0031 0E       		.uleb128 0xe
 317 0032 3A       		.uleb128 0x3a
 318 0033 0B       		.uleb128 0xb
 319 0034 3B       		.uleb128 0x3b
 320 0035 0B       		.uleb128 0xb
 321 0036 27       		.uleb128 0x27
 322 0037 0C       		.uleb128 0xc
 323 0038 11       		.uleb128 0x11
 324 0039 01       		.uleb128 0x1
 325 003a 12       		.uleb128 0x12
ARM GAS  /tmp/cc4f1svg.s 			page 8


 326 003b 01       		.uleb128 0x1
 327 003c 40       		.uleb128 0x40
 328 003d 0A       		.uleb128 0xa
 329 003e 9742     		.uleb128 0x2117
 330 0040 0C       		.uleb128 0xc
 331 0041 00       		.byte	0
 332 0042 00       		.byte	0
 333 0043 05       		.uleb128 0x5
 334 0044 2E       		.uleb128 0x2e
 335 0045 00       		.byte	0
 336 0046 3F       		.uleb128 0x3f
 337 0047 0C       		.uleb128 0xc
 338 0048 03       		.uleb128 0x3
 339 0049 0E       		.uleb128 0xe
 340 004a 3A       		.uleb128 0x3a
 341 004b 0B       		.uleb128 0xb
 342 004c 3B       		.uleb128 0x3b
 343 004d 0B       		.uleb128 0xb
 344 004e 27       		.uleb128 0x27
 345 004f 0C       		.uleb128 0xc
 346 0050 11       		.uleb128 0x11
 347 0051 01       		.uleb128 0x1
 348 0052 12       		.uleb128 0x12
 349 0053 01       		.uleb128 0x1
 350 0054 40       		.uleb128 0x40
 351 0055 06       		.uleb128 0x6
 352 0056 9642     		.uleb128 0x2116
 353 0058 0C       		.uleb128 0xc
 354 0059 00       		.byte	0
 355 005a 00       		.byte	0
 356 005b 00       		.byte	0
 357              		.section	.debug_loc,"",%progbits
 358              	.Ldebug_loc0:
 359              	.LLST0:
 360 0000 00000000 		.4byte	.LFB24
 361 0004 02000000 		.4byte	.LCFI0
 362 0008 0200     		.2byte	0x2
 363 000a 7D       		.byte	0x7d
 364 000b 00       		.sleb128 0
 365 000c 02000000 		.4byte	.LCFI0
 366 0010 0A000000 		.4byte	.LFE24
 367 0014 0200     		.2byte	0x2
 368 0016 7D       		.byte	0x7d
 369 0017 08       		.sleb128 8
 370 0018 00000000 		.4byte	0
 371 001c 00000000 		.4byte	0
 372              		.section	.debug_aranges,"",%progbits
 373 0000 3C000000 		.4byte	0x3c
 374 0004 0200     		.2byte	0x2
 375 0006 00000000 		.4byte	.Ldebug_info0
 376 000a 04       		.byte	0x4
 377 000b 00       		.byte	0
 378 000c 0000     		.2byte	0
 379 000e 0000     		.2byte	0
 380 0010 00000000 		.4byte	.LFB20
 381 0014 04000000 		.4byte	.LFE20-.LFB20
 382 0018 00000000 		.4byte	.LFB21
ARM GAS  /tmp/cc4f1svg.s 			page 9


 383 001c 02000000 		.4byte	.LFE21-.LFB21
 384 0020 00000000 		.4byte	.LFB22
 385 0024 04000000 		.4byte	.LFE22-.LFB22
 386 0028 00000000 		.4byte	.LFB23
 387 002c 04000000 		.4byte	.LFE23-.LFB23
 388 0030 00000000 		.4byte	.LFB24
 389 0034 0A000000 		.4byte	.LFE24-.LFB24
 390 0038 00000000 		.4byte	0
 391 003c 00000000 		.4byte	0
 392              		.section	.debug_ranges,"",%progbits
 393              	.Ldebug_ranges0:
 394 0000 00000000 		.4byte	.LFB20
 395 0004 04000000 		.4byte	.LFE20
 396 0008 00000000 		.4byte	.LFB21
 397 000c 02000000 		.4byte	.LFE21
 398 0010 00000000 		.4byte	.LFB22
 399 0014 04000000 		.4byte	.LFE22
 400 0018 00000000 		.4byte	.LFB23
 401 001c 04000000 		.4byte	.LFE23
 402 0020 00000000 		.4byte	.LFB24
 403 0024 0A000000 		.4byte	.LFE24
 404 0028 00000000 		.4byte	0
 405 002c 00000000 		.4byte	0
 406              		.section	.debug_line,"",%progbits
 407              	.Ldebug_line0:
 408 0000 7B000000 		.section	.debug_str,"MS",%progbits,1
 408      02001F00 
 408      00000201 
 408      FB0E0D00 
 408      01010101 
 409              	.LASF6:
 410 0000 6C6F6E67 		.ascii	"long long int\000"
 410      206C6F6E 
 410      6720696E 
 410      7400
 411              	.LASF8:
 412 000e 756E7369 		.ascii	"unsigned int\000"
 412      676E6564 
 412      20696E74 
 412      00
 413              	.LASF1:
 414 001b 756E7369 		.ascii	"unsigned char\000"
 414      676E6564 
 414      20636861 
 414      7200
 415              	.LASF5:
 416 0029 6C6F6E67 		.ascii	"long unsigned int\000"
 416      20756E73 
 416      69676E65 
 416      6420696E 
 416      7400
 417              	.LASF7:
 418 003b 6C6F6E67 		.ascii	"long long unsigned int\000"
 418      206C6F6E 
 418      6720756E 
 418      7369676E 
 418      65642069 
ARM GAS  /tmp/cc4f1svg.s 			page 10


 419              	.LASF15:
 420 0052 474E5520 		.ascii	"GNU C11 5.2.1 20151202 (release) [ARM/embedded-5-br"
 420      43313120 
 420      352E322E 
 420      31203230 
 420      31353132 
 421 0085 616E6368 		.ascii	"anch revision 231848] -mcpu=cortex-m0 -mthumb -g -g"
 421      20726576 
 421      6973696F 
 421      6E203233 
 421      31383438 
 422 00b8 64776172 		.ascii	"dwarf-2 -O0 -fomit-frame-pointer -fdata-sections -f"
 422      662D3220 
 422      2D4F3020 
 422      2D666F6D 
 422      69742D66 
 423 00eb 66756E63 		.ascii	"function-sections\000"
 423      74696F6E 
 423      2D736563 
 423      74696F6E 
 423      7300
 424              	.LASF11:
 425 00fd 48617264 		.ascii	"HardFault_Handler\000"
 425      4661756C 
 425      745F4861 
 425      6E646C65 
 425      7200
 426              	.LASF10:
 427 010f 4E4D495F 		.ascii	"NMI_Handler\000"
 427      48616E64 
 427      6C657200 
 428              	.LASF13:
 429 011b 50656E64 		.ascii	"PendSV_Handler\000"
 429      53565F48 
 429      616E646C 
 429      657200
 430              	.LASF14:
 431 012a 53797354 		.ascii	"SysTick_Handler\000"
 431      69636B5F 
 431      48616E64 
 431      6C657200 
 432              	.LASF4:
 433 013a 6C6F6E67 		.ascii	"long int\000"
 433      20696E74 
 433      00
 434              	.LASF17:
 435 0143 2F686F6D 		.ascii	"/home/med/Documents/stm32_proj/emacs_dexel_pfc\000"
 435      652F6D65 
 435      642F446F 
 435      63756D65 
 435      6E74732F 
 436              	.LASF3:
 437 0172 73686F72 		.ascii	"short unsigned int\000"
 437      7420756E 
 437      7369676E 
 437      65642069 
 437      6E7400
ARM GAS  /tmp/cc4f1svg.s 			page 11


 438              	.LASF0:
 439 0185 7369676E 		.ascii	"signed char\000"
 439      65642063 
 439      68617200 
 440              	.LASF12:
 441 0191 5356435F 		.ascii	"SVC_Handler\000"
 441      48616E64 
 441      6C657200 
 442              	.LASF2:
 443 019d 73686F72 		.ascii	"short int\000"
 443      7420696E 
 443      7400
 444              	.LASF16:
 445 01a7 7372632F 		.ascii	"src/it.c\000"
 445      69742E63 
 445      00
 446              	.LASF9:
 447 01b0 73697A65 		.ascii	"sizetype\000"
 447      74797065 
 447      00
 448              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/cc4f1svg.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 it.c
     /tmp/cc4f1svg.s:54     .text.NMI_Handler:00000000 $t
     /tmp/cc4f1svg.s:59     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/cc4f1svg.s:72     .text.HardFault_Handler:00000000 $t
     /tmp/cc4f1svg.s:77     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/cc4f1svg.s:88     .text.SVC_Handler:00000000 $t
     /tmp/cc4f1svg.s:93     .text.SVC_Handler:00000000 SVC_Handler
     /tmp/cc4f1svg.s:105    .text.PendSV_Handler:00000000 $t
     /tmp/cc4f1svg.s:110    .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/cc4f1svg.s:122    .text.SysTick_Handler:00000000 $t
     /tmp/cc4f1svg.s:127    .text.SysTick_Handler:00000000 SysTick_Handler
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TimingDelay_Decrement
