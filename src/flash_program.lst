ARM GAS  /tmp/ccTGK1Aa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"flash_program.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.2.1 20151202 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./src -I ./cmsis_boot -I ./cmsis_core
  18              	@ -imultilib armv6-m
  19              	@ -iprefix /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/
  20              	@ -isysroot /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../arm-none-eabi
  21              	@ -D__USES_INITFINI__ -D STM32F030 src/flash_program.c -mcpu=cortex-m0
  22              	@ -mthumb -auxbase-strip src/flash_program.o -g -gdwarf-2 -O0 -Wall
  23              	@ -fomit-frame-pointer -fdata-sections -ffunction-sections -fverbose-asm
  24              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  25              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  26              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  27              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  28              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  29              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  30              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  31              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  32              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  33              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  34              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  35              	@ -fmerge-debug-strings -fomit-frame-pointer -fpeephole
  36              	@ -fprefetch-loop-arrays -freg-struct-return
  37              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  38              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  39              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  40              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  41              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstdarg-opt
  42              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
  43              	@ -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  44              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  45              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  46              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  47              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  48              	@ -mvectorize-with-neon-quad
  49              	
  50              		.text
  51              	.Ltext0:
  52              		.cfi_sections	.debug_frame
  53              		.section	.text.EraseAllMemory_FLASH,"ax",%progbits
  54              		.align	2
  55              		.global	EraseAllMemory_FLASH
  56              		.code	16
  57              		.thumb_func
ARM GAS  /tmp/ccTGK1Aa.s 			page 2


  58              		.type	EraseAllMemory_FLASH, %function
  59              	EraseAllMemory_FLASH:
  60              	.LFB20:
  61              		.file 1 "src/flash_program.c"
   1:src/flash_program.c **** //---------------------------------------------
   2:src/flash_program.c **** // ##
   3:src/flash_program.c **** // ## @Author: Med
   4:src/flash_program.c **** // ## @Editor: Emacs - ggtags
   5:src/flash_program.c **** // ## @TAGS:   Global
   6:src/flash_program.c **** // ## @CPU:    STM32F030
   7:src/flash_program.c **** // ##
   8:src/flash_program.c **** // #### FLASH_PROGRAM.C #######################
   9:src/flash_program.c **** //---------------------------------------------
  10:src/flash_program.c **** 
  11:src/flash_program.c **** /* Includes ------------------------------------------------------------------*/
  12:src/flash_program.c **** #include "flash_program.h"
  13:src/flash_program.c **** #include "stm32f0xx.h"
  14:src/flash_program.c **** #include <string.h>
  15:src/flash_program.c **** 
  16:src/flash_program.c **** 
  17:src/flash_program.c **** 
  18:src/flash_program.c **** /* Externals variables ---------------------------------------------------------*/
  19:src/flash_program.c **** extern parameters_typedef param_struct;
  20:src/flash_program.c **** //extern mem_bkp_typedef memory_backup;
  21:src/flash_program.c **** //extern filesystem_typedef files;
  22:src/flash_program.c **** //extern unsigned int v_bkp [];
  23:src/flash_program.c **** 
  24:src/flash_program.c **** 
  25:src/flash_program.c **** /* Private typedef -----------------------------------------------------------*/
  26:src/flash_program.c **** 
  27:src/flash_program.c **** 
  28:src/flash_program.c **** /* Private define ------------------------------------------------------------*/
  29:src/flash_program.c **** 
  30:src/flash_program.c **** 
  31:src/flash_program.c **** 
  32:src/flash_program.c **** /* Private macro -------------------------------------------------------------*/
  33:src/flash_program.c **** /* Private variables ---------------------------------------------------------*/
  34:src/flash_program.c **** //unsigned int * pmem = (unsigned int *)0x08007000;	//Sector 7 Page 28
  35:src/flash_program.c **** 
  36:src/flash_program.c **** 
  37:src/flash_program.c **** /* Private function prototypes -----------------------------------------------*/
  38:src/flash_program.c **** /* Private functions ---------------------------------------------------------*/
  39:src/flash_program.c **** //unsigned char ReadMem (void)
  40:src/flash_program.c **** //{
  41:src/flash_program.c **** //	if (*pmem == 0xffffffff)
  42:src/flash_program.c **** //		return 1;
  43:src/flash_program.c **** //	else
  44:src/flash_program.c **** //		return 0;
  45:src/flash_program.c **** //}
  46:src/flash_program.c **** 
  47:src/flash_program.c **** unsigned char EraseAllMemory_FLASH(void)
  48:src/flash_program.c **** {
  62              		.loc 1 48 0
  63              		.cfi_startproc
  64 0000 00B5     		push	{lr}	@
  65              	.LCFI0:
  66              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccTGK1Aa.s 			page 3


  67              		.cfi_offset 14, -4
  68 0002 83B0     		sub	sp, sp, #12	@,,
  69              	.LCFI1:
  70              		.cfi_def_cfa_offset 16
  49:src/flash_program.c **** 	unsigned char resp = 0;
  71              		.loc 1 49 0
  72 0004 6B46     		mov	r3, sp	@ tmp127,
  73 0006 0733     		adds	r3, r3, #7	@ tmp115,
  74 0008 0022     		movs	r2, #0	@ tmp116,
  75 000a 1A70     		strb	r2, [r3]	@ tmp117, resp
  50:src/flash_program.c **** 
  51:src/flash_program.c **** 	ErasePage(PAGE31,1);
  76              		.loc 1 51 0
  77 000c 0D4B     		ldr	r3, .L5	@ tmp118,
  78 000e 0121     		movs	r1, #1	@,
  79 0010 1800     		movs	r0, r3	@, tmp118
  80 0012 FFF7FEFF 		bl	ErasePage	@
  52:src/flash_program.c **** 	//reviso si borre
  53:src/flash_program.c **** 
  54:src/flash_program.c **** 	if (*(unsigned int *) PAGE31 == 0xFFFFFFFF)
  81              		.loc 1 54 0
  82 0016 0B4B     		ldr	r3, .L5	@ D.5322,
  83 0018 1B68     		ldr	r3, [r3]	@ D.5323, *_6
  84 001a 0133     		adds	r3, r3, #1	@ tmp126, D.5323,
  85 001c 06D1     		bne	.L2	@,
  55:src/flash_program.c **** 		resp++;
  86              		.loc 1 55 0
  87 001e 6B46     		mov	r3, sp	@ tmp128,
  88 0020 0733     		adds	r3, r3, #7	@ tmp119,
  89 0022 1A78     		ldrb	r2, [r3]	@ D.5321, resp
  90 0024 6B46     		mov	r3, sp	@ tmp129,
  91 0026 0733     		adds	r3, r3, #7	@ tmp120,
  92 0028 0132     		adds	r2, r2, #1	@ tmp121,
  93 002a 1A70     		strb	r2, [r3]	@ tmp122, resp
  94              	.L2:
  56:src/flash_program.c **** 
  57:src/flash_program.c **** 	if (resp)
  95              		.loc 1 57 0
  96 002c 6B46     		mov	r3, sp	@ tmp130,
  97 002e 0733     		adds	r3, r3, #7	@ tmp123,
  98 0030 1B78     		ldrb	r3, [r3]	@ tmp124, resp
  99 0032 002B     		cmp	r3, #0	@ tmp124,
 100 0034 01D0     		beq	.L3	@,
  58:src/flash_program.c **** 		return PASSED;
 101              		.loc 1 58 0
 102 0036 0123     		movs	r3, #1	@ D.5321,
 103 0038 00E0     		b	.L4	@
 104              	.L3:
  59:src/flash_program.c **** 	else
  60:src/flash_program.c **** 		return FAILED;
 105              		.loc 1 60 0
 106 003a 0023     		movs	r3, #0	@ D.5321,
 107              	.L4:
  61:src/flash_program.c **** }
 108              		.loc 1 61 0
 109 003c 1800     		movs	r0, r3	@, <retval>
 110 003e 03B0     		add	sp, sp, #12	@,,
ARM GAS  /tmp/ccTGK1Aa.s 			page 4


 111              		@ sp needed	@
 112 0040 00BD     		pop	{pc}
 113              	.L6:
 114 0042 C046     		.align	2
 115              	.L5:
 116 0044 007C0008 		.word	134249472
 117              		.cfi_endproc
 118              	.LFE20:
 119              		.size	EraseAllMemory_FLASH, .-EraseAllMemory_FLASH
 120              		.section	.text.BackupPage,"ax",%progbits
 121              		.align	2
 122              		.global	BackupPage
 123              		.code	16
 124              		.thumb_func
 125              		.type	BackupPage, %function
 126              	BackupPage:
 127              	.LFB21:
  62:src/flash_program.c **** 
  63:src/flash_program.c **** /**
  64:src/flash_program.c ****   * @brief    After Reset, the Flash memory Program/Erase Controller is locked.
  65:src/flash_program.c ****   * To unlock it, the FLASH_Unlock function is used. Before programming the
  66:src/flash_program.c ****   * desired addresses, an erase operation is performed using the flash erase
  67:src/flash_program.c ****   * page feature. The erase procedure starts with the calculation of the number
  68:src/flash_program.c ****   * of pages to be used. Then all these pages will be erased one by one by
  69:src/flash_program.c ****   * calling FLASH_ErasePage function.
  70:src/flash_program.c ****   * Once this operation is finished, the programming operation will be performed by
  71:src/flash_program.c ****   * using the FLASH_ProgramWord function. The written data is then checked and the
  72:src/flash_program.c ****   * result of the programming operation is stored into the MemoryProgramStatus variable.
  73:src/flash_program.c ****   * @param  None
  74:src/flash_program.c ****   * @retval None
  75:src/flash_program.c ****   */
  76:src/flash_program.c **** 
  77:src/flash_program.c **** void BackupPage(unsigned int * p, unsigned int * page_addr)
  78:src/flash_program.c **** {
 128              		.loc 1 78 0
 129              		.cfi_startproc
 130 0000 84B0     		sub	sp, sp, #16	@,,
 131              	.LCFI2:
 132              		.cfi_def_cfa_offset 16
 133 0002 0190     		str	r0, [sp, #4]	@ p, p
 134 0004 0091     		str	r1, [sp]	@ page_addr, page_addr
  79:src/flash_program.c **** 	unsigned short i;
  80:src/flash_program.c **** 
  81:src/flash_program.c **** 	for (i = 0; i < 255; i++)
 135              		.loc 1 81 0
 136 0006 0E23     		movs	r3, #14	@ tmp118,
 137 0008 6B44     		add	r3, r3, sp	@ tmp118,
 138 000a 0022     		movs	r2, #0	@ tmp119,
 139 000c 1A80     		strh	r2, [r3]	@ tmp120, i
 140 000e 14E0     		b	.L8	@
 141              	.L9:
  82:src/flash_program.c **** 	{
  83:src/flash_program.c **** 		*(p + i) = *(page_addr + i);
 142              		.loc 1 83 0 discriminator 3
 143 0010 0E23     		movs	r3, #14	@ tmp121,
 144 0012 6B44     		add	r3, r3, sp	@ tmp121,
 145 0014 1B88     		ldrh	r3, [r3]	@ D.5324, i
ARM GAS  /tmp/ccTGK1Aa.s 			page 5


 146 0016 9B00     		lsls	r3, r3, #2	@ D.5324, D.5324,
 147 0018 019A     		ldr	r2, [sp, #4]	@ tmp122, p
 148 001a D318     		adds	r3, r2, r3	@ D.5325, tmp122, D.5324
 149 001c 0E22     		movs	r2, #14	@ tmp123,
 150 001e 6A44     		add	r2, r2, sp	@ tmp123,
 151 0020 1288     		ldrh	r2, [r2]	@ D.5324, i
 152 0022 9200     		lsls	r2, r2, #2	@ D.5324, D.5324,
 153 0024 0099     		ldr	r1, [sp]	@ tmp124, page_addr
 154 0026 8A18     		adds	r2, r1, r2	@ D.5325, tmp124, D.5324
 155 0028 1268     		ldr	r2, [r2]	@ D.5324, *_12
 156 002a 1A60     		str	r2, [r3]	@ D.5324, *_8
  81:src/flash_program.c **** 	{
 157              		.loc 1 81 0 discriminator 3
 158 002c 0E23     		movs	r3, #14	@ tmp125,
 159 002e 6B44     		add	r3, r3, sp	@ tmp125,
 160 0030 1A88     		ldrh	r2, [r3]	@ D.5326, i
 161 0032 0E23     		movs	r3, #14	@ tmp126,
 162 0034 6B44     		add	r3, r3, sp	@ tmp126,
 163 0036 0132     		adds	r2, r2, #1	@ tmp127,
 164 0038 1A80     		strh	r2, [r3]	@ tmp128, i
 165              	.L8:
  81:src/flash_program.c **** 	{
 166              		.loc 1 81 0 is_stmt 0 discriminator 1
 167 003a 0E23     		movs	r3, #14	@ tmp129,
 168 003c 6B44     		add	r3, r3, sp	@ tmp129,
 169 003e 1B88     		ldrh	r3, [r3]	@ tmp130, i
 170 0040 FE2B     		cmp	r3, #254	@ tmp130,
 171 0042 E5D9     		bls	.L9	@,
  84:src/flash_program.c **** 	}
  85:src/flash_program.c **** }
 172              		.loc 1 85 0 is_stmt 1
 173 0044 C046     		nop
 174 0046 04B0     		add	sp, sp, #16	@,,
 175              		@ sp needed	@
 176 0048 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE21:
 179              		.size	BackupPage, .-BackupPage
 180 004a C046     		.section	.text.ErasePage,"ax",%progbits
 181              		.align	2
 182              		.global	ErasePage
 183              		.code	16
 184              		.thumb_func
 185              		.type	ErasePage, %function
 186              	ErasePage:
 187              	.LFB22:
  86:src/flash_program.c **** 
  87:src/flash_program.c **** void ErasePage(uint32_t p_addr, unsigned char with_lock)
  88:src/flash_program.c **** {
 188              		.loc 1 88 0
 189              		.cfi_startproc
 190 0000 00B5     		push	{lr}	@
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 14, -4
 194 0002 83B0     		sub	sp, sp, #12	@,,
 195              	.LCFI4:
ARM GAS  /tmp/ccTGK1Aa.s 			page 6


 196              		.cfi_def_cfa_offset 16
 197 0004 0190     		str	r0, [sp, #4]	@ p_addr, p_addr
 198 0006 0A00     		movs	r2, r1	@ tmp110, with_lock
 199 0008 6B46     		mov	r3, sp	@ tmp116,
 200 000a 0333     		adds	r3, r3, #3	@ tmp111,
 201 000c 1A70     		strb	r2, [r3]	@ tmp112, with_lock
  89:src/flash_program.c **** 	FLASH_Unlock();
 202              		.loc 1 89 0
 203 000e FFF7FEFF 		bl	FLASH_Unlock	@
  90:src/flash_program.c **** 	FLASH_ErasePage(p_addr);
 204              		.loc 1 90 0
 205 0012 019B     		ldr	r3, [sp, #4]	@ tmp113, p_addr
 206 0014 1800     		movs	r0, r3	@, tmp113
 207 0016 FFF7FEFF 		bl	FLASH_ErasePage	@
  91:src/flash_program.c **** 	if (with_lock)
 208              		.loc 1 91 0
 209 001a 6B46     		mov	r3, sp	@ tmp117,
 210 001c 0333     		adds	r3, r3, #3	@ tmp114,
 211 001e 1B78     		ldrb	r3, [r3]	@ tmp115, with_lock
 212 0020 002B     		cmp	r3, #0	@ tmp115,
 213 0022 01D0     		beq	.L12	@,
  92:src/flash_program.c **** 		FLASH_Lock();
 214              		.loc 1 92 0
 215 0024 FFF7FEFF 		bl	FLASH_Lock	@
 216              	.L12:
  93:src/flash_program.c **** }
 217              		.loc 1 93 0
 218 0028 C046     		nop
 219 002a 03B0     		add	sp, sp, #12	@,,
 220              		@ sp needed	@
 221 002c 00BD     		pop	{pc}
 222              		.cfi_endproc
 223              	.LFE22:
 224              		.size	ErasePage, .-ErasePage
 225 002e C046     		.section	.text.FLASH_Unlock,"ax",%progbits
 226              		.align	2
 227              		.global	FLASH_Unlock
 228              		.code	16
 229              		.thumb_func
 230              		.type	FLASH_Unlock, %function
 231              	FLASH_Unlock:
 232              	.LFB23:
  94:src/flash_program.c **** 
  95:src/flash_program.c **** /**
  96:src/flash_program.c ****   * @brief  Unlocks the FLASH control register and program memory access.
  97:src/flash_program.c ****   * @param  None
  98:src/flash_program.c ****   * @retval None
  99:src/flash_program.c ****   */
 100:src/flash_program.c **** void FLASH_Unlock(void)
 101:src/flash_program.c **** {
 233              		.loc 1 101 0
 234              		.cfi_startproc
 102:src/flash_program.c ****   if((FLASH->CR & FLASH_CR_LOCK) != RESET)
 235              		.loc 1 102 0
 236 0000 064B     		ldr	r3, .L16	@ D.5327,
 237 0002 1B69     		ldr	r3, [r3, #16]	@ D.5328, _2->CR
 238 0004 8022     		movs	r2, #128	@ tmp115,
ARM GAS  /tmp/ccTGK1Aa.s 			page 7


 239 0006 1340     		ands	r3, r2	@ D.5328, tmp115
 240 0008 05D0     		beq	.L15	@,
 103:src/flash_program.c ****   {
 104:src/flash_program.c ****     /* Unlocking the program memory access */
 105:src/flash_program.c ****     FLASH->KEYR = FLASH_FKEY1;
 241              		.loc 1 105 0
 242 000a 044B     		ldr	r3, .L16	@ D.5327,
 243 000c 044A     		ldr	r2, .L16+4	@ tmp116,
 244 000e 5A60     		str	r2, [r3, #4]	@ tmp116, _6->KEYR
 106:src/flash_program.c ****     FLASH->KEYR = FLASH_FKEY2;
 245              		.loc 1 106 0
 246 0010 024B     		ldr	r3, .L16	@ D.5327,
 247 0012 044A     		ldr	r2, .L16+8	@ tmp117,
 248 0014 5A60     		str	r2, [r3, #4]	@ tmp117, _8->KEYR
 249              	.L15:
 107:src/flash_program.c ****   }
 108:src/flash_program.c **** }
 250              		.loc 1 108 0
 251 0016 C046     		nop
 252              		@ sp needed	@
 253 0018 7047     		bx	lr
 254              	.L17:
 255 001a C046     		.align	2
 256              	.L16:
 257 001c 00200240 		.word	1073881088
 258 0020 23016745 		.word	1164378403
 259 0024 AB89EFCD 		.word	-839939669
 260              		.cfi_endproc
 261              	.LFE23:
 262              		.size	FLASH_Unlock, .-FLASH_Unlock
 263              		.section	.text.FLASH_ErasePage,"ax",%progbits
 264              		.align	2
 265              		.global	FLASH_ErasePage
 266              		.code	16
 267              		.thumb_func
 268              		.type	FLASH_ErasePage, %function
 269              	FLASH_ErasePage:
 270              	.LFB24:
 109:src/flash_program.c **** 
 110:src/flash_program.c **** /**
 111:src/flash_program.c ****   * @brief  Erases a specified page in program memory.
 112:src/flash_program.c ****   * @note   To correctly run this function, the FLASH_Unlock() function must be called before.
 113:src/flash_program.c ****   * @note   Call the FLASH_Lock() to disable the flash memory access (recommended
 114:src/flash_program.c ****   *         to protect the FLASH memory against possible unwanted operation)
 115:src/flash_program.c ****   * @param  Page_Address: The page address in program memory to be erased.
 116:src/flash_program.c ****   * @note   A Page is erased in the Program memory only if the address to load
 117:src/flash_program.c ****   *         is the start address of a page (multiple of 1024 bytes).
 118:src/flash_program.c ****   * @retval FLASH Status: The returned value can be:
 119:src/flash_program.c ****   *         FLASH_ERROR_PROGRAM, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 120:src/flash_program.c ****   */
 121:src/flash_program.c **** FLASH_Status FLASH_ErasePage(uint32_t Page_Address)
 122:src/flash_program.c **** {
 271              		.loc 1 122 0
 272              		.cfi_startproc
 273 0000 10B5     		push	{r4, lr}	@
 274              	.LCFI5:
 275              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccTGK1Aa.s 			page 8


 276              		.cfi_offset 4, -8
 277              		.cfi_offset 14, -4
 278 0002 84B0     		sub	sp, sp, #16	@,,
 279              	.LCFI6:
 280              		.cfi_def_cfa_offset 24
 281 0004 0190     		str	r0, [sp, #4]	@ Page_Address, Page_Address
 123:src/flash_program.c ****   FLASH_Status status = FLASH_COMPLETE;
 282              		.loc 1 123 0
 283 0006 0F23     		movs	r3, #15	@ tmp125,
 284 0008 6B44     		add	r3, r3, sp	@ tmp125,
 285 000a 0422     		movs	r2, #4	@ tmp126,
 286 000c 1A70     		strb	r2, [r3]	@ tmp127, status
 124:src/flash_program.c **** 
 125:src/flash_program.c ****   /* Wait for last operation to be completed */
 126:src/flash_program.c ****   status = FLASH_WaitForLastOperation(FLASH_ER_PRG_TIMEOUT);
 287              		.loc 1 126 0
 288 000e 0F24     		movs	r4, #15	@ tmp128,
 289 0010 6C44     		add	r4, r4, sp	@ tmp128,
 290 0012 B023     		movs	r3, #176	@ tmp147,
 291 0014 1B03     		lsls	r3, r3, #12	@ tmp129, tmp147,
 292 0016 1800     		movs	r0, r3	@, tmp129
 293 0018 FFF7FEFF 		bl	FLASH_WaitForLastOperation	@
 294 001c 0300     		movs	r3, r0	@ tmp130,
 295 001e 2370     		strb	r3, [r4]	@ tmp132, status
 127:src/flash_program.c **** 
 128:src/flash_program.c ****   if(status == FLASH_COMPLETE)
 296              		.loc 1 128 0
 297 0020 0F23     		movs	r3, #15	@ tmp133,
 298 0022 6B44     		add	r3, r3, sp	@ tmp133,
 299 0024 1B78     		ldrb	r3, [r3]	@ tmp134, status
 300 0026 042B     		cmp	r3, #4	@ tmp134,
 301 0028 1DD1     		bne	.L19	@,
 129:src/flash_program.c ****   {
 130:src/flash_program.c ****     /* If the previous operation is completed, proceed to erase the page */
 131:src/flash_program.c ****     FLASH->CR |= FLASH_CR_PER;
 302              		.loc 1 131 0
 303 002a 124B     		ldr	r3, .L21	@ D.5329,
 304 002c 114A     		ldr	r2, .L21	@ D.5329,
 305 002e 1269     		ldr	r2, [r2, #16]	@ D.5330, _8->CR
 306 0030 0221     		movs	r1, #2	@ tmp135,
 307 0032 0A43     		orrs	r2, r1	@ D.5330, tmp135
 308 0034 1A61     		str	r2, [r3, #16]	@ D.5330, _7->CR
 132:src/flash_program.c ****     FLASH->AR  = Page_Address;
 309              		.loc 1 132 0
 310 0036 0F4B     		ldr	r3, .L21	@ D.5329,
 311 0038 019A     		ldr	r2, [sp, #4]	@ tmp136, Page_Address
 312 003a 5A61     		str	r2, [r3, #20]	@ tmp136, _12->AR
 133:src/flash_program.c ****     FLASH->CR |= FLASH_CR_STRT;
 313              		.loc 1 133 0
 314 003c 0D4B     		ldr	r3, .L21	@ D.5329,
 315 003e 0D4A     		ldr	r2, .L21	@ D.5329,
 316 0040 1269     		ldr	r2, [r2, #16]	@ D.5330, _16->CR
 317 0042 4021     		movs	r1, #64	@ tmp137,
 318 0044 0A43     		orrs	r2, r1	@ D.5330, tmp137
 319 0046 1A61     		str	r2, [r3, #16]	@ D.5330, _15->CR
 134:src/flash_program.c **** 
 135:src/flash_program.c ****     /* Wait for last operation to be completed */
ARM GAS  /tmp/ccTGK1Aa.s 			page 9


 136:src/flash_program.c ****     status = FLASH_WaitForLastOperation(FLASH_ER_PRG_TIMEOUT);
 320              		.loc 1 136 0
 321 0048 0F24     		movs	r4, #15	@ tmp138,
 322 004a 6C44     		add	r4, r4, sp	@ tmp138,
 323 004c B023     		movs	r3, #176	@ tmp146,
 324 004e 1B03     		lsls	r3, r3, #12	@ tmp139, tmp146,
 325 0050 1800     		movs	r0, r3	@, tmp139
 326 0052 FFF7FEFF 		bl	FLASH_WaitForLastOperation	@
 327 0056 0300     		movs	r3, r0	@ tmp140,
 328 0058 2370     		strb	r3, [r4]	@ tmp142, status
 137:src/flash_program.c **** 
 138:src/flash_program.c ****     /* Disable the PER Bit */
 139:src/flash_program.c ****     FLASH->CR &= ~FLASH_CR_PER;
 329              		.loc 1 139 0
 330 005a 064B     		ldr	r3, .L21	@ D.5329,
 331 005c 054A     		ldr	r2, .L21	@ D.5329,
 332 005e 1269     		ldr	r2, [r2, #16]	@ D.5330, _23->CR
 333 0060 0221     		movs	r1, #2	@ tmp143,
 334 0062 8A43     		bics	r2, r1	@ D.5330, tmp143
 335 0064 1A61     		str	r2, [r3, #16]	@ D.5330, _22->CR
 336              	.L19:
 140:src/flash_program.c ****   }
 141:src/flash_program.c **** 
 142:src/flash_program.c ****   /* Return the Erase Status */
 143:src/flash_program.c ****   return status;
 337              		.loc 1 143 0
 338 0066 0F23     		movs	r3, #15	@ tmp144,
 339 0068 6B44     		add	r3, r3, sp	@ tmp144,
 340 006a 1B78     		ldrb	r3, [r3]	@ D.5331, status
 144:src/flash_program.c **** }
 341              		.loc 1 144 0
 342 006c 1800     		movs	r0, r3	@, <retval>
 343 006e 04B0     		add	sp, sp, #16	@,,
 344              		@ sp needed	@
 345 0070 10BD     		pop	{r4, pc}
 346              	.L22:
 347 0072 C046     		.align	2
 348              	.L21:
 349 0074 00200240 		.word	1073881088
 350              		.cfi_endproc
 351              	.LFE24:
 352              		.size	FLASH_ErasePage, .-FLASH_ErasePage
 353              		.section	.text.FLASH_Lock,"ax",%progbits
 354              		.align	2
 355              		.global	FLASH_Lock
 356              		.code	16
 357              		.thumb_func
 358              		.type	FLASH_Lock, %function
 359              	FLASH_Lock:
 360              	.LFB25:
 145:src/flash_program.c **** 
 146:src/flash_program.c **** /**
 147:src/flash_program.c ****   * @brief  Locks the Program memory access.
 148:src/flash_program.c ****   * @param  None
 149:src/flash_program.c ****   * @retval None
 150:src/flash_program.c ****   */
 151:src/flash_program.c **** void FLASH_Lock(void)
ARM GAS  /tmp/ccTGK1Aa.s 			page 10


 152:src/flash_program.c **** {
 361              		.loc 1 152 0
 362              		.cfi_startproc
 153:src/flash_program.c ****   /* Set the LOCK Bit to lock the FLASH control register and program memory access */
 154:src/flash_program.c ****   FLASH->CR |= FLASH_CR_LOCK;
 363              		.loc 1 154 0
 364 0000 034B     		ldr	r3, .L24	@ D.5332,
 365 0002 034A     		ldr	r2, .L24	@ D.5332,
 366 0004 1269     		ldr	r2, [r2, #16]	@ D.5333, _2->CR
 367 0006 8021     		movs	r1, #128	@ tmp114,
 368 0008 0A43     		orrs	r2, r1	@ D.5333, tmp114
 369 000a 1A61     		str	r2, [r3, #16]	@ D.5333, _1->CR
 155:src/flash_program.c **** }
 370              		.loc 1 155 0
 371 000c C046     		nop
 372              		@ sp needed	@
 373 000e 7047     		bx	lr
 374              	.L25:
 375              		.align	2
 376              	.L24:
 377 0010 00200240 		.word	1073881088
 378              		.cfi_endproc
 379              	.LFE25:
 380              		.size	FLASH_Lock, .-FLASH_Lock
 381              		.section	.text.FLASH_ProgramWord,"ax",%progbits
 382              		.align	2
 383              		.global	FLASH_ProgramWord
 384              		.code	16
 385              		.thumb_func
 386              		.type	FLASH_ProgramWord, %function
 387              	FLASH_ProgramWord:
 388              	.LFB26:
 156:src/flash_program.c **** 
 157:src/flash_program.c **** /**
 158:src/flash_program.c ****   * @brief  Programs a word at a specified address.
 159:src/flash_program.c ****   * @note   To correctly run this function, the FLASH_Unlock() function must be called before.
 160:src/flash_program.c ****   * @note   Call the FLASH_Lock() to disable the flash memory access (recommended
 161:src/flash_program.c ****   *         to protect the FLASH memory against possible unwanted operation)
 162:src/flash_program.c ****   * @param  Address: specifies the address to be programmed.
 163:src/flash_program.c ****   * @param  Data: specifies the data to be programmed.
 164:src/flash_program.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 165:src/flash_program.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 166:src/flash_program.c ****   */
 167:src/flash_program.c **** FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
 168:src/flash_program.c **** {
 389              		.loc 1 168 0
 390              		.cfi_startproc
 391 0000 10B5     		push	{r4, lr}	@
 392              	.LCFI7:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 4, -8
 395              		.cfi_offset 14, -4
 396 0002 84B0     		sub	sp, sp, #16	@,,
 397              	.LCFI8:
 398              		.cfi_def_cfa_offset 24
 399 0004 0190     		str	r0, [sp, #4]	@ Address, Address
 400 0006 0091     		str	r1, [sp]	@ Data, Data
ARM GAS  /tmp/ccTGK1Aa.s 			page 11


 169:src/flash_program.c ****   FLASH_Status status = FLASH_COMPLETE;
 401              		.loc 1 169 0
 402 0008 0F23     		movs	r3, #15	@ tmp131,
 403 000a 6B44     		add	r3, r3, sp	@ tmp131,
 404 000c 0422     		movs	r2, #4	@ tmp132,
 405 000e 1A70     		strb	r2, [r3]	@ tmp133, status
 170:src/flash_program.c ****   __IO uint32_t tmp = 0;
 406              		.loc 1 170 0
 407 0010 0023     		movs	r3, #0	@ tmp134,
 408 0012 0293     		str	r3, [sp, #8]	@ tmp134, tmp
 171:src/flash_program.c **** 
 172:src/flash_program.c ****     /* Wait for last operation to be completed */
 173:src/flash_program.c ****   status = FLASH_WaitForLastOperation(FLASH_ER_PRG_TIMEOUT);
 409              		.loc 1 173 0
 410 0014 0F24     		movs	r4, #15	@ tmp135,
 411 0016 6C44     		add	r4, r4, sp	@ tmp135,
 412 0018 B023     		movs	r3, #176	@ tmp167,
 413 001a 1B03     		lsls	r3, r3, #12	@ tmp136, tmp167,
 414 001c 1800     		movs	r0, r3	@, tmp136
 415 001e FFF7FEFF 		bl	FLASH_WaitForLastOperation	@
 416 0022 0300     		movs	r3, r0	@ tmp137,
 417 0024 2370     		strb	r3, [r4]	@ tmp139, status
 174:src/flash_program.c **** 
 175:src/flash_program.c ****   if(status == FLASH_COMPLETE)
 418              		.loc 1 175 0
 419 0026 0F23     		movs	r3, #15	@ tmp140,
 420 0028 6B44     		add	r3, r3, sp	@ tmp140,
 421 002a 1B78     		ldrb	r3, [r3]	@ tmp141, status
 422 002c 042B     		cmp	r3, #4	@ tmp141,
 423 002e 36D1     		bne	.L27	@,
 176:src/flash_program.c ****   {
 177:src/flash_program.c ****     /* If the previous operation is completed, proceed to program the new first
 178:src/flash_program.c ****     half word */
 179:src/flash_program.c ****     FLASH->CR |= FLASH_CR_PG;
 424              		.loc 1 179 0
 425 0030 1E4B     		ldr	r3, .L30	@ D.5334,
 426 0032 1E4A     		ldr	r2, .L30	@ D.5334,
 427 0034 1269     		ldr	r2, [r2, #16]	@ D.5335, _9->CR
 428 0036 0121     		movs	r1, #1	@ tmp142,
 429 0038 0A43     		orrs	r2, r1	@ D.5335, tmp142
 430 003a 1A61     		str	r2, [r3, #16]	@ D.5335, _8->CR
 180:src/flash_program.c **** 
 181:src/flash_program.c ****     *(__IO uint16_t*)Address = (uint16_t)Data;
 431              		.loc 1 181 0
 432 003c 019B     		ldr	r3, [sp, #4]	@ D.5336, Address
 433 003e 009A     		ldr	r2, [sp]	@ tmp144, Data
 434 0040 92B2     		uxth	r2, r2	@ D.5337, tmp143
 435 0042 1A80     		strh	r2, [r3]	@ tmp145, *_14
 182:src/flash_program.c **** 
 183:src/flash_program.c ****     /* Wait for last operation to be completed */
 184:src/flash_program.c ****     status = FLASH_WaitForLastOperation(FLASH_ER_PRG_TIMEOUT);
 436              		.loc 1 184 0
 437 0044 0F24     		movs	r4, #15	@ tmp146,
 438 0046 6C44     		add	r4, r4, sp	@ tmp146,
 439 0048 B023     		movs	r3, #176	@ tmp166,
 440 004a 1B03     		lsls	r3, r3, #12	@ tmp147, tmp166,
 441 004c 1800     		movs	r0, r3	@, tmp147
ARM GAS  /tmp/ccTGK1Aa.s 			page 12


 442 004e FFF7FEFF 		bl	FLASH_WaitForLastOperation	@
 443 0052 0300     		movs	r3, r0	@ tmp148,
 444 0054 2370     		strb	r3, [r4]	@ tmp150, status
 185:src/flash_program.c **** 
 186:src/flash_program.c ****     if(status == FLASH_COMPLETE)
 445              		.loc 1 186 0
 446 0056 0F23     		movs	r3, #15	@ tmp151,
 447 0058 6B44     		add	r3, r3, sp	@ tmp151,
 448 005a 1B78     		ldrb	r3, [r3]	@ tmp152, status
 449 005c 042B     		cmp	r3, #4	@ tmp152,
 450 005e 18D1     		bne	.L28	@,
 187:src/flash_program.c ****     {
 188:src/flash_program.c ****       /* If the previous operation is completed, proceed to program the new second
 189:src/flash_program.c ****       half word */
 190:src/flash_program.c ****       tmp = Address + 2;
 451              		.loc 1 190 0
 452 0060 019B     		ldr	r3, [sp, #4]	@ tmp153, Address
 453 0062 0233     		adds	r3, r3, #2	@ D.5335,
 454 0064 0293     		str	r3, [sp, #8]	@ D.5335, tmp
 191:src/flash_program.c **** 
 192:src/flash_program.c ****       *(__IO uint16_t*) tmp = Data >> 16;
 455              		.loc 1 192 0
 456 0066 029B     		ldr	r3, [sp, #8]	@ D.5335, tmp
 457 0068 1A00     		movs	r2, r3	@ D.5336, D.5335
 458 006a 009B     		ldr	r3, [sp]	@ tmp154, Data
 459 006c 1B0C     		lsrs	r3, r3, #16	@ D.5335, tmp154,
 460 006e 9BB2     		uxth	r3, r3	@ D.5337, D.5335
 461 0070 1380     		strh	r3, [r2]	@ tmp155, *_23
 193:src/flash_program.c **** 
 194:src/flash_program.c ****       /* Wait for last operation to be completed */
 195:src/flash_program.c ****       status = FLASH_WaitForLastOperation(FLASH_ER_PRG_TIMEOUT);
 462              		.loc 1 195 0
 463 0072 0F24     		movs	r4, #15	@ tmp156,
 464 0074 6C44     		add	r4, r4, sp	@ tmp156,
 465 0076 B023     		movs	r3, #176	@ tmp165,
 466 0078 1B03     		lsls	r3, r3, #12	@ tmp157, tmp165,
 467 007a 1800     		movs	r0, r3	@, tmp157
 468 007c FFF7FEFF 		bl	FLASH_WaitForLastOperation	@
 469 0080 0300     		movs	r3, r0	@ tmp158,
 470 0082 2370     		strb	r3, [r4]	@ tmp160, status
 196:src/flash_program.c **** 
 197:src/flash_program.c ****       /* Disable the PG Bit */
 198:src/flash_program.c ****       FLASH->CR &= ~FLASH_CR_PG;
 471              		.loc 1 198 0
 472 0084 094B     		ldr	r3, .L30	@ D.5334,
 473 0086 094A     		ldr	r2, .L30	@ D.5334,
 474 0088 1269     		ldr	r2, [r2, #16]	@ D.5335, _30->CR
 475 008a 0121     		movs	r1, #1	@ tmp161,
 476 008c 8A43     		bics	r2, r1	@ D.5335, tmp161
 477 008e 1A61     		str	r2, [r3, #16]	@ D.5335, _29->CR
 478 0090 05E0     		b	.L27	@
 479              	.L28:
 199:src/flash_program.c ****     }
 200:src/flash_program.c ****     else
 201:src/flash_program.c ****     {
 202:src/flash_program.c ****       /* Disable the PG Bit */
 203:src/flash_program.c ****       FLASH->CR &= ~FLASH_CR_PG;
ARM GAS  /tmp/ccTGK1Aa.s 			page 13


 480              		.loc 1 203 0
 481 0092 064B     		ldr	r3, .L30	@ D.5334,
 482 0094 054A     		ldr	r2, .L30	@ D.5334,
 483 0096 1269     		ldr	r2, [r2, #16]	@ D.5335, _35->CR
 484 0098 0121     		movs	r1, #1	@ tmp162,
 485 009a 8A43     		bics	r2, r1	@ D.5335, tmp162
 486 009c 1A61     		str	r2, [r3, #16]	@ D.5335, _34->CR
 487              	.L27:
 204:src/flash_program.c ****     }
 205:src/flash_program.c ****   }
 206:src/flash_program.c **** 
 207:src/flash_program.c ****   /* Return the Program Status */
 208:src/flash_program.c ****   return status;
 488              		.loc 1 208 0
 489 009e 0F23     		movs	r3, #15	@ tmp163,
 490 00a0 6B44     		add	r3, r3, sp	@ tmp163,
 491 00a2 1B78     		ldrb	r3, [r3]	@ D.5338, status
 209:src/flash_program.c **** }
 492              		.loc 1 209 0
 493 00a4 1800     		movs	r0, r3	@, <retval>
 494 00a6 04B0     		add	sp, sp, #16	@,,
 495              		@ sp needed	@
 496 00a8 10BD     		pop	{r4, pc}
 497              	.L31:
 498 00aa C046     		.align	2
 499              	.L30:
 500 00ac 00200240 		.word	1073881088
 501              		.cfi_endproc
 502              	.LFE26:
 503              		.size	FLASH_ProgramWord, .-FLASH_ProgramWord
 504              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 505              		.align	2
 506              		.global	FLASH_WaitForLastOperation
 507              		.code	16
 508              		.thumb_func
 509              		.type	FLASH_WaitForLastOperation, %function
 510              	FLASH_WaitForLastOperation:
 511              	.LFB27:
 210:src/flash_program.c **** 
 211:src/flash_program.c **** /**
 212:src/flash_program.c ****   * @brief  Waits for a FLASH operation to complete or a TIMEOUT to occur.
 213:src/flash_program.c ****   * @param  Timeout: FLASH programming Timeout
 214:src/flash_program.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY,
 215:src/flash_program.c ****   *         FLASH_ERROR_PROGRAM, FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 216:src/flash_program.c ****   */
 217:src/flash_program.c **** FLASH_Status FLASH_WaitForLastOperation(uint32_t Timeout)
 218:src/flash_program.c **** {
 512              		.loc 1 218 0
 513              		.cfi_startproc
 514 0000 10B5     		push	{r4, lr}	@
 515              	.LCFI9:
 516              		.cfi_def_cfa_offset 8
 517              		.cfi_offset 4, -8
 518              		.cfi_offset 14, -4
 519 0002 84B0     		sub	sp, sp, #16	@,,
 520              	.LCFI10:
 521              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccTGK1Aa.s 			page 14


 522 0004 0190     		str	r0, [sp, #4]	@ Timeout, Timeout
 219:src/flash_program.c ****   FLASH_Status status = FLASH_COMPLETE;
 523              		.loc 1 219 0
 524 0006 0F23     		movs	r3, #15	@ tmp112,
 525 0008 6B44     		add	r3, r3, sp	@ tmp112,
 526 000a 0422     		movs	r2, #4	@ tmp113,
 527 000c 1A70     		strb	r2, [r3]	@ tmp114, status
 220:src/flash_program.c **** 
 221:src/flash_program.c ****   /* Check for the FLASH Status */
 222:src/flash_program.c ****   status = FLASH_GetStatus();
 528              		.loc 1 222 0
 529 000e 0F24     		movs	r4, #15	@ tmp115,
 530 0010 6C44     		add	r4, r4, sp	@ tmp115,
 531 0012 FFF7FEFF 		bl	FLASH_GetStatus	@
 532 0016 0300     		movs	r3, r0	@ tmp116,
 533 0018 2370     		strb	r3, [r4]	@ tmp118, status
 223:src/flash_program.c **** 
 224:src/flash_program.c ****   /* Wait for a FLASH operation to complete or a TIMEOUT to occur */
 225:src/flash_program.c ****   while((status == FLASH_BUSY) && (Timeout != 0x00))
 534              		.loc 1 225 0
 535 001a 08E0     		b	.L33	@
 536              	.L35:
 226:src/flash_program.c ****   {
 227:src/flash_program.c ****     status = FLASH_GetStatus();
 537              		.loc 1 227 0
 538 001c 0F24     		movs	r4, #15	@ tmp119,
 539 001e 6C44     		add	r4, r4, sp	@ tmp119,
 540 0020 FFF7FEFF 		bl	FLASH_GetStatus	@
 541 0024 0300     		movs	r3, r0	@ tmp120,
 542 0026 2370     		strb	r3, [r4]	@ tmp122, status
 228:src/flash_program.c ****     Timeout--;
 543              		.loc 1 228 0
 544 0028 019B     		ldr	r3, [sp, #4]	@ tmp124, Timeout
 545 002a 013B     		subs	r3, r3, #1	@ tmp123,
 546 002c 0193     		str	r3, [sp, #4]	@ tmp123, Timeout
 547              	.L33:
 225:src/flash_program.c ****   {
 548              		.loc 1 225 0
 549 002e 0F23     		movs	r3, #15	@ tmp125,
 550 0030 6B44     		add	r3, r3, sp	@ tmp125,
 551 0032 1B78     		ldrb	r3, [r3]	@ tmp126, status
 552 0034 012B     		cmp	r3, #1	@ tmp126,
 553 0036 02D1     		bne	.L34	@,
 225:src/flash_program.c ****   {
 554              		.loc 1 225 0 is_stmt 0 discriminator 1
 555 0038 019B     		ldr	r3, [sp, #4]	@ tmp127, Timeout
 556 003a 002B     		cmp	r3, #0	@ tmp127,
 557 003c EED1     		bne	.L35	@,
 558              	.L34:
 229:src/flash_program.c ****   }
 230:src/flash_program.c **** 
 231:src/flash_program.c ****   if(Timeout == 0x00 )
 559              		.loc 1 231 0 is_stmt 1
 560 003e 019B     		ldr	r3, [sp, #4]	@ tmp128, Timeout
 561 0040 002B     		cmp	r3, #0	@ tmp128,
 562 0042 03D1     		bne	.L36	@,
 232:src/flash_program.c ****   {
ARM GAS  /tmp/ccTGK1Aa.s 			page 15


 233:src/flash_program.c ****     status = FLASH_TIMEOUT;
 563              		.loc 1 233 0
 564 0044 0F23     		movs	r3, #15	@ tmp129,
 565 0046 6B44     		add	r3, r3, sp	@ tmp129,
 566 0048 0522     		movs	r2, #5	@ tmp130,
 567 004a 1A70     		strb	r2, [r3]	@ tmp131, status
 568              	.L36:
 234:src/flash_program.c ****   }
 235:src/flash_program.c ****   /* Return the operation status */
 236:src/flash_program.c ****   return status;
 569              		.loc 1 236 0
 570 004c 0F23     		movs	r3, #15	@ tmp132,
 571 004e 6B44     		add	r3, r3, sp	@ tmp132,
 572 0050 1B78     		ldrb	r3, [r3]	@ D.5339, status
 237:src/flash_program.c **** }
 573              		.loc 1 237 0
 574 0052 1800     		movs	r0, r3	@, <retval>
 575 0054 04B0     		add	sp, sp, #16	@,,
 576              		@ sp needed	@
 577 0056 10BD     		pop	{r4, pc}
 578              		.cfi_endproc
 579              	.LFE27:
 580              		.size	FLASH_WaitForLastOperation, .-FLASH_WaitForLastOperation
 581              		.section	.text.FLASH_GetStatus,"ax",%progbits
 582              		.align	2
 583              		.global	FLASH_GetStatus
 584              		.code	16
 585              		.thumb_func
 586              		.type	FLASH_GetStatus, %function
 587              	FLASH_GetStatus:
 588              	.LFB28:
 238:src/flash_program.c **** 
 239:src/flash_program.c **** /**
 240:src/flash_program.c ****   * @brief  Returns the FLASH Status.
 241:src/flash_program.c ****   * @param  None
 242:src/flash_program.c ****   * @retval FLASH Status: The returned value can be:
 243:src/flash_program.c ****   *         FLASH_BUSY, FLASH_ERROR_PROGRAM, FLASH_ERROR_WRP or FLASH_COMPLETE.
 244:src/flash_program.c ****   */
 245:src/flash_program.c **** FLASH_Status FLASH_GetStatus(void)
 246:src/flash_program.c **** {
 589              		.loc 1 246 0
 590              		.cfi_startproc
 591 0000 82B0     		sub	sp, sp, #8	@,,
 592              	.LCFI11:
 593              		.cfi_def_cfa_offset 8
 247:src/flash_program.c ****   FLASH_Status FLASHstatus = FLASH_COMPLETE;
 594              		.loc 1 247 0
 595 0002 6B46     		mov	r3, sp	@ tmp141,
 596 0004 0733     		adds	r3, r3, #7	@ tmp121,
 597 0006 0422     		movs	r2, #4	@ tmp122,
 598 0008 1A70     		strb	r2, [r3]	@ tmp123, FLASHstatus
 248:src/flash_program.c **** 
 249:src/flash_program.c ****   if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY)
 599              		.loc 1 249 0
 600 000a 144B     		ldr	r3, .L44	@ D.5340,
 601 000c DB68     		ldr	r3, [r3, #12]	@ D.5341, _3->SR
 602 000e 0122     		movs	r2, #1	@ tmp124,
ARM GAS  /tmp/ccTGK1Aa.s 			page 16


 603 0010 1340     		ands	r3, r2	@ D.5341, tmp124
 604 0012 04D0     		beq	.L39	@,
 250:src/flash_program.c ****   {
 251:src/flash_program.c ****     FLASHstatus = FLASH_BUSY;
 605              		.loc 1 251 0
 606 0014 6B46     		mov	r3, sp	@ tmp142,
 607 0016 0733     		adds	r3, r3, #7	@ tmp125,
 608 0018 0122     		movs	r2, #1	@ tmp126,
 609 001a 1A70     		strb	r2, [r3]	@ tmp127, FLASHstatus
 610 001c 17E0     		b	.L40	@
 611              	.L39:
 252:src/flash_program.c ****   }
 253:src/flash_program.c ****   else
 254:src/flash_program.c ****   {
 255:src/flash_program.c ****     if((FLASH->SR & (uint32_t)FLASH_FLAG_WRPERR)!= (uint32_t)0x00)
 612              		.loc 1 255 0
 613 001e 0F4B     		ldr	r3, .L44	@ D.5340,
 614 0020 DB68     		ldr	r3, [r3, #12]	@ D.5341, _8->SR
 615 0022 1022     		movs	r2, #16	@ tmp128,
 616 0024 1340     		ands	r3, r2	@ D.5341, tmp128
 617 0026 04D0     		beq	.L41	@,
 256:src/flash_program.c ****     {
 257:src/flash_program.c ****       FLASHstatus = FLASH_ERROR_WRP;
 618              		.loc 1 257 0
 619 0028 6B46     		mov	r3, sp	@ tmp143,
 620 002a 0733     		adds	r3, r3, #7	@ tmp129,
 621 002c 0222     		movs	r2, #2	@ tmp130,
 622 002e 1A70     		strb	r2, [r3]	@ tmp131, FLASHstatus
 623 0030 0DE0     		b	.L40	@
 624              	.L41:
 258:src/flash_program.c ****     }
 259:src/flash_program.c ****     else
 260:src/flash_program.c ****     {
 261:src/flash_program.c ****       if((FLASH->SR & (uint32_t)(FLASH_SR_PGERR)) != (uint32_t)0x00)
 625              		.loc 1 261 0
 626 0032 0A4B     		ldr	r3, .L44	@ D.5340,
 627 0034 DB68     		ldr	r3, [r3, #12]	@ D.5341, _12->SR
 628 0036 0422     		movs	r2, #4	@ tmp132,
 629 0038 1340     		ands	r3, r2	@ D.5341, tmp132
 630 003a 04D0     		beq	.L42	@,
 262:src/flash_program.c ****       {
 263:src/flash_program.c ****         FLASHstatus = FLASH_ERROR_PROGRAM;
 631              		.loc 1 263 0
 632 003c 6B46     		mov	r3, sp	@ tmp144,
 633 003e 0733     		adds	r3, r3, #7	@ tmp133,
 634 0040 0322     		movs	r2, #3	@ tmp134,
 635 0042 1A70     		strb	r2, [r3]	@ tmp135, FLASHstatus
 636 0044 03E0     		b	.L40	@
 637              	.L42:
 264:src/flash_program.c ****       }
 265:src/flash_program.c ****       else
 266:src/flash_program.c ****       {
 267:src/flash_program.c ****         FLASHstatus = FLASH_COMPLETE;
 638              		.loc 1 267 0
 639 0046 6B46     		mov	r3, sp	@ tmp145,
 640 0048 0733     		adds	r3, r3, #7	@ tmp136,
 641 004a 0422     		movs	r2, #4	@ tmp137,
ARM GAS  /tmp/ccTGK1Aa.s 			page 17


 642 004c 1A70     		strb	r2, [r3]	@ tmp138, FLASHstatus
 643              	.L40:
 268:src/flash_program.c ****       }
 269:src/flash_program.c ****     }
 270:src/flash_program.c ****   }
 271:src/flash_program.c ****   /* Return the FLASH Status */
 272:src/flash_program.c ****   return FLASHstatus;
 644              		.loc 1 272 0
 645 004e 6B46     		mov	r3, sp	@ tmp146,
 646 0050 0733     		adds	r3, r3, #7	@ tmp139,
 647 0052 1B78     		ldrb	r3, [r3]	@ D.5342, FLASHstatus
 273:src/flash_program.c **** }
 648              		.loc 1 273 0
 649 0054 1800     		movs	r0, r3	@, <retval>
 650 0056 02B0     		add	sp, sp, #8	@,,
 651              		@ sp needed	@
 652 0058 7047     		bx	lr
 653              	.L45:
 654 005a C046     		.align	2
 655              	.L44:
 656 005c 00200240 		.word	1073881088
 657              		.cfi_endproc
 658              	.LFE28:
 659              		.size	FLASH_GetStatus, .-FLASH_GetStatus
 660              		.section	.text.WritePage,"ax",%progbits
 661              		.align	2
 662              		.global	WritePage
 663              		.code	16
 664              		.thumb_func
 665              		.type	WritePage, %function
 666              	WritePage:
 667              	.LFB29:
 274:src/flash_program.c **** 
 275:src/flash_program.c **** unsigned char WritePage(unsigned int * p, uint32_t p_addr, unsigned char with_lock)
 276:src/flash_program.c **** {
 668              		.loc 1 276 0
 669              		.cfi_startproc
 670 0000 00B5     		push	{lr}	@
 671              	.LCFI12:
 672              		.cfi_def_cfa_offset 4
 673              		.cfi_offset 14, -4
 674 0002 87B0     		sub	sp, sp, #28	@,,
 675              	.LCFI13:
 676              		.cfi_def_cfa_offset 32
 677 0004 0390     		str	r0, [sp, #12]	@ p, p
 678 0006 0291     		str	r1, [sp, #8]	@ p_addr, p_addr
 679 0008 6B46     		mov	r3, sp	@ tmp160,
 680 000a 0733     		adds	r3, r3, #7	@ tmp127,
 681 000c 1A70     		strb	r2, [r3]	@ tmp128, with_lock
 277:src/flash_program.c **** 	unsigned short i;
 278:src/flash_program.c **** 	unsigned int * p_verif;
 279:src/flash_program.c **** 
 280:src/flash_program.c **** 	p_verif = (unsigned int *) p_addr;
 682              		.loc 1 280 0
 683 000e 029B     		ldr	r3, [sp, #8]	@ tmp129, p_addr
 684 0010 0493     		str	r3, [sp, #16]	@ tmp129, p_verif
 281:src/flash_program.c **** 
ARM GAS  /tmp/ccTGK1Aa.s 			page 18


 282:src/flash_program.c **** 	for (i = 0; i < 255; i++)
 685              		.loc 1 282 0
 686 0012 1623     		movs	r3, #22	@ tmp130,
 687 0014 6B44     		add	r3, r3, sp	@ tmp130,
 688 0016 0022     		movs	r2, #0	@ tmp131,
 689 0018 1A80     		strh	r2, [r3]	@ tmp132, i
 690 001a 15E0     		b	.L47	@
 691              	.L48:
 283:src/flash_program.c **** 	{
 284:src/flash_program.c **** 		FLASH_ProgramWord(p_addr, *(p + i));
 692              		.loc 1 284 0 discriminator 3
 693 001c 1623     		movs	r3, #22	@ tmp133,
 694 001e 6B44     		add	r3, r3, sp	@ tmp133,
 695 0020 1B88     		ldrh	r3, [r3]	@ D.5344, i
 696 0022 9B00     		lsls	r3, r3, #2	@ D.5344, D.5344,
 697 0024 039A     		ldr	r2, [sp, #12]	@ tmp134, p
 698 0026 D318     		adds	r3, r2, r3	@ D.5345, tmp134, D.5344
 699 0028 1A68     		ldr	r2, [r3]	@ D.5344, *_14
 700 002a 029B     		ldr	r3, [sp, #8]	@ tmp135, p_addr
 701 002c 1100     		movs	r1, r2	@, D.5344
 702 002e 1800     		movs	r0, r3	@, tmp135
 703 0030 FFF7FEFF 		bl	FLASH_ProgramWord	@
 285:src/flash_program.c **** 		p_addr += 4;
 704              		.loc 1 285 0 discriminator 3
 705 0034 029B     		ldr	r3, [sp, #8]	@ tmp137, p_addr
 706 0036 0433     		adds	r3, r3, #4	@ tmp136,
 707 0038 0293     		str	r3, [sp, #8]	@ tmp136, p_addr
 282:src/flash_program.c **** 	{
 708              		.loc 1 282 0 discriminator 3
 709 003a 1623     		movs	r3, #22	@ tmp138,
 710 003c 6B44     		add	r3, r3, sp	@ tmp138,
 711 003e 1A88     		ldrh	r2, [r3]	@ D.5346, i
 712 0040 1623     		movs	r3, #22	@ tmp139,
 713 0042 6B44     		add	r3, r3, sp	@ tmp139,
 714 0044 0132     		adds	r2, r2, #1	@ tmp140,
 715 0046 1A80     		strh	r2, [r3]	@ tmp141, i
 716              	.L47:
 282:src/flash_program.c **** 	{
 717              		.loc 1 282 0 is_stmt 0 discriminator 1
 718 0048 1623     		movs	r3, #22	@ tmp142,
 719 004a 6B44     		add	r3, r3, sp	@ tmp142,
 720 004c 1B88     		ldrh	r3, [r3]	@ tmp143, i
 721 004e FE2B     		cmp	r3, #254	@ tmp143,
 722 0050 E4D9     		bls	.L48	@,
 286:src/flash_program.c **** 	}
 287:src/flash_program.c **** 
 288:src/flash_program.c **** 	if (with_lock)
 723              		.loc 1 288 0 is_stmt 1
 724 0052 6B46     		mov	r3, sp	@ tmp166,
 725 0054 0733     		adds	r3, r3, #7	@ tmp144,
 726 0056 1B78     		ldrb	r3, [r3]	@ tmp145, with_lock
 727 0058 002B     		cmp	r3, #0	@ tmp145,
 728 005a 01D0     		beq	.L49	@,
 289:src/flash_program.c **** 		FLASH_Lock();
 729              		.loc 1 289 0
 730 005c FFF7FEFF 		bl	FLASH_Lock	@
 731              	.L49:
ARM GAS  /tmp/ccTGK1Aa.s 			page 19


 290:src/flash_program.c **** 
 291:src/flash_program.c **** 	//verifico memoria
 292:src/flash_program.c **** 	for (i = 0; i < 255; i++)
 732              		.loc 1 292 0
 733 0060 1623     		movs	r3, #22	@ tmp146,
 734 0062 6B44     		add	r3, r3, sp	@ tmp146,
 735 0064 0022     		movs	r2, #0	@ tmp147,
 736 0066 1A80     		strh	r2, [r3]	@ tmp148, i
 737 0068 18E0     		b	.L50	@
 738              	.L53:
 293:src/flash_program.c **** 	{
 294:src/flash_program.c **** 		if (*(p_verif + i) != *(p + i))
 739              		.loc 1 294 0
 740 006a 1623     		movs	r3, #22	@ tmp149,
 741 006c 6B44     		add	r3, r3, sp	@ tmp149,
 742 006e 1B88     		ldrh	r3, [r3]	@ D.5344, i
 743 0070 9B00     		lsls	r3, r3, #2	@ D.5344, D.5344,
 744 0072 049A     		ldr	r2, [sp, #16]	@ tmp150, p_verif
 745 0074 D318     		adds	r3, r2, r3	@ D.5345, tmp150, D.5344
 746 0076 1A68     		ldr	r2, [r3]	@ D.5344, *_25
 747 0078 1623     		movs	r3, #22	@ tmp151,
 748 007a 6B44     		add	r3, r3, sp	@ tmp151,
 749 007c 1B88     		ldrh	r3, [r3]	@ D.5344, i
 750 007e 9B00     		lsls	r3, r3, #2	@ D.5344, D.5344,
 751 0080 0399     		ldr	r1, [sp, #12]	@ tmp152, p
 752 0082 CB18     		adds	r3, r1, r3	@ D.5345, tmp152, D.5344
 753 0084 1B68     		ldr	r3, [r3]	@ D.5344, *_29
 754 0086 9A42     		cmp	r2, r3	@ D.5344, D.5344
 755 0088 01D0     		beq	.L51	@,
 295:src/flash_program.c **** 			return FAILED;
 756              		.loc 1 295 0
 757 008a 0023     		movs	r3, #0	@ D.5343,
 758 008c 0CE0     		b	.L52	@
 759              	.L51:
 292:src/flash_program.c **** 	{
 760              		.loc 1 292 0 discriminator 2
 761 008e 1623     		movs	r3, #22	@ tmp153,
 762 0090 6B44     		add	r3, r3, sp	@ tmp153,
 763 0092 1A88     		ldrh	r2, [r3]	@ D.5346, i
 764 0094 1623     		movs	r3, #22	@ tmp154,
 765 0096 6B44     		add	r3, r3, sp	@ tmp154,
 766 0098 0132     		adds	r2, r2, #1	@ tmp155,
 767 009a 1A80     		strh	r2, [r3]	@ tmp156, i
 768              	.L50:
 292:src/flash_program.c **** 	{
 769              		.loc 1 292 0 is_stmt 0 discriminator 1
 770 009c 1623     		movs	r3, #22	@ tmp157,
 771 009e 6B44     		add	r3, r3, sp	@ tmp157,
 772 00a0 1B88     		ldrh	r3, [r3]	@ tmp158, i
 773 00a2 FE2B     		cmp	r3, #254	@ tmp158,
 774 00a4 E1D9     		bls	.L53	@,
 296:src/flash_program.c **** 	}
 297:src/flash_program.c **** 	return PASSED;
 775              		.loc 1 297 0 is_stmt 1
 776 00a6 0123     		movs	r3, #1	@ D.5343,
 777              	.L52:
 298:src/flash_program.c **** }
ARM GAS  /tmp/ccTGK1Aa.s 			page 20


 778              		.loc 1 298 0
 779 00a8 1800     		movs	r0, r3	@, <retval>
 780 00aa 07B0     		add	sp, sp, #28	@,,
 781              		@ sp needed	@
 782 00ac 00BD     		pop	{pc}
 783              		.cfi_endproc
 784              	.LFE29:
 785              		.size	WritePage, .-WritePage
 786 00ae C046     		.section	.text.WriteConfigurations,"ax",%progbits
 787              		.align	2
 788              		.global	WriteConfigurations
 789              		.code	16
 790              		.thumb_func
 791              		.type	WriteConfigurations, %function
 792              	WriteConfigurations:
 793              	.LFB30:
 299:src/flash_program.c **** 
 300:src/flash_program.c **** 
 301:src/flash_program.c **** unsigned char WriteConfigurations (parameters_typedef * p_param)
 302:src/flash_program.c **** {
 794              		.loc 1 302 0
 795              		.cfi_startproc
 796 0000 00B5     		push	{lr}	@
 797              	.LCFI14:
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 14, -4
 800 0002 83B0     		sub	sp, sp, #12	@,,
 801              	.LCFI15:
 802              		.cfi_def_cfa_offset 16
 803 0004 0190     		str	r0, [sp, #4]	@ p_param, p_param
 303:src/flash_program.c **** 	ErasePage(PAGE63,0);
 804              		.loc 1 303 0
 805 0006 094B     		ldr	r3, .L57	@ tmp113,
 806 0008 0021     		movs	r1, #0	@,
 807 000a 1800     		movs	r0, r3	@, tmp113
 808 000c FFF7FEFF 		bl	ErasePage	@
 304:src/flash_program.c **** 
 305:src/flash_program.c **** 	//update en memoria
 306:src/flash_program.c **** 	//p_param = &param_struct;
 307:src/flash_program.c **** 
 308:src/flash_program.c **** 	if (WriteFlash((unsigned int *) p_param, PAGE63, 1, (sizeof(parameters_typedef) >> 2)) == FAILED)
 809              		.loc 1 308 0
 810 0010 0649     		ldr	r1, .L57	@ tmp114,
 811 0012 0198     		ldr	r0, [sp, #4]	@ tmp115, p_param
 812 0014 1523     		movs	r3, #21	@,
 813 0016 0122     		movs	r2, #1	@,
 814 0018 FFF7FEFF 		bl	WriteFlash	@
 815 001c 031E     		subs	r3, r0, #0	@ tmp116,,
 816 001e 01D1     		bne	.L55	@,
 309:src/flash_program.c **** 		return FAILED;
 817              		.loc 1 309 0
 818 0020 0023     		movs	r3, #0	@ D.5347,
 819 0022 00E0     		b	.L56	@
 820              	.L55:
 310:src/flash_program.c **** 
 311:src/flash_program.c **** 	return PASSED;
 821              		.loc 1 311 0
ARM GAS  /tmp/ccTGK1Aa.s 			page 21


 822 0024 0123     		movs	r3, #1	@ D.5347,
 823              	.L56:
 312:src/flash_program.c **** }
 824              		.loc 1 312 0
 825 0026 1800     		movs	r0, r3	@, <retval>
 826 0028 03B0     		add	sp, sp, #12	@,,
 827              		@ sp needed	@
 828 002a 00BD     		pop	{pc}
 829              	.L58:
 830              		.align	2
 831              	.L57:
 832 002c 00FC0008 		.word	134282240
 833              		.cfi_endproc
 834              	.LFE30:
 835              		.size	WriteConfigurations, .-WriteConfigurations
 836              		.section	.text.WriteFlash,"ax",%progbits
 837              		.align	2
 838              		.global	WriteFlash
 839              		.code	16
 840              		.thumb_func
 841              		.type	WriteFlash, %function
 842              	WriteFlash:
 843              	.LFB31:
 313:src/flash_program.c **** 
 314:src/flash_program.c **** unsigned char WriteFlash(unsigned int * p, uint32_t p_addr, unsigned char with_lock, unsigned char 
 315:src/flash_program.c **** {
 844              		.loc 1 315 0
 845              		.cfi_startproc
 846 0000 00B5     		push	{lr}	@
 847              	.LCFI16:
 848              		.cfi_def_cfa_offset 4
 849              		.cfi_offset 14, -4
 850 0002 87B0     		sub	sp, sp, #28	@,,
 851              	.LCFI17:
 852              		.cfi_def_cfa_offset 32
 853 0004 0390     		str	r0, [sp, #12]	@ p, p
 854 0006 0291     		str	r1, [sp, #8]	@ p_addr, p_addr
 855 0008 1900     		movs	r1, r3	@ tmp131, len_in_4
 856 000a 6B46     		mov	r3, sp	@ tmp171,
 857 000c 0733     		adds	r3, r3, #7	@ tmp129,
 858 000e 1A70     		strb	r2, [r3]	@ tmp130, with_lock
 859 0010 6B46     		mov	r3, sp	@ tmp172,
 860 0012 0633     		adds	r3, r3, #6	@ tmp132,
 861 0014 0A1C     		adds	r2, r1, #0	@ tmp133, tmp131
 862 0016 1A70     		strb	r2, [r3]	@ tmp133, len_in_4
 316:src/flash_program.c **** 	unsigned short i;
 317:src/flash_program.c **** 	unsigned int * p_verif;
 318:src/flash_program.c **** 
 319:src/flash_program.c **** 	p_verif = (unsigned int *) p_addr;
 863              		.loc 1 319 0
 864 0018 029B     		ldr	r3, [sp, #8]	@ tmp134, p_addr
 865 001a 0493     		str	r3, [sp, #16]	@ tmp134, p_verif
 320:src/flash_program.c **** 
 321:src/flash_program.c **** 	for (i = 0; i < len_in_4; i++)
 866              		.loc 1 321 0
 867 001c 1623     		movs	r3, #22	@ tmp135,
 868 001e 6B44     		add	r3, r3, sp	@ tmp135,
ARM GAS  /tmp/ccTGK1Aa.s 			page 22


 869 0020 0022     		movs	r2, #0	@ tmp136,
 870 0022 1A80     		strh	r2, [r3]	@ tmp137, i
 871 0024 15E0     		b	.L60	@
 872              	.L61:
 322:src/flash_program.c **** 	{
 323:src/flash_program.c **** 		FLASH_ProgramWord(p_addr, *(p + i));
 873              		.loc 1 323 0 discriminator 3
 874 0026 1623     		movs	r3, #22	@ tmp138,
 875 0028 6B44     		add	r3, r3, sp	@ tmp138,
 876 002a 1B88     		ldrh	r3, [r3]	@ D.5350, i
 877 002c 9B00     		lsls	r3, r3, #2	@ D.5350, D.5350,
 878 002e 039A     		ldr	r2, [sp, #12]	@ tmp139, p
 879 0030 D318     		adds	r3, r2, r3	@ D.5351, tmp139, D.5350
 880 0032 1A68     		ldr	r2, [r3]	@ D.5350, *_16
 881 0034 029B     		ldr	r3, [sp, #8]	@ tmp140, p_addr
 882 0036 1100     		movs	r1, r2	@, D.5350
 883 0038 1800     		movs	r0, r3	@, tmp140
 884 003a FFF7FEFF 		bl	FLASH_ProgramWord	@
 324:src/flash_program.c **** 		p_addr += 4;
 885              		.loc 1 324 0 discriminator 3
 886 003e 029B     		ldr	r3, [sp, #8]	@ tmp142, p_addr
 887 0040 0433     		adds	r3, r3, #4	@ tmp141,
 888 0042 0293     		str	r3, [sp, #8]	@ tmp141, p_addr
 321:src/flash_program.c **** 	{
 889              		.loc 1 321 0 discriminator 3
 890 0044 1623     		movs	r3, #22	@ tmp143,
 891 0046 6B44     		add	r3, r3, sp	@ tmp143,
 892 0048 1A88     		ldrh	r2, [r3]	@ D.5349, i
 893 004a 1623     		movs	r3, #22	@ tmp144,
 894 004c 6B44     		add	r3, r3, sp	@ tmp144,
 895 004e 0132     		adds	r2, r2, #1	@ tmp145,
 896 0050 1A80     		strh	r2, [r3]	@ tmp146, i
 897              	.L60:
 321:src/flash_program.c **** 	{
 898              		.loc 1 321 0 is_stmt 0 discriminator 1
 899 0052 6B46     		mov	r3, sp	@ tmp177,
 900 0054 0633     		adds	r3, r3, #6	@ tmp147,
 901 0056 1B78     		ldrb	r3, [r3]	@ tmp149, len_in_4
 902 0058 9BB2     		uxth	r3, r3	@ D.5349, tmp148
 903 005a 1622     		movs	r2, #22	@ tmp150,
 904 005c 6A44     		add	r2, r2, sp	@ tmp150,
 905 005e 1288     		ldrh	r2, [r2]	@ tmp151, i
 906 0060 9A42     		cmp	r2, r3	@ tmp151, D.5349
 907 0062 E0D3     		bcc	.L61	@,
 325:src/flash_program.c **** 	}
 326:src/flash_program.c **** 
 327:src/flash_program.c **** 	if (with_lock)
 908              		.loc 1 327 0 is_stmt 1
 909 0064 6B46     		mov	r3, sp	@ tmp179,
 910 0066 0733     		adds	r3, r3, #7	@ tmp152,
 911 0068 1B78     		ldrb	r3, [r3]	@ tmp153, with_lock
 912 006a 002B     		cmp	r3, #0	@ tmp153,
 913 006c 01D0     		beq	.L62	@,
 328:src/flash_program.c **** 		FLASH_Lock();
 914              		.loc 1 328 0
 915 006e FFF7FEFF 		bl	FLASH_Lock	@
 916              	.L62:
ARM GAS  /tmp/ccTGK1Aa.s 			page 23


 329:src/flash_program.c **** 
 330:src/flash_program.c **** 	//verifico memoria
 331:src/flash_program.c **** 	for (i = 0; i < len_in_4; i++)
 917              		.loc 1 331 0
 918 0072 1623     		movs	r3, #22	@ tmp154,
 919 0074 6B44     		add	r3, r3, sp	@ tmp154,
 920 0076 0022     		movs	r2, #0	@ tmp155,
 921 0078 1A80     		strh	r2, [r3]	@ tmp156, i
 922 007a 18E0     		b	.L63	@
 923              	.L66:
 332:src/flash_program.c **** 	{
 333:src/flash_program.c **** 		if (*(p_verif + i) != *(p + i))
 924              		.loc 1 333 0
 925 007c 1623     		movs	r3, #22	@ tmp157,
 926 007e 6B44     		add	r3, r3, sp	@ tmp157,
 927 0080 1B88     		ldrh	r3, [r3]	@ D.5350, i
 928 0082 9B00     		lsls	r3, r3, #2	@ D.5350, D.5350,
 929 0084 049A     		ldr	r2, [sp, #16]	@ tmp158, p_verif
 930 0086 D318     		adds	r3, r2, r3	@ D.5351, tmp158, D.5350
 931 0088 1A68     		ldr	r2, [r3]	@ D.5350, *_28
 932 008a 1623     		movs	r3, #22	@ tmp159,
 933 008c 6B44     		add	r3, r3, sp	@ tmp159,
 934 008e 1B88     		ldrh	r3, [r3]	@ D.5350, i
 935 0090 9B00     		lsls	r3, r3, #2	@ D.5350, D.5350,
 936 0092 0399     		ldr	r1, [sp, #12]	@ tmp160, p
 937 0094 CB18     		adds	r3, r1, r3	@ D.5351, tmp160, D.5350
 938 0096 1B68     		ldr	r3, [r3]	@ D.5350, *_32
 939 0098 9A42     		cmp	r2, r3	@ D.5350, D.5350
 940 009a 01D0     		beq	.L64	@,
 334:src/flash_program.c **** 			return FAILED;
 941              		.loc 1 334 0
 942 009c 0023     		movs	r3, #0	@ D.5348,
 943 009e 10E0     		b	.L65	@
 944              	.L64:
 331:src/flash_program.c **** 	{
 945              		.loc 1 331 0 discriminator 2
 946 00a0 1623     		movs	r3, #22	@ tmp161,
 947 00a2 6B44     		add	r3, r3, sp	@ tmp161,
 948 00a4 1A88     		ldrh	r2, [r3]	@ D.5349, i
 949 00a6 1623     		movs	r3, #22	@ tmp162,
 950 00a8 6B44     		add	r3, r3, sp	@ tmp162,
 951 00aa 0132     		adds	r2, r2, #1	@ tmp163,
 952 00ac 1A80     		strh	r2, [r3]	@ tmp164, i
 953              	.L63:
 331:src/flash_program.c **** 	{
 954              		.loc 1 331 0 is_stmt 0 discriminator 1
 955 00ae 6B46     		mov	r3, sp	@ tmp185,
 956 00b0 0633     		adds	r3, r3, #6	@ tmp165,
 957 00b2 1B78     		ldrb	r3, [r3]	@ tmp167, len_in_4
 958 00b4 9BB2     		uxth	r3, r3	@ D.5349, tmp166
 959 00b6 1622     		movs	r2, #22	@ tmp168,
 960 00b8 6A44     		add	r2, r2, sp	@ tmp168,
 961 00ba 1288     		ldrh	r2, [r2]	@ tmp169, i
 962 00bc 9A42     		cmp	r2, r3	@ tmp169, D.5349
 963 00be DDD3     		bcc	.L66	@,
 335:src/flash_program.c **** 	}
 336:src/flash_program.c **** 	return PASSED;
ARM GAS  /tmp/ccTGK1Aa.s 			page 24


 964              		.loc 1 336 0 is_stmt 1
 965 00c0 0123     		movs	r3, #1	@ D.5348,
 966              	.L65:
 337:src/flash_program.c **** }
 967              		.loc 1 337 0
 968 00c2 1800     		movs	r0, r3	@, <retval>
 969 00c4 07B0     		add	sp, sp, #28	@,,
 970              		@ sp needed	@
 971 00c6 00BD     		pop	{pc}
 972              		.cfi_endproc
 973              	.LFE31:
 974              		.size	WriteFlash, .-WriteFlash
 975              		.section	.text.GetFlashConf,"ax",%progbits
 976              		.align	2
 977              		.global	GetFlashConf
 978              		.code	16
 979              		.thumb_func
 980              		.type	GetFlashConf, %function
 981              	GetFlashConf:
 982              	.LFB32:
 338:src/flash_program.c **** 
 339:src/flash_program.c **** void GetFlashConf (parameters_typedef * p_ram)
 340:src/flash_program.c **** {
 983              		.loc 1 340 0
 984              		.cfi_startproc
 985 0000 00B5     		push	{lr}	@
 986              	.LCFI18:
 987              		.cfi_def_cfa_offset 4
 988              		.cfi_offset 14, -4
 989 0002 83B0     		sub	sp, sp, #12	@,,
 990              	.LCFI19:
 991              		.cfi_def_cfa_offset 16
 992 0004 0190     		str	r0, [sp, #4]	@ p_ram, p_ram
 341:src/flash_program.c **** 	//memoria no vacia
 342:src/flash_program.c **** 	strncpy( p_ram->num_reportar,
 993              		.loc 1 342 0
 994 0006 019B     		ldr	r3, [sp, #4]	@ D.5352, p_ram
 995 0008 0B49     		ldr	r1, .L68	@ tmp117,
 996 000a 1822     		movs	r2, #24	@,
 997 000c 1800     		movs	r0, r3	@, D.5352
 998 000e FFF7FEFF 		bl	strncpy	@
 343:src/flash_program.c **** 				((parameters_typedef *) (char *) PAGE63)->num_reportar,
 344:src/flash_program.c **** 				sizeof(param_struct.num_reportar));
 345:src/flash_program.c **** 
 346:src/flash_program.c **** 	p_ram->acumm_w2s = ((parameters_typedef *) (unsigned int *) PAGE63)->acumm_w2s;
 999              		.loc 1 346 0
 1000 0012 094B     		ldr	r3, .L68	@ D.5353,
 1001 0014 DA6C     		ldr	r2, [r3, #76]	@ D.5354, _5->acumm_w2s
 1002 0016 019B     		ldr	r3, [sp, #4]	@ tmp118, p_ram
 1003 0018 DA64     		str	r2, [r3, #76]	@ D.5354, p_ram_1(D)->acumm_w2s
 347:src/flash_program.c **** 	p_ram->acumm_w2s_index = ((parameters_typedef *) (unsigned short *) PAGE63)->acumm_w2s_index;
 1004              		.loc 1 347 0
 1005 001a 074A     		ldr	r2, .L68	@ D.5353,
 1006 001c 5023     		movs	r3, #80	@ tmp119,
 1007 001e D15A     		ldrh	r1, [r2, r3]	@ D.5355,
 1008 0020 019B     		ldr	r3, [sp, #4]	@ tmp120, p_ram
 1009 0022 5022     		movs	r2, #80	@ tmp121,
ARM GAS  /tmp/ccTGK1Aa.s 			page 25


 1010 0024 9952     		strh	r1, [r3, r2]	@ tmp122, p_ram_1(D)->acumm_w2s_index
 348:src/flash_program.c **** 	p_ram->timer_reportar = ((parameters_typedef *) (unsigned char *) PAGE63)->timer_reportar;
 1011              		.loc 1 348 0
 1012 0026 044A     		ldr	r2, .L68	@ D.5353,
 1013 0028 5223     		movs	r3, #82	@ tmp123,
 1014 002a D15C     		ldrb	r1, [r2, r3]	@ D.5356,
 1015 002c 019B     		ldr	r3, [sp, #4]	@ tmp124, p_ram
 1016 002e 5222     		movs	r2, #82	@ tmp125,
 1017 0030 9954     		strb	r1, [r3, r2]	@ tmp126, p_ram_1(D)->timer_reportar
 349:src/flash_program.c **** 
 350:src/flash_program.c **** }
 1018              		.loc 1 350 0
 1019 0032 C046     		nop
 1020 0034 03B0     		add	sp, sp, #12	@,,
 1021              		@ sp needed	@
 1022 0036 00BD     		pop	{pc}
 1023              	.L69:
 1024              		.align	2
 1025              	.L68:
 1026 0038 00FC0008 		.word	134282240
 1027              		.cfi_endproc
 1028              	.LFE32:
 1029              		.size	GetFlashConf, .-GetFlashConf
 1030              		.text
 1031              	.Letext0:
 1032              		.file 2 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types
 1033              		.file 3 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 1034              		.file 4 "./cmsis_boot/stm32f0xx.h"
 1035              		.file 5 "src/flash_program.h"
 1036              		.section	.debug_info,"",%progbits
 1037              	.Ldebug_info0:
 1038 0000 66050000 		.4byte	0x566
 1039 0004 0200     		.2byte	0x2
 1040 0006 00000000 		.4byte	.Ldebug_abbrev0
 1041 000a 04       		.byte	0x4
 1042 000b 01       		.uleb128 0x1
 1043 000c 71010000 		.4byte	.LASF66
 1044 0010 0C       		.byte	0xc
 1045 0011 4E010000 		.4byte	.LASF67
 1046 0015 8E020000 		.4byte	.LASF68
 1047 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1048 001d 00000000 		.4byte	0
 1049 0021 00000000 		.4byte	0
 1050 0025 00000000 		.4byte	.Ldebug_line0
 1051 0029 02       		.uleb128 0x2
 1052 002a 01       		.byte	0x1
 1053 002b 06       		.byte	0x6
 1054 002c 26020000 		.4byte	.LASF0
 1055 0030 02       		.uleb128 0x2
 1056 0031 01       		.byte	0x1
 1057 0032 08       		.byte	0x8
 1058 0033 1E010000 		.4byte	.LASF1
 1059 0037 02       		.uleb128 0x2
 1060 0038 02       		.byte	0x2
 1061 0039 05       		.byte	0x5
 1062 003a D3000000 		.4byte	.LASF2
 1063 003e 03       		.uleb128 0x3
ARM GAS  /tmp/ccTGK1Aa.s 			page 26


 1064 003f 77000000 		.4byte	.LASF5
 1065 0043 02       		.byte	0x2
 1066 0044 2B       		.byte	0x2b
 1067 0045 49000000 		.4byte	0x49
 1068 0049 02       		.uleb128 0x2
 1069 004a 02       		.byte	0x2
 1070 004b 07       		.byte	0x7
 1071 004c 3E030000 		.4byte	.LASF3
 1072 0050 02       		.uleb128 0x2
 1073 0051 04       		.byte	0x4
 1074 0052 05       		.byte	0x5
 1075 0053 00010000 		.4byte	.LASF4
 1076 0057 03       		.uleb128 0x3
 1077 0058 58000000 		.4byte	.LASF6
 1078 005c 02       		.byte	0x2
 1079 005d 41       		.byte	0x41
 1080 005e 62000000 		.4byte	0x62
 1081 0062 02       		.uleb128 0x2
 1082 0063 04       		.byte	0x4
 1083 0064 07       		.byte	0x7
 1084 0065 5B030000 		.4byte	.LASF7
 1085 0069 02       		.uleb128 0x2
 1086 006a 08       		.byte	0x8
 1087 006b 05       		.byte	0x5
 1088 006c F2000000 		.4byte	.LASF8
 1089 0070 02       		.uleb128 0x2
 1090 0071 08       		.byte	0x8
 1091 0072 07       		.byte	0x7
 1092 0073 32020000 		.4byte	.LASF9
 1093 0077 04       		.uleb128 0x4
 1094 0078 04       		.byte	0x4
 1095 0079 05       		.byte	0x5
 1096 007a 696E7400 		.ascii	"int\000"
 1097 007e 02       		.uleb128 0x2
 1098 007f 04       		.byte	0x4
 1099 0080 07       		.byte	0x7
 1100 0081 52020000 		.4byte	.LASF10
 1101 0085 03       		.uleb128 0x3
 1102 0086 DB020000 		.4byte	.LASF11
 1103 008a 03       		.byte	0x3
 1104 008b 1A       		.byte	0x1a
 1105 008c 3E000000 		.4byte	0x3e
 1106 0090 03       		.uleb128 0x3
 1107 0091 49020000 		.4byte	.LASF12
 1108 0095 03       		.byte	0x3
 1109 0096 20       		.byte	0x20
 1110 0097 57000000 		.4byte	0x57
 1111 009b 02       		.uleb128 0x2
 1112 009c 04       		.byte	0x4
 1113 009d 07       		.byte	0x7
 1114 009e 3C000000 		.4byte	.LASF13
 1115 00a2 05       		.uleb128 0x5
 1116 00a3 90000000 		.4byte	0x90
 1117 00a7 06       		.uleb128 0x6
 1118 00a8 01       		.byte	0x1
 1119 00a9 30000000 		.4byte	0x30
 1120 00ad 04       		.byte	0x4
ARM GAS  /tmp/ccTGK1Aa.s 			page 27


 1121 00ae 6D01     		.2byte	0x16d
 1122 00b0 C1000000 		.4byte	0xc1
 1123 00b4 07       		.uleb128 0x7
 1124 00b5 86030000 		.4byte	.LASF14
 1125 00b9 00       		.byte	0
 1126 00ba 08       		.uleb128 0x8
 1127 00bb 53455400 		.ascii	"SET\000"
 1128 00bf 01       		.byte	0x1
 1129 00c0 00       		.byte	0
 1130 00c1 09       		.uleb128 0x9
 1131 00c2 24       		.byte	0x24
 1132 00c3 04       		.byte	0x4
 1133 00c4 4702     		.2byte	0x247
 1134 00c6 4F010000 		.4byte	0x14f
 1135 00ca 0A       		.uleb128 0xa
 1136 00cb 41435200 		.ascii	"ACR\000"
 1137 00cf 04       		.byte	0x4
 1138 00d0 4902     		.2byte	0x249
 1139 00d2 A2000000 		.4byte	0xa2
 1140 00d6 02       		.byte	0x2
 1141 00d7 23       		.byte	0x23
 1142 00d8 00       		.uleb128 0
 1143 00d9 0B       		.uleb128 0xb
 1144 00da 97000000 		.4byte	.LASF15
 1145 00de 04       		.byte	0x4
 1146 00df 4A02     		.2byte	0x24a
 1147 00e1 A2000000 		.4byte	0xa2
 1148 00e5 02       		.byte	0x2
 1149 00e6 23       		.byte	0x23
 1150 00e7 04       		.uleb128 0x4
 1151 00e8 0B       		.uleb128 0xb
 1152 00e9 EA000000 		.4byte	.LASF16
 1153 00ed 04       		.byte	0x4
 1154 00ee 4B02     		.2byte	0x24b
 1155 00f0 A2000000 		.4byte	0xa2
 1156 00f4 02       		.byte	0x2
 1157 00f5 23       		.byte	0x23
 1158 00f6 08       		.uleb128 0x8
 1159 00f7 0A       		.uleb128 0xa
 1160 00f8 535200   		.ascii	"SR\000"
 1161 00fb 04       		.byte	0x4
 1162 00fc 4C02     		.2byte	0x24c
 1163 00fe A2000000 		.4byte	0xa2
 1164 0102 02       		.byte	0x2
 1165 0103 23       		.byte	0x23
 1166 0104 0C       		.uleb128 0xc
 1167 0105 0A       		.uleb128 0xa
 1168 0106 435200   		.ascii	"CR\000"
 1169 0109 04       		.byte	0x4
 1170 010a 4D02     		.2byte	0x24d
 1171 010c A2000000 		.4byte	0xa2
 1172 0110 02       		.byte	0x2
 1173 0111 23       		.byte	0x23
 1174 0112 10       		.uleb128 0x10
 1175 0113 0A       		.uleb128 0xa
 1176 0114 415200   		.ascii	"AR\000"
 1177 0117 04       		.byte	0x4
ARM GAS  /tmp/ccTGK1Aa.s 			page 28


 1178 0118 4E02     		.2byte	0x24e
 1179 011a A2000000 		.4byte	0xa2
 1180 011e 02       		.byte	0x2
 1181 011f 23       		.byte	0x23
 1182 0120 14       		.uleb128 0x14
 1183 0121 0B       		.uleb128 0xb
 1184 0122 B2030000 		.4byte	.LASF17
 1185 0126 04       		.byte	0x4
 1186 0127 4F02     		.2byte	0x24f
 1187 0129 A2000000 		.4byte	0xa2
 1188 012d 02       		.byte	0x2
 1189 012e 23       		.byte	0x23
 1190 012f 18       		.uleb128 0x18
 1191 0130 0A       		.uleb128 0xa
 1192 0131 4F425200 		.ascii	"OBR\000"
 1193 0135 04       		.byte	0x4
 1194 0136 5002     		.2byte	0x250
 1195 0138 A2000000 		.4byte	0xa2
 1196 013c 02       		.byte	0x2
 1197 013d 23       		.byte	0x23
 1198 013e 1C       		.uleb128 0x1c
 1199 013f 0B       		.uleb128 0xb
 1200 0140 09010000 		.4byte	.LASF18
 1201 0144 04       		.byte	0x4
 1202 0145 5102     		.2byte	0x251
 1203 0147 A2000000 		.4byte	0xa2
 1204 014b 02       		.byte	0x2
 1205 014c 23       		.byte	0x23
 1206 014d 20       		.uleb128 0x20
 1207 014e 00       		.byte	0
 1208 014f 0C       		.uleb128 0xc
 1209 0150 BB030000 		.4byte	.LASF19
 1210 0154 04       		.byte	0x4
 1211 0155 5202     		.2byte	0x252
 1212 0157 C1000000 		.4byte	0xc1
 1213 015b 0D       		.uleb128 0xd
 1214 015c 01       		.byte	0x1
 1215 015d 30000000 		.4byte	0x30
 1216 0161 05       		.byte	0x5
 1217 0162 2D       		.byte	0x2d
 1218 0163 86010000 		.4byte	0x186
 1219 0167 07       		.uleb128 0x7
 1220 0168 6E020000 		.4byte	.LASF20
 1221 016c 01       		.byte	0x1
 1222 016d 07       		.uleb128 0x7
 1223 016e 21000000 		.4byte	.LASF21
 1224 0172 02       		.byte	0x2
 1225 0173 07       		.uleb128 0x7
 1226 0174 8C030000 		.4byte	.LASF22
 1227 0178 03       		.byte	0x3
 1228 0179 07       		.uleb128 0x7
 1229 017a 5F020000 		.4byte	.LASF23
 1230 017e 04       		.byte	0x4
 1231 017f 07       		.uleb128 0x7
 1232 0180 79020000 		.4byte	.LASF24
 1233 0184 05       		.byte	0x5
 1234 0185 00       		.byte	0
ARM GAS  /tmp/ccTGK1Aa.s 			page 29


 1235 0186 03       		.uleb128 0x3
 1236 0187 B6000000 		.4byte	.LASF25
 1237 018b 05       		.byte	0x5
 1238 018c 33       		.byte	0x33
 1239 018d 5B010000 		.4byte	0x15b
 1240 0191 0E       		.uleb128 0xe
 1241 0192 13010000 		.4byte	.LASF69
 1242 0196 54       		.byte	0x54
 1243 0197 05       		.byte	0x5
 1244 0198 49       		.byte	0x49
 1245 0199 0E020000 		.4byte	0x20e
 1246 019d 0F       		.uleb128 0xf
 1247 019e A9000000 		.4byte	.LASF26
 1248 01a2 05       		.byte	0x5
 1249 01a3 4B       		.byte	0x4b
 1250 01a4 0E020000 		.4byte	0x20e
 1251 01a8 02       		.byte	0x2
 1252 01a9 23       		.byte	0x23
 1253 01aa 00       		.uleb128 0
 1254 01ab 0F       		.uleb128 0xf
 1255 01ac E4020000 		.4byte	.LASF27
 1256 01b0 05       		.byte	0x5
 1257 01b1 4C       		.byte	0x4c
 1258 01b2 0E020000 		.4byte	0x20e
 1259 01b6 02       		.byte	0x2
 1260 01b7 23       		.byte	0x23
 1261 01b8 18       		.uleb128 0x18
 1262 01b9 0F       		.uleb128 0xf
 1263 01ba 31000000 		.4byte	.LASF28
 1264 01be 05       		.byte	0x5
 1265 01bf 4D       		.byte	0x4d
 1266 01c0 0E020000 		.4byte	0x20e
 1267 01c4 02       		.byte	0x2
 1268 01c5 23       		.byte	0x23
 1269 01c6 30       		.uleb128 0x30
 1270 01c7 0F       		.uleb128 0xf
 1271 01c8 2C010000 		.4byte	.LASF29
 1272 01cc 05       		.byte	0x5
 1273 01cd 4F       		.byte	0x4f
 1274 01ce 7E000000 		.4byte	0x7e
 1275 01d2 02       		.byte	0x2
 1276 01d3 23       		.byte	0x23
 1277 01d4 48       		.uleb128 0x48
 1278 01d5 0F       		.uleb128 0xf
 1279 01d6 51030000 		.4byte	.LASF30
 1280 01da 05       		.byte	0x5
 1281 01db 50       		.byte	0x50
 1282 01dc 7E000000 		.4byte	0x7e
 1283 01e0 02       		.byte	0x2
 1284 01e1 23       		.byte	0x23
 1285 01e2 4C       		.uleb128 0x4c
 1286 01e3 0F       		.uleb128 0xf
 1287 01e4 0B000000 		.4byte	.LASF31
 1288 01e8 05       		.byte	0x5
 1289 01e9 51       		.byte	0x51
 1290 01ea 49000000 		.4byte	0x49
 1291 01ee 02       		.byte	0x2
ARM GAS  /tmp/ccTGK1Aa.s 			page 30


 1292 01ef 23       		.byte	0x23
 1293 01f0 50       		.uleb128 0x50
 1294 01f1 0F       		.uleb128 0xf
 1295 01f2 62010000 		.4byte	.LASF32
 1296 01f6 05       		.byte	0x5
 1297 01f7 53       		.byte	0x53
 1298 01f8 30000000 		.4byte	0x30
 1299 01fc 02       		.byte	0x2
 1300 01fd 23       		.byte	0x23
 1301 01fe 52       		.uleb128 0x52
 1302 01ff 0F       		.uleb128 0xf
 1303 0200 FD030000 		.4byte	.LASF33
 1304 0204 05       		.byte	0x5
 1305 0205 55       		.byte	0x55
 1306 0206 30000000 		.4byte	0x30
 1307 020a 02       		.byte	0x2
 1308 020b 23       		.byte	0x23
 1309 020c 53       		.uleb128 0x53
 1310 020d 00       		.byte	0
 1311 020e 10       		.uleb128 0x10
 1312 020f 1E020000 		.4byte	0x21e
 1313 0213 1E020000 		.4byte	0x21e
 1314 0217 11       		.uleb128 0x11
 1315 0218 9B000000 		.4byte	0x9b
 1316 021c 17       		.byte	0x17
 1317 021d 00       		.byte	0
 1318 021e 02       		.uleb128 0x2
 1319 021f 01       		.byte	0x1
 1320 0220 08       		.byte	0x8
 1321 0221 D6020000 		.4byte	.LASF34
 1322 0225 03       		.uleb128 0x3
 1323 0226 45000000 		.4byte	.LASF35
 1324 022a 05       		.byte	0x5
 1325 022b 5B       		.byte	0x5b
 1326 022c 91010000 		.4byte	0x191
 1327 0230 0D       		.uleb128 0xd
 1328 0231 01       		.byte	0x1
 1329 0232 30000000 		.4byte	0x30
 1330 0236 05       		.byte	0x5
 1331 0237 68       		.byte	0x68
 1332 0238 49020000 		.4byte	0x249
 1333 023c 07       		.uleb128 0x7
 1334 023d F6030000 		.4byte	.LASF36
 1335 0241 00       		.byte	0
 1336 0242 07       		.uleb128 0x7
 1337 0243 63000000 		.4byte	.LASF37
 1338 0247 01       		.byte	0x1
 1339 0248 00       		.byte	0
 1340 0249 02       		.uleb128 0x2
 1341 024a 08       		.byte	0x8
 1342 024b 04       		.byte	0x4
 1343 024c 35010000 		.4byte	.LASF38
 1344 0250 12       		.uleb128 0x12
 1345 0251 01       		.byte	0x1
 1346 0252 F4020000 		.4byte	.LASF45
 1347 0256 01       		.byte	0x1
 1348 0257 2F       		.byte	0x2f
ARM GAS  /tmp/ccTGK1Aa.s 			page 31


 1349 0258 01       		.byte	0x1
 1350 0259 30000000 		.4byte	0x30
 1351 025d 00000000 		.4byte	.LFB20
 1352 0261 48000000 		.4byte	.LFE20
 1353 0265 00000000 		.4byte	.LLST0
 1354 0269 01       		.byte	0x1
 1355 026a 7D020000 		.4byte	0x27d
 1356 026e 13       		.uleb128 0x13
 1357 026f 72000000 		.4byte	.LASF40
 1358 0273 01       		.byte	0x1
 1359 0274 31       		.byte	0x31
 1360 0275 30000000 		.4byte	0x30
 1361 0279 02       		.byte	0x2
 1362 027a 91       		.byte	0x91
 1363 027b 77       		.sleb128 -9
 1364 027c 00       		.byte	0
 1365 027d 14       		.uleb128 0x14
 1366 027e 01       		.byte	0x1
 1367 027f 82000000 		.4byte	.LASF41
 1368 0283 01       		.byte	0x1
 1369 0284 4D       		.byte	0x4d
 1370 0285 01       		.byte	0x1
 1371 0286 00000000 		.4byte	.LFB21
 1372 028a 4A000000 		.4byte	.LFE21
 1373 028e 2C000000 		.4byte	.LLST1
 1374 0292 01       		.byte	0x1
 1375 0293 BE020000 		.4byte	0x2be
 1376 0297 15       		.uleb128 0x15
 1377 0298 7000     		.ascii	"p\000"
 1378 029a 01       		.byte	0x1
 1379 029b 4D       		.byte	0x4d
 1380 029c BE020000 		.4byte	0x2be
 1381 02a0 02       		.byte	0x2
 1382 02a1 91       		.byte	0x91
 1383 02a2 74       		.sleb128 -12
 1384 02a3 16       		.uleb128 0x16
 1385 02a4 8D000000 		.4byte	.LASF39
 1386 02a8 01       		.byte	0x1
 1387 02a9 4D       		.byte	0x4d
 1388 02aa BE020000 		.4byte	0x2be
 1389 02ae 02       		.byte	0x2
 1390 02af 91       		.byte	0x91
 1391 02b0 70       		.sleb128 -16
 1392 02b1 17       		.uleb128 0x17
 1393 02b2 6900     		.ascii	"i\000"
 1394 02b4 01       		.byte	0x1
 1395 02b5 4F       		.byte	0x4f
 1396 02b6 49000000 		.4byte	0x49
 1397 02ba 02       		.byte	0x2
 1398 02bb 91       		.byte	0x91
 1399 02bc 7E       		.sleb128 -2
 1400 02bd 00       		.byte	0
 1401 02be 18       		.uleb128 0x18
 1402 02bf 04       		.byte	0x4
 1403 02c0 7E000000 		.4byte	0x7e
 1404 02c4 19       		.uleb128 0x19
 1405 02c5 01       		.byte	0x1
ARM GAS  /tmp/ccTGK1Aa.s 			page 32


 1406 02c6 EC030000 		.4byte	.LASF42
 1407 02ca 01       		.byte	0x1
 1408 02cb 57       		.byte	0x57
 1409 02cc 01       		.byte	0x1
 1410 02cd 00000000 		.4byte	.LFB22
 1411 02d1 2E000000 		.4byte	.LFE22
 1412 02d5 4C000000 		.4byte	.LLST2
 1413 02d9 01       		.byte	0x1
 1414 02da FB020000 		.4byte	0x2fb
 1415 02de 16       		.uleb128 0x16
 1416 02df 87020000 		.4byte	.LASF43
 1417 02e3 01       		.byte	0x1
 1418 02e4 57       		.byte	0x57
 1419 02e5 90000000 		.4byte	0x90
 1420 02e9 02       		.byte	0x2
 1421 02ea 91       		.byte	0x91
 1422 02eb 74       		.sleb128 -12
 1423 02ec 16       		.uleb128 0x16
 1424 02ed 1C020000 		.4byte	.LASF44
 1425 02f1 01       		.byte	0x1
 1426 02f2 57       		.byte	0x57
 1427 02f3 30000000 		.4byte	0x30
 1428 02f7 02       		.byte	0x2
 1429 02f8 91       		.byte	0x91
 1430 02f9 73       		.sleb128 -13
 1431 02fa 00       		.byte	0
 1432 02fb 1A       		.uleb128 0x1a
 1433 02fc 01       		.byte	0x1
 1434 02fd 9C000000 		.4byte	.LASF49
 1435 0301 01       		.byte	0x1
 1436 0302 64       		.byte	0x64
 1437 0303 01       		.byte	0x1
 1438 0304 00000000 		.4byte	.LFB23
 1439 0308 28000000 		.4byte	.LFE23
 1440 030c 02       		.byte	0x2
 1441 030d 7D       		.byte	0x7d
 1442 030e 00       		.sleb128 0
 1443 030f 01       		.byte	0x1
 1444 0310 12       		.uleb128 0x12
 1445 0311 01       		.byte	0x1
 1446 0312 C3000000 		.4byte	.LASF46
 1447 0316 01       		.byte	0x1
 1448 0317 79       		.byte	0x79
 1449 0318 01       		.byte	0x1
 1450 0319 86010000 		.4byte	0x186
 1451 031d 00000000 		.4byte	.LFB24
 1452 0321 78000000 		.4byte	.LFE24
 1453 0325 78000000 		.4byte	.LLST3
 1454 0329 01       		.byte	0x1
 1455 032a 4B030000 		.4byte	0x34b
 1456 032e 16       		.uleb128 0x16
 1457 032f 41010000 		.4byte	.LASF47
 1458 0333 01       		.byte	0x1
 1459 0334 79       		.byte	0x79
 1460 0335 90000000 		.4byte	0x90
 1461 0339 02       		.byte	0x2
 1462 033a 91       		.byte	0x91
ARM GAS  /tmp/ccTGK1Aa.s 			page 33


 1463 033b 6C       		.sleb128 -20
 1464 033c 13       		.uleb128 0x13
 1465 033d BD020000 		.4byte	.LASF48
 1466 0341 01       		.byte	0x1
 1467 0342 7B       		.byte	0x7b
 1468 0343 86010000 		.4byte	0x186
 1469 0347 02       		.byte	0x2
 1470 0348 91       		.byte	0x91
 1471 0349 77       		.sleb128 -9
 1472 034a 00       		.byte	0
 1473 034b 1A       		.uleb128 0x1a
 1474 034c 01       		.byte	0x1
 1475 034d E9020000 		.4byte	.LASF50
 1476 0351 01       		.byte	0x1
 1477 0352 97       		.byte	0x97
 1478 0353 01       		.byte	0x1
 1479 0354 00000000 		.4byte	.LFB25
 1480 0358 14000000 		.4byte	.LFE25
 1481 035c 02       		.byte	0x2
 1482 035d 7D       		.byte	0x7d
 1483 035e 00       		.sleb128 0
 1484 035f 01       		.byte	0x1
 1485 0360 12       		.uleb128 0x12
 1486 0361 01       		.byte	0x1
 1487 0362 A0030000 		.4byte	.LASF51
 1488 0366 01       		.byte	0x1
 1489 0367 A7       		.byte	0xa7
 1490 0368 01       		.byte	0x1
 1491 0369 86010000 		.4byte	0x186
 1492 036d 00000000 		.4byte	.LFB26
 1493 0371 B0000000 		.4byte	.LFE26
 1494 0375 A4000000 		.4byte	.LLST4
 1495 0379 01       		.byte	0x1
 1496 037a B7030000 		.4byte	0x3b7
 1497 037e 16       		.uleb128 0x16
 1498 037f 6A000000 		.4byte	.LASF52
 1499 0383 01       		.byte	0x1
 1500 0384 A7       		.byte	0xa7
 1501 0385 90000000 		.4byte	0x90
 1502 0389 02       		.byte	0x2
 1503 038a 91       		.byte	0x91
 1504 038b 6C       		.sleb128 -20
 1505 038c 16       		.uleb128 0x16
 1506 038d 0E010000 		.4byte	.LASF53
 1507 0391 01       		.byte	0x1
 1508 0392 A7       		.byte	0xa7
 1509 0393 90000000 		.4byte	0x90
 1510 0397 02       		.byte	0x2
 1511 0398 91       		.byte	0x91
 1512 0399 68       		.sleb128 -24
 1513 039a 13       		.uleb128 0x13
 1514 039b BD020000 		.4byte	.LASF48
 1515 039f 01       		.byte	0x1
 1516 03a0 A9       		.byte	0xa9
 1517 03a1 86010000 		.4byte	0x186
 1518 03a5 02       		.byte	0x2
 1519 03a6 91       		.byte	0x91
ARM GAS  /tmp/ccTGK1Aa.s 			page 34


 1520 03a7 77       		.sleb128 -9
 1521 03a8 17       		.uleb128 0x17
 1522 03a9 746D7000 		.ascii	"tmp\000"
 1523 03ad 01       		.byte	0x1
 1524 03ae AA       		.byte	0xaa
 1525 03af A2000000 		.4byte	0xa2
 1526 03b3 02       		.byte	0x2
 1527 03b4 91       		.byte	0x91
 1528 03b5 70       		.sleb128 -16
 1529 03b6 00       		.byte	0
 1530 03b7 12       		.uleb128 0x12
 1531 03b8 01       		.byte	0x1
 1532 03b9 C9030000 		.4byte	.LASF54
 1533 03bd 01       		.byte	0x1
 1534 03be D9       		.byte	0xd9
 1535 03bf 01       		.byte	0x1
 1536 03c0 86010000 		.4byte	0x186
 1537 03c4 00000000 		.4byte	.LFB27
 1538 03c8 58000000 		.4byte	.LFE27
 1539 03cc D0000000 		.4byte	.LLST5
 1540 03d0 01       		.byte	0x1
 1541 03d1 F2030000 		.4byte	0x3f2
 1542 03d5 16       		.uleb128 0x16
 1543 03d6 CE020000 		.4byte	.LASF55
 1544 03da 01       		.byte	0x1
 1545 03db D9       		.byte	0xd9
 1546 03dc 90000000 		.4byte	0x90
 1547 03e0 02       		.byte	0x2
 1548 03e1 91       		.byte	0x91
 1549 03e2 6C       		.sleb128 -20
 1550 03e3 13       		.uleb128 0x13
 1551 03e4 BD020000 		.4byte	.LASF48
 1552 03e8 01       		.byte	0x1
 1553 03e9 DB       		.byte	0xdb
 1554 03ea 86010000 		.4byte	0x186
 1555 03ee 02       		.byte	0x2
 1556 03ef 91       		.byte	0x91
 1557 03f0 77       		.sleb128 -9
 1558 03f1 00       		.byte	0
 1559 03f2 1B       		.uleb128 0x1b
 1560 03f3 01       		.byte	0x1
 1561 03f4 1D030000 		.4byte	.LASF56
 1562 03f8 01       		.byte	0x1
 1563 03f9 F5       		.byte	0xf5
 1564 03fa 01       		.byte	0x1
 1565 03fb 86010000 		.4byte	0x186
 1566 03ff 00000000 		.4byte	.LFB28
 1567 0403 60000000 		.4byte	.LFE28
 1568 0407 FC000000 		.4byte	.LLST6
 1569 040b 01       		.byte	0x1
 1570 040c 1F040000 		.4byte	0x41f
 1571 0410 13       		.uleb128 0x13
 1572 0411 6D030000 		.4byte	.LASF57
 1573 0415 01       		.byte	0x1
 1574 0416 F7       		.byte	0xf7
 1575 0417 86010000 		.4byte	0x186
 1576 041b 02       		.byte	0x2
ARM GAS  /tmp/ccTGK1Aa.s 			page 35


 1577 041c 91       		.byte	0x91
 1578 041d 7F       		.sleb128 -1
 1579 041e 00       		.byte	0
 1580 041f 1C       		.uleb128 0x1c
 1581 0420 01       		.byte	0x1
 1582 0421 C4020000 		.4byte	.LASF58
 1583 0425 01       		.byte	0x1
 1584 0426 1301     		.2byte	0x113
 1585 0428 01       		.byte	0x1
 1586 0429 30000000 		.4byte	0x30
 1587 042d 00000000 		.4byte	.LFB29
 1588 0431 AE000000 		.4byte	.LFE29
 1589 0435 1C010000 		.4byte	.LLST7
 1590 0439 01       		.byte	0x1
 1591 043a 86040000 		.4byte	0x486
 1592 043e 1D       		.uleb128 0x1d
 1593 043f 7000     		.ascii	"p\000"
 1594 0441 01       		.byte	0x1
 1595 0442 1301     		.2byte	0x113
 1596 0444 BE020000 		.4byte	0x2be
 1597 0448 02       		.byte	0x2
 1598 0449 91       		.byte	0x91
 1599 044a 6C       		.sleb128 -20
 1600 044b 1E       		.uleb128 0x1e
 1601 044c 87020000 		.4byte	.LASF43
 1602 0450 01       		.byte	0x1
 1603 0451 1301     		.2byte	0x113
 1604 0453 90000000 		.4byte	0x90
 1605 0457 02       		.byte	0x2
 1606 0458 91       		.byte	0x91
 1607 0459 68       		.sleb128 -24
 1608 045a 1E       		.uleb128 0x1e
 1609 045b 1C020000 		.4byte	.LASF44
 1610 045f 01       		.byte	0x1
 1611 0460 1301     		.2byte	0x113
 1612 0462 30000000 		.4byte	0x30
 1613 0466 02       		.byte	0x2
 1614 0467 91       		.byte	0x91
 1615 0468 67       		.sleb128 -25
 1616 0469 1F       		.uleb128 0x1f
 1617 046a 6900     		.ascii	"i\000"
 1618 046c 01       		.byte	0x1
 1619 046d 1501     		.2byte	0x115
 1620 046f 49000000 		.4byte	0x49
 1621 0473 02       		.byte	0x2
 1622 0474 91       		.byte	0x91
 1623 0475 76       		.sleb128 -10
 1624 0476 20       		.uleb128 0x20
 1625 0477 E4030000 		.4byte	.LASF59
 1626 047b 01       		.byte	0x1
 1627 047c 1601     		.2byte	0x116
 1628 047e BE020000 		.4byte	0x2be
 1629 0482 02       		.byte	0x2
 1630 0483 91       		.byte	0x91
 1631 0484 70       		.sleb128 -16
 1632 0485 00       		.byte	0
 1633 0486 1C       		.uleb128 0x1c
ARM GAS  /tmp/ccTGK1Aa.s 			page 36


 1634 0487 01       		.byte	0x1
 1635 0488 09030000 		.4byte	.LASF60
 1636 048c 01       		.byte	0x1
 1637 048d 2D01     		.2byte	0x12d
 1638 048f 01       		.byte	0x1
 1639 0490 30000000 		.4byte	0x30
 1640 0494 00000000 		.4byte	.LFB30
 1641 0498 30000000 		.4byte	.LFE30
 1642 049c 48010000 		.4byte	.LLST8
 1643 04a0 01       		.byte	0x1
 1644 04a1 B5040000 		.4byte	0x4b5
 1645 04a5 1E       		.uleb128 0x1e
 1646 04a6 2D030000 		.4byte	.LASF61
 1647 04aa 01       		.byte	0x1
 1648 04ab 2D01     		.2byte	0x12d
 1649 04ad B5040000 		.4byte	0x4b5
 1650 04b1 02       		.byte	0x2
 1651 04b2 91       		.byte	0x91
 1652 04b3 74       		.sleb128 -12
 1653 04b4 00       		.byte	0
 1654 04b5 18       		.uleb128 0x18
 1655 04b6 04       		.byte	0x4
 1656 04b7 25020000 		.4byte	0x225
 1657 04bb 1C       		.uleb128 0x1c
 1658 04bc 01       		.byte	0x1
 1659 04bd 00000000 		.4byte	.LASF62
 1660 04c1 01       		.byte	0x1
 1661 04c2 3A01     		.2byte	0x13a
 1662 04c4 01       		.byte	0x1
 1663 04c5 30000000 		.4byte	0x30
 1664 04c9 00000000 		.4byte	.LFB31
 1665 04cd C8000000 		.4byte	.LFE31
 1666 04d1 74010000 		.4byte	.LLST9
 1667 04d5 01       		.byte	0x1
 1668 04d6 31050000 		.4byte	0x531
 1669 04da 1D       		.uleb128 0x1d
 1670 04db 7000     		.ascii	"p\000"
 1671 04dd 01       		.byte	0x1
 1672 04de 3A01     		.2byte	0x13a
 1673 04e0 BE020000 		.4byte	0x2be
 1674 04e4 02       		.byte	0x2
 1675 04e5 91       		.byte	0x91
 1676 04e6 6C       		.sleb128 -20
 1677 04e7 1E       		.uleb128 0x1e
 1678 04e8 87020000 		.4byte	.LASF43
 1679 04ec 01       		.byte	0x1
 1680 04ed 3A01     		.2byte	0x13a
 1681 04ef 90000000 		.4byte	0x90
 1682 04f3 02       		.byte	0x2
 1683 04f4 91       		.byte	0x91
 1684 04f5 68       		.sleb128 -24
 1685 04f6 1E       		.uleb128 0x1e
 1686 04f7 1C020000 		.4byte	.LASF44
 1687 04fb 01       		.byte	0x1
 1688 04fc 3A01     		.2byte	0x13a
 1689 04fe 30000000 		.4byte	0x30
 1690 0502 02       		.byte	0x2
ARM GAS  /tmp/ccTGK1Aa.s 			page 37


 1691 0503 91       		.byte	0x91
 1692 0504 67       		.sleb128 -25
 1693 0505 1E       		.uleb128 0x1e
 1694 0506 35030000 		.4byte	.LASF63
 1695 050a 01       		.byte	0x1
 1696 050b 3A01     		.2byte	0x13a
 1697 050d 30000000 		.4byte	0x30
 1698 0511 02       		.byte	0x2
 1699 0512 91       		.byte	0x91
 1700 0513 66       		.sleb128 -26
 1701 0514 1F       		.uleb128 0x1f
 1702 0515 6900     		.ascii	"i\000"
 1703 0517 01       		.byte	0x1
 1704 0518 3C01     		.2byte	0x13c
 1705 051a 49000000 		.4byte	0x49
 1706 051e 02       		.byte	0x2
 1707 051f 91       		.byte	0x91
 1708 0520 76       		.sleb128 -10
 1709 0521 20       		.uleb128 0x20
 1710 0522 E4030000 		.4byte	.LASF59
 1711 0526 01       		.byte	0x1
 1712 0527 3D01     		.2byte	0x13d
 1713 0529 BE020000 		.4byte	0x2be
 1714 052d 02       		.byte	0x2
 1715 052e 91       		.byte	0x91
 1716 052f 70       		.sleb128 -16
 1717 0530 00       		.byte	0
 1718 0531 21       		.uleb128 0x21
 1719 0532 01       		.byte	0x1
 1720 0533 79030000 		.4byte	.LASF64
 1721 0537 01       		.byte	0x1
 1722 0538 5301     		.2byte	0x153
 1723 053a 01       		.byte	0x1
 1724 053b 00000000 		.4byte	.LFB32
 1725 053f 3C000000 		.4byte	.LFE32
 1726 0543 A0010000 		.4byte	.LLST10
 1727 0547 01       		.byte	0x1
 1728 0548 5C050000 		.4byte	0x55c
 1729 054c 1E       		.uleb128 0x1e
 1730 054d 1B000000 		.4byte	.LASF65
 1731 0551 01       		.byte	0x1
 1732 0552 5301     		.2byte	0x153
 1733 0554 B5040000 		.4byte	0x4b5
 1734 0558 02       		.byte	0x2
 1735 0559 91       		.byte	0x91
 1736 055a 74       		.sleb128 -12
 1737 055b 00       		.byte	0
 1738 055c 22       		.uleb128 0x22
 1739 055d DD000000 		.4byte	.LASF70
 1740 0561 01       		.byte	0x1
 1741 0562 13       		.byte	0x13
 1742 0563 25020000 		.4byte	0x225
 1743 0567 01       		.byte	0x1
 1744 0568 01       		.byte	0x1
 1745 0569 00       		.byte	0
 1746              		.section	.debug_abbrev,"",%progbits
 1747              	.Ldebug_abbrev0:
ARM GAS  /tmp/ccTGK1Aa.s 			page 38


 1748 0000 01       		.uleb128 0x1
 1749 0001 11       		.uleb128 0x11
 1750 0002 01       		.byte	0x1
 1751 0003 25       		.uleb128 0x25
 1752 0004 0E       		.uleb128 0xe
 1753 0005 13       		.uleb128 0x13
 1754 0006 0B       		.uleb128 0xb
 1755 0007 03       		.uleb128 0x3
 1756 0008 0E       		.uleb128 0xe
 1757 0009 1B       		.uleb128 0x1b
 1758 000a 0E       		.uleb128 0xe
 1759 000b 55       		.uleb128 0x55
 1760 000c 06       		.uleb128 0x6
 1761 000d 11       		.uleb128 0x11
 1762 000e 01       		.uleb128 0x1
 1763 000f 52       		.uleb128 0x52
 1764 0010 01       		.uleb128 0x1
 1765 0011 10       		.uleb128 0x10
 1766 0012 06       		.uleb128 0x6
 1767 0013 00       		.byte	0
 1768 0014 00       		.byte	0
 1769 0015 02       		.uleb128 0x2
 1770 0016 24       		.uleb128 0x24
 1771 0017 00       		.byte	0
 1772 0018 0B       		.uleb128 0xb
 1773 0019 0B       		.uleb128 0xb
 1774 001a 3E       		.uleb128 0x3e
 1775 001b 0B       		.uleb128 0xb
 1776 001c 03       		.uleb128 0x3
 1777 001d 0E       		.uleb128 0xe
 1778 001e 00       		.byte	0
 1779 001f 00       		.byte	0
 1780 0020 03       		.uleb128 0x3
 1781 0021 16       		.uleb128 0x16
 1782 0022 00       		.byte	0
 1783 0023 03       		.uleb128 0x3
 1784 0024 0E       		.uleb128 0xe
 1785 0025 3A       		.uleb128 0x3a
 1786 0026 0B       		.uleb128 0xb
 1787 0027 3B       		.uleb128 0x3b
 1788 0028 0B       		.uleb128 0xb
 1789 0029 49       		.uleb128 0x49
 1790 002a 13       		.uleb128 0x13
 1791 002b 00       		.byte	0
 1792 002c 00       		.byte	0
 1793 002d 04       		.uleb128 0x4
 1794 002e 24       		.uleb128 0x24
 1795 002f 00       		.byte	0
 1796 0030 0B       		.uleb128 0xb
 1797 0031 0B       		.uleb128 0xb
 1798 0032 3E       		.uleb128 0x3e
 1799 0033 0B       		.uleb128 0xb
 1800 0034 03       		.uleb128 0x3
 1801 0035 08       		.uleb128 0x8
 1802 0036 00       		.byte	0
 1803 0037 00       		.byte	0
 1804 0038 05       		.uleb128 0x5
ARM GAS  /tmp/ccTGK1Aa.s 			page 39


 1805 0039 35       		.uleb128 0x35
 1806 003a 00       		.byte	0
 1807 003b 49       		.uleb128 0x49
 1808 003c 13       		.uleb128 0x13
 1809 003d 00       		.byte	0
 1810 003e 00       		.byte	0
 1811 003f 06       		.uleb128 0x6
 1812 0040 04       		.uleb128 0x4
 1813 0041 01       		.byte	0x1
 1814 0042 0B       		.uleb128 0xb
 1815 0043 0B       		.uleb128 0xb
 1816 0044 49       		.uleb128 0x49
 1817 0045 13       		.uleb128 0x13
 1818 0046 3A       		.uleb128 0x3a
 1819 0047 0B       		.uleb128 0xb
 1820 0048 3B       		.uleb128 0x3b
 1821 0049 05       		.uleb128 0x5
 1822 004a 01       		.uleb128 0x1
 1823 004b 13       		.uleb128 0x13
 1824 004c 00       		.byte	0
 1825 004d 00       		.byte	0
 1826 004e 07       		.uleb128 0x7
 1827 004f 28       		.uleb128 0x28
 1828 0050 00       		.byte	0
 1829 0051 03       		.uleb128 0x3
 1830 0052 0E       		.uleb128 0xe
 1831 0053 1C       		.uleb128 0x1c
 1832 0054 0B       		.uleb128 0xb
 1833 0055 00       		.byte	0
 1834 0056 00       		.byte	0
 1835 0057 08       		.uleb128 0x8
 1836 0058 28       		.uleb128 0x28
 1837 0059 00       		.byte	0
 1838 005a 03       		.uleb128 0x3
 1839 005b 08       		.uleb128 0x8
 1840 005c 1C       		.uleb128 0x1c
 1841 005d 0B       		.uleb128 0xb
 1842 005e 00       		.byte	0
 1843 005f 00       		.byte	0
 1844 0060 09       		.uleb128 0x9
 1845 0061 13       		.uleb128 0x13
 1846 0062 01       		.byte	0x1
 1847 0063 0B       		.uleb128 0xb
 1848 0064 0B       		.uleb128 0xb
 1849 0065 3A       		.uleb128 0x3a
 1850 0066 0B       		.uleb128 0xb
 1851 0067 3B       		.uleb128 0x3b
 1852 0068 05       		.uleb128 0x5
 1853 0069 01       		.uleb128 0x1
 1854 006a 13       		.uleb128 0x13
 1855 006b 00       		.byte	0
 1856 006c 00       		.byte	0
 1857 006d 0A       		.uleb128 0xa
 1858 006e 0D       		.uleb128 0xd
 1859 006f 00       		.byte	0
 1860 0070 03       		.uleb128 0x3
 1861 0071 08       		.uleb128 0x8
ARM GAS  /tmp/ccTGK1Aa.s 			page 40


 1862 0072 3A       		.uleb128 0x3a
 1863 0073 0B       		.uleb128 0xb
 1864 0074 3B       		.uleb128 0x3b
 1865 0075 05       		.uleb128 0x5
 1866 0076 49       		.uleb128 0x49
 1867 0077 13       		.uleb128 0x13
 1868 0078 38       		.uleb128 0x38
 1869 0079 0A       		.uleb128 0xa
 1870 007a 00       		.byte	0
 1871 007b 00       		.byte	0
 1872 007c 0B       		.uleb128 0xb
 1873 007d 0D       		.uleb128 0xd
 1874 007e 00       		.byte	0
 1875 007f 03       		.uleb128 0x3
 1876 0080 0E       		.uleb128 0xe
 1877 0081 3A       		.uleb128 0x3a
 1878 0082 0B       		.uleb128 0xb
 1879 0083 3B       		.uleb128 0x3b
 1880 0084 05       		.uleb128 0x5
 1881 0085 49       		.uleb128 0x49
 1882 0086 13       		.uleb128 0x13
 1883 0087 38       		.uleb128 0x38
 1884 0088 0A       		.uleb128 0xa
 1885 0089 00       		.byte	0
 1886 008a 00       		.byte	0
 1887 008b 0C       		.uleb128 0xc
 1888 008c 16       		.uleb128 0x16
 1889 008d 00       		.byte	0
 1890 008e 03       		.uleb128 0x3
 1891 008f 0E       		.uleb128 0xe
 1892 0090 3A       		.uleb128 0x3a
 1893 0091 0B       		.uleb128 0xb
 1894 0092 3B       		.uleb128 0x3b
 1895 0093 05       		.uleb128 0x5
 1896 0094 49       		.uleb128 0x49
 1897 0095 13       		.uleb128 0x13
 1898 0096 00       		.byte	0
 1899 0097 00       		.byte	0
 1900 0098 0D       		.uleb128 0xd
 1901 0099 04       		.uleb128 0x4
 1902 009a 01       		.byte	0x1
 1903 009b 0B       		.uleb128 0xb
 1904 009c 0B       		.uleb128 0xb
 1905 009d 49       		.uleb128 0x49
 1906 009e 13       		.uleb128 0x13
 1907 009f 3A       		.uleb128 0x3a
 1908 00a0 0B       		.uleb128 0xb
 1909 00a1 3B       		.uleb128 0x3b
 1910 00a2 0B       		.uleb128 0xb
 1911 00a3 01       		.uleb128 0x1
 1912 00a4 13       		.uleb128 0x13
 1913 00a5 00       		.byte	0
 1914 00a6 00       		.byte	0
 1915 00a7 0E       		.uleb128 0xe
 1916 00a8 13       		.uleb128 0x13
 1917 00a9 01       		.byte	0x1
 1918 00aa 03       		.uleb128 0x3
ARM GAS  /tmp/ccTGK1Aa.s 			page 41


 1919 00ab 0E       		.uleb128 0xe
 1920 00ac 0B       		.uleb128 0xb
 1921 00ad 0B       		.uleb128 0xb
 1922 00ae 3A       		.uleb128 0x3a
 1923 00af 0B       		.uleb128 0xb
 1924 00b0 3B       		.uleb128 0x3b
 1925 00b1 0B       		.uleb128 0xb
 1926 00b2 01       		.uleb128 0x1
 1927 00b3 13       		.uleb128 0x13
 1928 00b4 00       		.byte	0
 1929 00b5 00       		.byte	0
 1930 00b6 0F       		.uleb128 0xf
 1931 00b7 0D       		.uleb128 0xd
 1932 00b8 00       		.byte	0
 1933 00b9 03       		.uleb128 0x3
 1934 00ba 0E       		.uleb128 0xe
 1935 00bb 3A       		.uleb128 0x3a
 1936 00bc 0B       		.uleb128 0xb
 1937 00bd 3B       		.uleb128 0x3b
 1938 00be 0B       		.uleb128 0xb
 1939 00bf 49       		.uleb128 0x49
 1940 00c0 13       		.uleb128 0x13
 1941 00c1 38       		.uleb128 0x38
 1942 00c2 0A       		.uleb128 0xa
 1943 00c3 00       		.byte	0
 1944 00c4 00       		.byte	0
 1945 00c5 10       		.uleb128 0x10
 1946 00c6 01       		.uleb128 0x1
 1947 00c7 01       		.byte	0x1
 1948 00c8 49       		.uleb128 0x49
 1949 00c9 13       		.uleb128 0x13
 1950 00ca 01       		.uleb128 0x1
 1951 00cb 13       		.uleb128 0x13
 1952 00cc 00       		.byte	0
 1953 00cd 00       		.byte	0
 1954 00ce 11       		.uleb128 0x11
 1955 00cf 21       		.uleb128 0x21
 1956 00d0 00       		.byte	0
 1957 00d1 49       		.uleb128 0x49
 1958 00d2 13       		.uleb128 0x13
 1959 00d3 2F       		.uleb128 0x2f
 1960 00d4 0B       		.uleb128 0xb
 1961 00d5 00       		.byte	0
 1962 00d6 00       		.byte	0
 1963 00d7 12       		.uleb128 0x12
 1964 00d8 2E       		.uleb128 0x2e
 1965 00d9 01       		.byte	0x1
 1966 00da 3F       		.uleb128 0x3f
 1967 00db 0C       		.uleb128 0xc
 1968 00dc 03       		.uleb128 0x3
 1969 00dd 0E       		.uleb128 0xe
 1970 00de 3A       		.uleb128 0x3a
 1971 00df 0B       		.uleb128 0xb
 1972 00e0 3B       		.uleb128 0x3b
 1973 00e1 0B       		.uleb128 0xb
 1974 00e2 27       		.uleb128 0x27
 1975 00e3 0C       		.uleb128 0xc
ARM GAS  /tmp/ccTGK1Aa.s 			page 42


 1976 00e4 49       		.uleb128 0x49
 1977 00e5 13       		.uleb128 0x13
 1978 00e6 11       		.uleb128 0x11
 1979 00e7 01       		.uleb128 0x1
 1980 00e8 12       		.uleb128 0x12
 1981 00e9 01       		.uleb128 0x1
 1982 00ea 40       		.uleb128 0x40
 1983 00eb 06       		.uleb128 0x6
 1984 00ec 9642     		.uleb128 0x2116
 1985 00ee 0C       		.uleb128 0xc
 1986 00ef 01       		.uleb128 0x1
 1987 00f0 13       		.uleb128 0x13
 1988 00f1 00       		.byte	0
 1989 00f2 00       		.byte	0
 1990 00f3 13       		.uleb128 0x13
 1991 00f4 34       		.uleb128 0x34
 1992 00f5 00       		.byte	0
 1993 00f6 03       		.uleb128 0x3
 1994 00f7 0E       		.uleb128 0xe
 1995 00f8 3A       		.uleb128 0x3a
 1996 00f9 0B       		.uleb128 0xb
 1997 00fa 3B       		.uleb128 0x3b
 1998 00fb 0B       		.uleb128 0xb
 1999 00fc 49       		.uleb128 0x49
 2000 00fd 13       		.uleb128 0x13
 2001 00fe 02       		.uleb128 0x2
 2002 00ff 0A       		.uleb128 0xa
 2003 0100 00       		.byte	0
 2004 0101 00       		.byte	0
 2005 0102 14       		.uleb128 0x14
 2006 0103 2E       		.uleb128 0x2e
 2007 0104 01       		.byte	0x1
 2008 0105 3F       		.uleb128 0x3f
 2009 0106 0C       		.uleb128 0xc
 2010 0107 03       		.uleb128 0x3
 2011 0108 0E       		.uleb128 0xe
 2012 0109 3A       		.uleb128 0x3a
 2013 010a 0B       		.uleb128 0xb
 2014 010b 3B       		.uleb128 0x3b
 2015 010c 0B       		.uleb128 0xb
 2016 010d 27       		.uleb128 0x27
 2017 010e 0C       		.uleb128 0xc
 2018 010f 11       		.uleb128 0x11
 2019 0110 01       		.uleb128 0x1
 2020 0111 12       		.uleb128 0x12
 2021 0112 01       		.uleb128 0x1
 2022 0113 40       		.uleb128 0x40
 2023 0114 06       		.uleb128 0x6
 2024 0115 9742     		.uleb128 0x2117
 2025 0117 0C       		.uleb128 0xc
 2026 0118 01       		.uleb128 0x1
 2027 0119 13       		.uleb128 0x13
 2028 011a 00       		.byte	0
 2029 011b 00       		.byte	0
 2030 011c 15       		.uleb128 0x15
 2031 011d 05       		.uleb128 0x5
 2032 011e 00       		.byte	0
ARM GAS  /tmp/ccTGK1Aa.s 			page 43


 2033 011f 03       		.uleb128 0x3
 2034 0120 08       		.uleb128 0x8
 2035 0121 3A       		.uleb128 0x3a
 2036 0122 0B       		.uleb128 0xb
 2037 0123 3B       		.uleb128 0x3b
 2038 0124 0B       		.uleb128 0xb
 2039 0125 49       		.uleb128 0x49
 2040 0126 13       		.uleb128 0x13
 2041 0127 02       		.uleb128 0x2
 2042 0128 0A       		.uleb128 0xa
 2043 0129 00       		.byte	0
 2044 012a 00       		.byte	0
 2045 012b 16       		.uleb128 0x16
 2046 012c 05       		.uleb128 0x5
 2047 012d 00       		.byte	0
 2048 012e 03       		.uleb128 0x3
 2049 012f 0E       		.uleb128 0xe
 2050 0130 3A       		.uleb128 0x3a
 2051 0131 0B       		.uleb128 0xb
 2052 0132 3B       		.uleb128 0x3b
 2053 0133 0B       		.uleb128 0xb
 2054 0134 49       		.uleb128 0x49
 2055 0135 13       		.uleb128 0x13
 2056 0136 02       		.uleb128 0x2
 2057 0137 0A       		.uleb128 0xa
 2058 0138 00       		.byte	0
 2059 0139 00       		.byte	0
 2060 013a 17       		.uleb128 0x17
 2061 013b 34       		.uleb128 0x34
 2062 013c 00       		.byte	0
 2063 013d 03       		.uleb128 0x3
 2064 013e 08       		.uleb128 0x8
 2065 013f 3A       		.uleb128 0x3a
 2066 0140 0B       		.uleb128 0xb
 2067 0141 3B       		.uleb128 0x3b
 2068 0142 0B       		.uleb128 0xb
 2069 0143 49       		.uleb128 0x49
 2070 0144 13       		.uleb128 0x13
 2071 0145 02       		.uleb128 0x2
 2072 0146 0A       		.uleb128 0xa
 2073 0147 00       		.byte	0
 2074 0148 00       		.byte	0
 2075 0149 18       		.uleb128 0x18
 2076 014a 0F       		.uleb128 0xf
 2077 014b 00       		.byte	0
 2078 014c 0B       		.uleb128 0xb
 2079 014d 0B       		.uleb128 0xb
 2080 014e 49       		.uleb128 0x49
 2081 014f 13       		.uleb128 0x13
 2082 0150 00       		.byte	0
 2083 0151 00       		.byte	0
 2084 0152 19       		.uleb128 0x19
 2085 0153 2E       		.uleb128 0x2e
 2086 0154 01       		.byte	0x1
 2087 0155 3F       		.uleb128 0x3f
 2088 0156 0C       		.uleb128 0xc
 2089 0157 03       		.uleb128 0x3
ARM GAS  /tmp/ccTGK1Aa.s 			page 44


 2090 0158 0E       		.uleb128 0xe
 2091 0159 3A       		.uleb128 0x3a
 2092 015a 0B       		.uleb128 0xb
 2093 015b 3B       		.uleb128 0x3b
 2094 015c 0B       		.uleb128 0xb
 2095 015d 27       		.uleb128 0x27
 2096 015e 0C       		.uleb128 0xc
 2097 015f 11       		.uleb128 0x11
 2098 0160 01       		.uleb128 0x1
 2099 0161 12       		.uleb128 0x12
 2100 0162 01       		.uleb128 0x1
 2101 0163 40       		.uleb128 0x40
 2102 0164 06       		.uleb128 0x6
 2103 0165 9642     		.uleb128 0x2116
 2104 0167 0C       		.uleb128 0xc
 2105 0168 01       		.uleb128 0x1
 2106 0169 13       		.uleb128 0x13
 2107 016a 00       		.byte	0
 2108 016b 00       		.byte	0
 2109 016c 1A       		.uleb128 0x1a
 2110 016d 2E       		.uleb128 0x2e
 2111 016e 00       		.byte	0
 2112 016f 3F       		.uleb128 0x3f
 2113 0170 0C       		.uleb128 0xc
 2114 0171 03       		.uleb128 0x3
 2115 0172 0E       		.uleb128 0xe
 2116 0173 3A       		.uleb128 0x3a
 2117 0174 0B       		.uleb128 0xb
 2118 0175 3B       		.uleb128 0x3b
 2119 0176 0B       		.uleb128 0xb
 2120 0177 27       		.uleb128 0x27
 2121 0178 0C       		.uleb128 0xc
 2122 0179 11       		.uleb128 0x11
 2123 017a 01       		.uleb128 0x1
 2124 017b 12       		.uleb128 0x12
 2125 017c 01       		.uleb128 0x1
 2126 017d 40       		.uleb128 0x40
 2127 017e 0A       		.uleb128 0xa
 2128 017f 9742     		.uleb128 0x2117
 2129 0181 0C       		.uleb128 0xc
 2130 0182 00       		.byte	0
 2131 0183 00       		.byte	0
 2132 0184 1B       		.uleb128 0x1b
 2133 0185 2E       		.uleb128 0x2e
 2134 0186 01       		.byte	0x1
 2135 0187 3F       		.uleb128 0x3f
 2136 0188 0C       		.uleb128 0xc
 2137 0189 03       		.uleb128 0x3
 2138 018a 0E       		.uleb128 0xe
 2139 018b 3A       		.uleb128 0x3a
 2140 018c 0B       		.uleb128 0xb
 2141 018d 3B       		.uleb128 0x3b
 2142 018e 0B       		.uleb128 0xb
 2143 018f 27       		.uleb128 0x27
 2144 0190 0C       		.uleb128 0xc
 2145 0191 49       		.uleb128 0x49
 2146 0192 13       		.uleb128 0x13
ARM GAS  /tmp/ccTGK1Aa.s 			page 45


 2147 0193 11       		.uleb128 0x11
 2148 0194 01       		.uleb128 0x1
 2149 0195 12       		.uleb128 0x12
 2150 0196 01       		.uleb128 0x1
 2151 0197 40       		.uleb128 0x40
 2152 0198 06       		.uleb128 0x6
 2153 0199 9742     		.uleb128 0x2117
 2154 019b 0C       		.uleb128 0xc
 2155 019c 01       		.uleb128 0x1
 2156 019d 13       		.uleb128 0x13
 2157 019e 00       		.byte	0
 2158 019f 00       		.byte	0
 2159 01a0 1C       		.uleb128 0x1c
 2160 01a1 2E       		.uleb128 0x2e
 2161 01a2 01       		.byte	0x1
 2162 01a3 3F       		.uleb128 0x3f
 2163 01a4 0C       		.uleb128 0xc
 2164 01a5 03       		.uleb128 0x3
 2165 01a6 0E       		.uleb128 0xe
 2166 01a7 3A       		.uleb128 0x3a
 2167 01a8 0B       		.uleb128 0xb
 2168 01a9 3B       		.uleb128 0x3b
 2169 01aa 05       		.uleb128 0x5
 2170 01ab 27       		.uleb128 0x27
 2171 01ac 0C       		.uleb128 0xc
 2172 01ad 49       		.uleb128 0x49
 2173 01ae 13       		.uleb128 0x13
 2174 01af 11       		.uleb128 0x11
 2175 01b0 01       		.uleb128 0x1
 2176 01b1 12       		.uleb128 0x12
 2177 01b2 01       		.uleb128 0x1
 2178 01b3 40       		.uleb128 0x40
 2179 01b4 06       		.uleb128 0x6
 2180 01b5 9642     		.uleb128 0x2116
 2181 01b7 0C       		.uleb128 0xc
 2182 01b8 01       		.uleb128 0x1
 2183 01b9 13       		.uleb128 0x13
 2184 01ba 00       		.byte	0
 2185 01bb 00       		.byte	0
 2186 01bc 1D       		.uleb128 0x1d
 2187 01bd 05       		.uleb128 0x5
 2188 01be 00       		.byte	0
 2189 01bf 03       		.uleb128 0x3
 2190 01c0 08       		.uleb128 0x8
 2191 01c1 3A       		.uleb128 0x3a
 2192 01c2 0B       		.uleb128 0xb
 2193 01c3 3B       		.uleb128 0x3b
 2194 01c4 05       		.uleb128 0x5
 2195 01c5 49       		.uleb128 0x49
 2196 01c6 13       		.uleb128 0x13
 2197 01c7 02       		.uleb128 0x2
 2198 01c8 0A       		.uleb128 0xa
 2199 01c9 00       		.byte	0
 2200 01ca 00       		.byte	0
 2201 01cb 1E       		.uleb128 0x1e
 2202 01cc 05       		.uleb128 0x5
 2203 01cd 00       		.byte	0
ARM GAS  /tmp/ccTGK1Aa.s 			page 46


 2204 01ce 03       		.uleb128 0x3
 2205 01cf 0E       		.uleb128 0xe
 2206 01d0 3A       		.uleb128 0x3a
 2207 01d1 0B       		.uleb128 0xb
 2208 01d2 3B       		.uleb128 0x3b
 2209 01d3 05       		.uleb128 0x5
 2210 01d4 49       		.uleb128 0x49
 2211 01d5 13       		.uleb128 0x13
 2212 01d6 02       		.uleb128 0x2
 2213 01d7 0A       		.uleb128 0xa
 2214 01d8 00       		.byte	0
 2215 01d9 00       		.byte	0
 2216 01da 1F       		.uleb128 0x1f
 2217 01db 34       		.uleb128 0x34
 2218 01dc 00       		.byte	0
 2219 01dd 03       		.uleb128 0x3
 2220 01de 08       		.uleb128 0x8
 2221 01df 3A       		.uleb128 0x3a
 2222 01e0 0B       		.uleb128 0xb
 2223 01e1 3B       		.uleb128 0x3b
 2224 01e2 05       		.uleb128 0x5
 2225 01e3 49       		.uleb128 0x49
 2226 01e4 13       		.uleb128 0x13
 2227 01e5 02       		.uleb128 0x2
 2228 01e6 0A       		.uleb128 0xa
 2229 01e7 00       		.byte	0
 2230 01e8 00       		.byte	0
 2231 01e9 20       		.uleb128 0x20
 2232 01ea 34       		.uleb128 0x34
 2233 01eb 00       		.byte	0
 2234 01ec 03       		.uleb128 0x3
 2235 01ed 0E       		.uleb128 0xe
 2236 01ee 3A       		.uleb128 0x3a
 2237 01ef 0B       		.uleb128 0xb
 2238 01f0 3B       		.uleb128 0x3b
 2239 01f1 05       		.uleb128 0x5
 2240 01f2 49       		.uleb128 0x49
 2241 01f3 13       		.uleb128 0x13
 2242 01f4 02       		.uleb128 0x2
 2243 01f5 0A       		.uleb128 0xa
 2244 01f6 00       		.byte	0
 2245 01f7 00       		.byte	0
 2246 01f8 21       		.uleb128 0x21
 2247 01f9 2E       		.uleb128 0x2e
 2248 01fa 01       		.byte	0x1
 2249 01fb 3F       		.uleb128 0x3f
 2250 01fc 0C       		.uleb128 0xc
 2251 01fd 03       		.uleb128 0x3
 2252 01fe 0E       		.uleb128 0xe
 2253 01ff 3A       		.uleb128 0x3a
 2254 0200 0B       		.uleb128 0xb
 2255 0201 3B       		.uleb128 0x3b
 2256 0202 05       		.uleb128 0x5
 2257 0203 27       		.uleb128 0x27
 2258 0204 0C       		.uleb128 0xc
 2259 0205 11       		.uleb128 0x11
 2260 0206 01       		.uleb128 0x1
ARM GAS  /tmp/ccTGK1Aa.s 			page 47


 2261 0207 12       		.uleb128 0x12
 2262 0208 01       		.uleb128 0x1
 2263 0209 40       		.uleb128 0x40
 2264 020a 06       		.uleb128 0x6
 2265 020b 9642     		.uleb128 0x2116
 2266 020d 0C       		.uleb128 0xc
 2267 020e 01       		.uleb128 0x1
 2268 020f 13       		.uleb128 0x13
 2269 0210 00       		.byte	0
 2270 0211 00       		.byte	0
 2271 0212 22       		.uleb128 0x22
 2272 0213 34       		.uleb128 0x34
 2273 0214 00       		.byte	0
 2274 0215 03       		.uleb128 0x3
 2275 0216 0E       		.uleb128 0xe
 2276 0217 3A       		.uleb128 0x3a
 2277 0218 0B       		.uleb128 0xb
 2278 0219 3B       		.uleb128 0x3b
 2279 021a 0B       		.uleb128 0xb
 2280 021b 49       		.uleb128 0x49
 2281 021c 13       		.uleb128 0x13
 2282 021d 3F       		.uleb128 0x3f
 2283 021e 0C       		.uleb128 0xc
 2284 021f 3C       		.uleb128 0x3c
 2285 0220 0C       		.uleb128 0xc
 2286 0221 00       		.byte	0
 2287 0222 00       		.byte	0
 2288 0223 00       		.byte	0
 2289              		.section	.debug_loc,"",%progbits
 2290              	.Ldebug_loc0:
 2291              	.LLST0:
 2292 0000 00000000 		.4byte	.LFB20
 2293 0004 02000000 		.4byte	.LCFI0
 2294 0008 0200     		.2byte	0x2
 2295 000a 7D       		.byte	0x7d
 2296 000b 00       		.sleb128 0
 2297 000c 02000000 		.4byte	.LCFI0
 2298 0010 04000000 		.4byte	.LCFI1
 2299 0014 0200     		.2byte	0x2
 2300 0016 7D       		.byte	0x7d
 2301 0017 04       		.sleb128 4
 2302 0018 04000000 		.4byte	.LCFI1
 2303 001c 48000000 		.4byte	.LFE20
 2304 0020 0200     		.2byte	0x2
 2305 0022 7D       		.byte	0x7d
 2306 0023 10       		.sleb128 16
 2307 0024 00000000 		.4byte	0
 2308 0028 00000000 		.4byte	0
 2309              	.LLST1:
 2310 002c 00000000 		.4byte	.LFB21
 2311 0030 02000000 		.4byte	.LCFI2
 2312 0034 0200     		.2byte	0x2
 2313 0036 7D       		.byte	0x7d
 2314 0037 00       		.sleb128 0
 2315 0038 02000000 		.4byte	.LCFI2
 2316 003c 4A000000 		.4byte	.LFE21
 2317 0040 0200     		.2byte	0x2
ARM GAS  /tmp/ccTGK1Aa.s 			page 48


 2318 0042 7D       		.byte	0x7d
 2319 0043 10       		.sleb128 16
 2320 0044 00000000 		.4byte	0
 2321 0048 00000000 		.4byte	0
 2322              	.LLST2:
 2323 004c 00000000 		.4byte	.LFB22
 2324 0050 02000000 		.4byte	.LCFI3
 2325 0054 0200     		.2byte	0x2
 2326 0056 7D       		.byte	0x7d
 2327 0057 00       		.sleb128 0
 2328 0058 02000000 		.4byte	.LCFI3
 2329 005c 04000000 		.4byte	.LCFI4
 2330 0060 0200     		.2byte	0x2
 2331 0062 7D       		.byte	0x7d
 2332 0063 04       		.sleb128 4
 2333 0064 04000000 		.4byte	.LCFI4
 2334 0068 2E000000 		.4byte	.LFE22
 2335 006c 0200     		.2byte	0x2
 2336 006e 7D       		.byte	0x7d
 2337 006f 10       		.sleb128 16
 2338 0070 00000000 		.4byte	0
 2339 0074 00000000 		.4byte	0
 2340              	.LLST3:
 2341 0078 00000000 		.4byte	.LFB24
 2342 007c 02000000 		.4byte	.LCFI5
 2343 0080 0200     		.2byte	0x2
 2344 0082 7D       		.byte	0x7d
 2345 0083 00       		.sleb128 0
 2346 0084 02000000 		.4byte	.LCFI5
 2347 0088 04000000 		.4byte	.LCFI6
 2348 008c 0200     		.2byte	0x2
 2349 008e 7D       		.byte	0x7d
 2350 008f 08       		.sleb128 8
 2351 0090 04000000 		.4byte	.LCFI6
 2352 0094 78000000 		.4byte	.LFE24
 2353 0098 0200     		.2byte	0x2
 2354 009a 7D       		.byte	0x7d
 2355 009b 18       		.sleb128 24
 2356 009c 00000000 		.4byte	0
 2357 00a0 00000000 		.4byte	0
 2358              	.LLST4:
 2359 00a4 00000000 		.4byte	.LFB26
 2360 00a8 02000000 		.4byte	.LCFI7
 2361 00ac 0200     		.2byte	0x2
 2362 00ae 7D       		.byte	0x7d
 2363 00af 00       		.sleb128 0
 2364 00b0 02000000 		.4byte	.LCFI7
 2365 00b4 04000000 		.4byte	.LCFI8
 2366 00b8 0200     		.2byte	0x2
 2367 00ba 7D       		.byte	0x7d
 2368 00bb 08       		.sleb128 8
 2369 00bc 04000000 		.4byte	.LCFI8
 2370 00c0 B0000000 		.4byte	.LFE26
 2371 00c4 0200     		.2byte	0x2
 2372 00c6 7D       		.byte	0x7d
 2373 00c7 18       		.sleb128 24
 2374 00c8 00000000 		.4byte	0
ARM GAS  /tmp/ccTGK1Aa.s 			page 49


 2375 00cc 00000000 		.4byte	0
 2376              	.LLST5:
 2377 00d0 00000000 		.4byte	.LFB27
 2378 00d4 02000000 		.4byte	.LCFI9
 2379 00d8 0200     		.2byte	0x2
 2380 00da 7D       		.byte	0x7d
 2381 00db 00       		.sleb128 0
 2382 00dc 02000000 		.4byte	.LCFI9
 2383 00e0 04000000 		.4byte	.LCFI10
 2384 00e4 0200     		.2byte	0x2
 2385 00e6 7D       		.byte	0x7d
 2386 00e7 08       		.sleb128 8
 2387 00e8 04000000 		.4byte	.LCFI10
 2388 00ec 58000000 		.4byte	.LFE27
 2389 00f0 0200     		.2byte	0x2
 2390 00f2 7D       		.byte	0x7d
 2391 00f3 18       		.sleb128 24
 2392 00f4 00000000 		.4byte	0
 2393 00f8 00000000 		.4byte	0
 2394              	.LLST6:
 2395 00fc 00000000 		.4byte	.LFB28
 2396 0100 02000000 		.4byte	.LCFI11
 2397 0104 0200     		.2byte	0x2
 2398 0106 7D       		.byte	0x7d
 2399 0107 00       		.sleb128 0
 2400 0108 02000000 		.4byte	.LCFI11
 2401 010c 60000000 		.4byte	.LFE28
 2402 0110 0200     		.2byte	0x2
 2403 0112 7D       		.byte	0x7d
 2404 0113 08       		.sleb128 8
 2405 0114 00000000 		.4byte	0
 2406 0118 00000000 		.4byte	0
 2407              	.LLST7:
 2408 011c 00000000 		.4byte	.LFB29
 2409 0120 02000000 		.4byte	.LCFI12
 2410 0124 0200     		.2byte	0x2
 2411 0126 7D       		.byte	0x7d
 2412 0127 00       		.sleb128 0
 2413 0128 02000000 		.4byte	.LCFI12
 2414 012c 04000000 		.4byte	.LCFI13
 2415 0130 0200     		.2byte	0x2
 2416 0132 7D       		.byte	0x7d
 2417 0133 04       		.sleb128 4
 2418 0134 04000000 		.4byte	.LCFI13
 2419 0138 AE000000 		.4byte	.LFE29
 2420 013c 0200     		.2byte	0x2
 2421 013e 7D       		.byte	0x7d
 2422 013f 20       		.sleb128 32
 2423 0140 00000000 		.4byte	0
 2424 0144 00000000 		.4byte	0
 2425              	.LLST8:
 2426 0148 00000000 		.4byte	.LFB30
 2427 014c 02000000 		.4byte	.LCFI14
 2428 0150 0200     		.2byte	0x2
 2429 0152 7D       		.byte	0x7d
 2430 0153 00       		.sleb128 0
 2431 0154 02000000 		.4byte	.LCFI14
ARM GAS  /tmp/ccTGK1Aa.s 			page 50


 2432 0158 04000000 		.4byte	.LCFI15
 2433 015c 0200     		.2byte	0x2
 2434 015e 7D       		.byte	0x7d
 2435 015f 04       		.sleb128 4
 2436 0160 04000000 		.4byte	.LCFI15
 2437 0164 30000000 		.4byte	.LFE30
 2438 0168 0200     		.2byte	0x2
 2439 016a 7D       		.byte	0x7d
 2440 016b 10       		.sleb128 16
 2441 016c 00000000 		.4byte	0
 2442 0170 00000000 		.4byte	0
 2443              	.LLST9:
 2444 0174 00000000 		.4byte	.LFB31
 2445 0178 02000000 		.4byte	.LCFI16
 2446 017c 0200     		.2byte	0x2
 2447 017e 7D       		.byte	0x7d
 2448 017f 00       		.sleb128 0
 2449 0180 02000000 		.4byte	.LCFI16
 2450 0184 04000000 		.4byte	.LCFI17
 2451 0188 0200     		.2byte	0x2
 2452 018a 7D       		.byte	0x7d
 2453 018b 04       		.sleb128 4
 2454 018c 04000000 		.4byte	.LCFI17
 2455 0190 C8000000 		.4byte	.LFE31
 2456 0194 0200     		.2byte	0x2
 2457 0196 7D       		.byte	0x7d
 2458 0197 20       		.sleb128 32
 2459 0198 00000000 		.4byte	0
 2460 019c 00000000 		.4byte	0
 2461              	.LLST10:
 2462 01a0 00000000 		.4byte	.LFB32
 2463 01a4 02000000 		.4byte	.LCFI18
 2464 01a8 0200     		.2byte	0x2
 2465 01aa 7D       		.byte	0x7d
 2466 01ab 00       		.sleb128 0
 2467 01ac 02000000 		.4byte	.LCFI18
 2468 01b0 04000000 		.4byte	.LCFI19
 2469 01b4 0200     		.2byte	0x2
 2470 01b6 7D       		.byte	0x7d
 2471 01b7 04       		.sleb128 4
 2472 01b8 04000000 		.4byte	.LCFI19
 2473 01bc 3C000000 		.4byte	.LFE32
 2474 01c0 0200     		.2byte	0x2
 2475 01c2 7D       		.byte	0x7d
 2476 01c3 10       		.sleb128 16
 2477 01c4 00000000 		.4byte	0
 2478 01c8 00000000 		.4byte	0
 2479              		.section	.debug_aranges,"",%progbits
 2480 0000 7C000000 		.4byte	0x7c
 2481 0004 0200     		.2byte	0x2
 2482 0006 00000000 		.4byte	.Ldebug_info0
 2483 000a 04       		.byte	0x4
 2484 000b 00       		.byte	0
 2485 000c 0000     		.2byte	0
 2486 000e 0000     		.2byte	0
 2487 0010 00000000 		.4byte	.LFB20
 2488 0014 48000000 		.4byte	.LFE20-.LFB20
ARM GAS  /tmp/ccTGK1Aa.s 			page 51


 2489 0018 00000000 		.4byte	.LFB21
 2490 001c 4A000000 		.4byte	.LFE21-.LFB21
 2491 0020 00000000 		.4byte	.LFB22
 2492 0024 2E000000 		.4byte	.LFE22-.LFB22
 2493 0028 00000000 		.4byte	.LFB23
 2494 002c 28000000 		.4byte	.LFE23-.LFB23
 2495 0030 00000000 		.4byte	.LFB24
 2496 0034 78000000 		.4byte	.LFE24-.LFB24
 2497 0038 00000000 		.4byte	.LFB25
 2498 003c 14000000 		.4byte	.LFE25-.LFB25
 2499 0040 00000000 		.4byte	.LFB26
 2500 0044 B0000000 		.4byte	.LFE26-.LFB26
 2501 0048 00000000 		.4byte	.LFB27
 2502 004c 58000000 		.4byte	.LFE27-.LFB27
 2503 0050 00000000 		.4byte	.LFB28
 2504 0054 60000000 		.4byte	.LFE28-.LFB28
 2505 0058 00000000 		.4byte	.LFB29
 2506 005c AE000000 		.4byte	.LFE29-.LFB29
 2507 0060 00000000 		.4byte	.LFB30
 2508 0064 30000000 		.4byte	.LFE30-.LFB30
 2509 0068 00000000 		.4byte	.LFB31
 2510 006c C8000000 		.4byte	.LFE31-.LFB31
 2511 0070 00000000 		.4byte	.LFB32
 2512 0074 3C000000 		.4byte	.LFE32-.LFB32
 2513 0078 00000000 		.4byte	0
 2514 007c 00000000 		.4byte	0
 2515              		.section	.debug_ranges,"",%progbits
 2516              	.Ldebug_ranges0:
 2517 0000 00000000 		.4byte	.LFB20
 2518 0004 48000000 		.4byte	.LFE20
 2519 0008 00000000 		.4byte	.LFB21
 2520 000c 4A000000 		.4byte	.LFE21
 2521 0010 00000000 		.4byte	.LFB22
 2522 0014 2E000000 		.4byte	.LFE22
 2523 0018 00000000 		.4byte	.LFB23
 2524 001c 28000000 		.4byte	.LFE23
 2525 0020 00000000 		.4byte	.LFB24
 2526 0024 78000000 		.4byte	.LFE24
 2527 0028 00000000 		.4byte	.LFB25
 2528 002c 14000000 		.4byte	.LFE25
 2529 0030 00000000 		.4byte	.LFB26
 2530 0034 B0000000 		.4byte	.LFE26
 2531 0038 00000000 		.4byte	.LFB27
 2532 003c 58000000 		.4byte	.LFE27
 2533 0040 00000000 		.4byte	.LFB28
 2534 0044 60000000 		.4byte	.LFE28
 2535 0048 00000000 		.4byte	.LFB29
 2536 004c AE000000 		.4byte	.LFE29
 2537 0050 00000000 		.4byte	.LFB30
 2538 0054 30000000 		.4byte	.LFE30
 2539 0058 00000000 		.4byte	.LFB31
 2540 005c C8000000 		.4byte	.LFE31
 2541 0060 00000000 		.4byte	.LFB32
 2542 0064 3C000000 		.4byte	.LFE32
 2543 0068 00000000 		.4byte	0
 2544 006c 00000000 		.4byte	0
 2545              		.section	.debug_line,"",%progbits
ARM GAS  /tmp/ccTGK1Aa.s 			page 52


 2546              	.Ldebug_line0:
 2547 0000 9B020000 		.section	.debug_str,"MS",%progbits,1
 2547      02000C01 
 2547      00000201 
 2547      FB0E0D00 
 2547      01010101 
 2548              	.LASF62:
 2549 0000 57726974 		.ascii	"WriteFlash\000"
 2549      65466C61 
 2549      736800
 2550              	.LASF31:
 2551 000b 6163756D 		.ascii	"acumm_w2s_index\000"
 2551      6D5F7732 
 2551      735F696E 
 2551      64657800 
 2552              	.LASF65:
 2553 001b 705F7261 		.ascii	"p_ram\000"
 2553      6D00
 2554              	.LASF21:
 2555 0021 464C4153 		.ascii	"FLASH_ERROR_WRP\000"
 2555      485F4552 
 2555      524F525F 
 2555      57525000 
 2556              	.LASF28:
 2557 0031 6E756D5F 		.ascii	"num_propio\000"
 2557      70726F70 
 2557      696F00
 2558              	.LASF13:
 2559 003c 73697A65 		.ascii	"sizetype\000"
 2559      74797065 
 2559      00
 2560              	.LASF35:
 2561 0045 70617261 		.ascii	"parameters_typedef\000"
 2561      6D657465 
 2561      72735F74 
 2561      79706564 
 2561      656600
 2562              	.LASF6:
 2563 0058 5F5F7569 		.ascii	"__uint32_t\000"
 2563      6E743332 
 2563      5F7400
 2564              	.LASF37:
 2565 0063 50415353 		.ascii	"PASSED\000"
 2565      454400
 2566              	.LASF52:
 2567 006a 41646472 		.ascii	"Address\000"
 2567      65737300 
 2568              	.LASF40:
 2569 0072 72657370 		.ascii	"resp\000"
 2569      00
 2570              	.LASF5:
 2571 0077 5F5F7569 		.ascii	"__uint16_t\000"
 2571      6E743136 
 2571      5F7400
 2572              	.LASF41:
 2573 0082 4261636B 		.ascii	"BackupPage\000"
 2573      75705061 
ARM GAS  /tmp/ccTGK1Aa.s 			page 53


 2573      676500
 2574              	.LASF39:
 2575 008d 70616765 		.ascii	"page_addr\000"
 2575      5F616464 
 2575      7200
 2576              	.LASF15:
 2577 0097 4B455952 		.ascii	"KEYR\000"
 2577      00
 2578              	.LASF49:
 2579 009c 464C4153 		.ascii	"FLASH_Unlock\000"
 2579      485F556E 
 2579      6C6F636B 
 2579      00
 2580              	.LASF26:
 2581 00a9 6E756D5F 		.ascii	"num_reportar\000"
 2581      7265706F 
 2581      72746172 
 2581      00
 2582              	.LASF25:
 2583 00b6 464C4153 		.ascii	"FLASH_Status\000"
 2583      485F5374 
 2583      61747573 
 2583      00
 2584              	.LASF46:
 2585 00c3 464C4153 		.ascii	"FLASH_ErasePage\000"
 2585      485F4572 
 2585      61736550 
 2585      61676500 
 2586              	.LASF2:
 2587 00d3 73686F72 		.ascii	"short int\000"
 2587      7420696E 
 2587      7400
 2588              	.LASF70:
 2589 00dd 70617261 		.ascii	"param_struct\000"
 2589      6D5F7374 
 2589      72756374 
 2589      00
 2590              	.LASF16:
 2591 00ea 4F50544B 		.ascii	"OPTKEYR\000"
 2591      45595200 
 2592              	.LASF8:
 2593 00f2 6C6F6E67 		.ascii	"long long int\000"
 2593      206C6F6E 
 2593      6720696E 
 2593      7400
 2594              	.LASF4:
 2595 0100 6C6F6E67 		.ascii	"long int\000"
 2595      20696E74 
 2595      00
 2596              	.LASF18:
 2597 0109 57525052 		.ascii	"WRPR\000"
 2597      00
 2598              	.LASF53:
 2599 010e 44617461 		.ascii	"Data\000"
 2599      00
 2600              	.LASF69:
 2601 0113 70617261 		.ascii	"parameters\000"
ARM GAS  /tmp/ccTGK1Aa.s 			page 54


 2601      6D657465 
 2601      727300
 2602              	.LASF1:
 2603 011e 756E7369 		.ascii	"unsigned char\000"
 2603      676E6564 
 2603      20636861 
 2603      7200
 2604              	.LASF29:
 2605 012c 6163756D 		.ascii	"acumm_wh\000"
 2605      6D5F7768 
 2605      00
 2606              	.LASF38:
 2607 0135 6C6F6E67 		.ascii	"long double\000"
 2607      20646F75 
 2607      626C6500 
 2608              	.LASF47:
 2609 0141 50616765 		.ascii	"Page_Address\000"
 2609      5F416464 
 2609      72657373 
 2609      00
 2610              	.LASF67:
 2611 014e 7372632F 		.ascii	"src/flash_program.c\000"
 2611      666C6173 
 2611      685F7072 
 2611      6F677261 
 2611      6D2E6300 
 2612              	.LASF32:
 2613 0162 74696D65 		.ascii	"timer_reportar\000"
 2613      725F7265 
 2613      706F7274 
 2613      617200
 2614              	.LASF66:
 2615 0171 474E5520 		.ascii	"GNU C11 5.2.1 20151202 (release) [ARM/embedded-5-br"
 2615      43313120 
 2615      352E322E 
 2615      31203230 
 2615      31353132 
 2616 01a4 616E6368 		.ascii	"anch revision 231848] -mcpu=cortex-m0 -mthumb -g -g"
 2616      20726576 
 2616      6973696F 
 2616      6E203233 
 2616      31383438 
 2617 01d7 64776172 		.ascii	"dwarf-2 -O0 -fomit-frame-pointer -fdata-sections -f"
 2617      662D3220 
 2617      2D4F3020 
 2617      2D666F6D 
 2617      69742D66 
 2618 020a 66756E63 		.ascii	"function-sections\000"
 2618      74696F6E 
 2618      2D736563 
 2618      74696F6E 
 2618      7300
 2619              	.LASF44:
 2620 021c 77697468 		.ascii	"with_lock\000"
 2620      5F6C6F63 
 2620      6B00
 2621              	.LASF0:
ARM GAS  /tmp/ccTGK1Aa.s 			page 55


 2622 0226 7369676E 		.ascii	"signed char\000"
 2622      65642063 
 2622      68617200 
 2623              	.LASF9:
 2624 0232 6C6F6E67 		.ascii	"long long unsigned int\000"
 2624      206C6F6E 
 2624      6720756E 
 2624      7369676E 
 2624      65642069 
 2625              	.LASF12:
 2626 0249 75696E74 		.ascii	"uint32_t\000"
 2626      33325F74 
 2626      00
 2627              	.LASF10:
 2628 0252 756E7369 		.ascii	"unsigned int\000"
 2628      676E6564 
 2628      20696E74 
 2628      00
 2629              	.LASF23:
 2630 025f 464C4153 		.ascii	"FLASH_COMPLETE\000"
 2630      485F434F 
 2630      4D504C45 
 2630      544500
 2631              	.LASF20:
 2632 026e 464C4153 		.ascii	"FLASH_BUSY\000"
 2632      485F4255 
 2632      535900
 2633              	.LASF24:
 2634 0279 464C4153 		.ascii	"FLASH_TIMEOUT\000"
 2634      485F5449 
 2634      4D454F55 
 2634      5400
 2635              	.LASF43:
 2636 0287 705F6164 		.ascii	"p_addr\000"
 2636      647200
 2637              	.LASF68:
 2638 028e 2F686F6D 		.ascii	"/home/med/Documents/stm32_proj/emacs_dexel_pfc\000"
 2638      652F6D65 
 2638      642F446F 
 2638      63756D65 
 2638      6E74732F 
 2639              	.LASF48:
 2640 02bd 73746174 		.ascii	"status\000"
 2640      757300
 2641              	.LASF58:
 2642 02c4 57726974 		.ascii	"WritePage\000"
 2642      65506167 
 2642      6500
 2643              	.LASF55:
 2644 02ce 54696D65 		.ascii	"Timeout\000"
 2644      6F757400 
 2645              	.LASF34:
 2646 02d6 63686172 		.ascii	"char\000"
 2646      00
 2647              	.LASF11:
 2648 02db 75696E74 		.ascii	"uint16_t\000"
 2648      31365F74 
ARM GAS  /tmp/ccTGK1Aa.s 			page 56


 2648      00
 2649              	.LASF27:
 2650 02e4 696D6569 		.ascii	"imei\000"
 2650      00
 2651              	.LASF50:
 2652 02e9 464C4153 		.ascii	"FLASH_Lock\000"
 2652      485F4C6F 
 2652      636B00
 2653              	.LASF45:
 2654 02f4 45726173 		.ascii	"EraseAllMemory_FLASH\000"
 2654      65416C6C 
 2654      4D656D6F 
 2654      72795F46 
 2654      4C415348 
 2655              	.LASF60:
 2656 0309 57726974 		.ascii	"WriteConfigurations\000"
 2656      65436F6E 
 2656      66696775 
 2656      72617469 
 2656      6F6E7300 
 2657              	.LASF56:
 2658 031d 464C4153 		.ascii	"FLASH_GetStatus\000"
 2658      485F4765 
 2658      74537461 
 2658      74757300 
 2659              	.LASF61:
 2660 032d 705F7061 		.ascii	"p_param\000"
 2660      72616D00 
 2661              	.LASF63:
 2662 0335 6C656E5F 		.ascii	"len_in_4\000"
 2662      696E5F34 
 2662      00
 2663              	.LASF3:
 2664 033e 73686F72 		.ascii	"short unsigned int\000"
 2664      7420756E 
 2664      7369676E 
 2664      65642069 
 2664      6E7400
 2665              	.LASF30:
 2666 0351 6163756D 		.ascii	"acumm_w2s\000"
 2666      6D5F7732 
 2666      7300
 2667              	.LASF7:
 2668 035b 6C6F6E67 		.ascii	"long unsigned int\000"
 2668      20756E73 
 2668      69676E65 
 2668      6420696E 
 2668      7400
 2669              	.LASF57:
 2670 036d 464C4153 		.ascii	"FLASHstatus\000"
 2670      48737461 
 2670      74757300 
 2671              	.LASF64:
 2672 0379 47657446 		.ascii	"GetFlashConf\000"
 2672      6C617368 
 2672      436F6E66 
 2672      00
ARM GAS  /tmp/ccTGK1Aa.s 			page 57


 2673              	.LASF14:
 2674 0386 52455345 		.ascii	"RESET\000"
 2674      5400
 2675              	.LASF22:
 2676 038c 464C4153 		.ascii	"FLASH_ERROR_PROGRAM\000"
 2676      485F4552 
 2676      524F525F 
 2676      50524F47 
 2676      52414D00 
 2677              	.LASF51:
 2678 03a0 464C4153 		.ascii	"FLASH_ProgramWord\000"
 2678      485F5072 
 2678      6F677261 
 2678      6D576F72 
 2678      6400
 2679              	.LASF17:
 2680 03b2 52455345 		.ascii	"RESERVED\000"
 2680      52564544 
 2680      00
 2681              	.LASF19:
 2682 03bb 464C4153 		.ascii	"FLASH_TypeDef\000"
 2682      485F5479 
 2682      70654465 
 2682      6600
 2683              	.LASF54:
 2684 03c9 464C4153 		.ascii	"FLASH_WaitForLastOperation\000"
 2684      485F5761 
 2684      6974466F 
 2684      724C6173 
 2684      744F7065 
 2685              	.LASF59:
 2686 03e4 705F7665 		.ascii	"p_verif\000"
 2686      72696600 
 2687              	.LASF42:
 2688 03ec 45726173 		.ascii	"ErasePage\000"
 2688      65506167 
 2688      6500
 2689              	.LASF36:
 2690 03f6 4641494C 		.ascii	"FAILED\000"
 2690      454400
 2691              	.LASF33:
 2692 03fd 73656E64 		.ascii	"send_energy_flag\000"
 2692      5F656E65 
 2692      7267795F 
 2692      666C6167 
 2692      00
 2693              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/ccTGK1Aa.s 			page 58


DEFINED SYMBOLS
                            *ABS*:00000000 flash_program.c
     /tmp/ccTGK1Aa.s:54     .text.EraseAllMemory_FLASH:00000000 $t
     /tmp/ccTGK1Aa.s:59     .text.EraseAllMemory_FLASH:00000000 EraseAllMemory_FLASH
     /tmp/ccTGK1Aa.s:186    .text.ErasePage:00000000 ErasePage
     /tmp/ccTGK1Aa.s:116    .text.EraseAllMemory_FLASH:00000044 $d
     /tmp/ccTGK1Aa.s:121    .text.BackupPage:00000000 $t
     /tmp/ccTGK1Aa.s:126    .text.BackupPage:00000000 BackupPage
     /tmp/ccTGK1Aa.s:181    .text.ErasePage:00000000 $t
     /tmp/ccTGK1Aa.s:231    .text.FLASH_Unlock:00000000 FLASH_Unlock
     /tmp/ccTGK1Aa.s:269    .text.FLASH_ErasePage:00000000 FLASH_ErasePage
     /tmp/ccTGK1Aa.s:359    .text.FLASH_Lock:00000000 FLASH_Lock
     /tmp/ccTGK1Aa.s:226    .text.FLASH_Unlock:00000000 $t
     /tmp/ccTGK1Aa.s:257    .text.FLASH_Unlock:0000001c $d
     /tmp/ccTGK1Aa.s:264    .text.FLASH_ErasePage:00000000 $t
     /tmp/ccTGK1Aa.s:510    .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
     /tmp/ccTGK1Aa.s:349    .text.FLASH_ErasePage:00000074 $d
     /tmp/ccTGK1Aa.s:354    .text.FLASH_Lock:00000000 $t
     /tmp/ccTGK1Aa.s:377    .text.FLASH_Lock:00000010 $d
     /tmp/ccTGK1Aa.s:382    .text.FLASH_ProgramWord:00000000 $t
     /tmp/ccTGK1Aa.s:387    .text.FLASH_ProgramWord:00000000 FLASH_ProgramWord
     /tmp/ccTGK1Aa.s:500    .text.FLASH_ProgramWord:000000ac $d
     /tmp/ccTGK1Aa.s:505    .text.FLASH_WaitForLastOperation:00000000 $t
     /tmp/ccTGK1Aa.s:587    .text.FLASH_GetStatus:00000000 FLASH_GetStatus
     /tmp/ccTGK1Aa.s:582    .text.FLASH_GetStatus:00000000 $t
     /tmp/ccTGK1Aa.s:656    .text.FLASH_GetStatus:0000005c $d
     /tmp/ccTGK1Aa.s:661    .text.WritePage:00000000 $t
     /tmp/ccTGK1Aa.s:666    .text.WritePage:00000000 WritePage
     /tmp/ccTGK1Aa.s:787    .text.WriteConfigurations:00000000 $t
     /tmp/ccTGK1Aa.s:792    .text.WriteConfigurations:00000000 WriteConfigurations
     /tmp/ccTGK1Aa.s:842    .text.WriteFlash:00000000 WriteFlash
     /tmp/ccTGK1Aa.s:832    .text.WriteConfigurations:0000002c $d
     /tmp/ccTGK1Aa.s:837    .text.WriteFlash:00000000 $t
     /tmp/ccTGK1Aa.s:976    .text.GetFlashConf:00000000 $t
     /tmp/ccTGK1Aa.s:981    .text.GetFlashConf:00000000 GetFlashConf
     /tmp/ccTGK1Aa.s:1026   .text.GetFlashConf:00000038 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
strncpy
